"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[9930],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return m}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},s=Object.keys(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)a=s[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),u=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),m=n,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return a?r.createElement(f,o(o({ref:t},c),{},{components:a})):r.createElement(f,o({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,o=new Array(s);o[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var u=2;u<s;u++)o[u]=a[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},20671:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=a(87462),n=a(63366),s=(a(67294),a(3905)),o=["components"],i={author:"Sijie Guo",authorURL:"https://twitter.com/sijieg",title:"Apache Pulsar 2.1.0-incubating"},l=void 0,u={permalink:"/fr/blog/2018/08/06/Apache-Pulsar-2-1-0",editUrl:"https://github.com/apache/pulsar/edit/master/site2/website-next/blog/2018-08-06-Apache-Pulsar-2-1-0.md",source:"@site/i18n/fr/docusaurus-plugin-content-blog/2018-08-06-Apache-Pulsar-2-1-0.md",title:"Apache Pulsar 2.1.0-incubating",description:"Nous sommes fiers de vous pr\xe9senter la nouvelle version 2.1.0-incubating de Pulsar. Cette version est l'aboutissement de 2 mois de travail qui ont apport\xe9 plusieurs nouvelles fonctionnalit\xe9s et am\xe9liorations \xe0 Pulsar.",date:"2018-08-06T00:00:00.000Z",formattedDate:"6 ao\xfbt 2018",tags:[],readingTime:3.585,truncated:!0,authors:[{name:"Sijie Guo",url:"https://twitter.com/sijieg"}],frontMatter:{author:"Sijie Guo",authorURL:"https://twitter.com/sijieg",title:"Apache Pulsar 2.1.0-incubating"},prevItem:{title:"Apache Pulsar 2.3.0",permalink:"/fr/blog/2019/02/20/Apache-Pulsar-2-3-0"}},c={authorsImageUrls:[void 0]},p=[{value:"Pulsar IO",id:"pulsar-io",level:2},{value:"Stockage \xe0 paliers",id:"stockage-\xe0-paliers",level:2},{value:"Stateful Function",id:"stateful-function",level:2},{value:"Schemas",id:"schemas",level:2},{value:"Clients",id:"clients",level:2}],d={toc:p};function m(e){var t=e.components,a=(0,n.Z)(e,o);return(0,s.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Nous sommes fiers de vous pr\xe9senter la nouvelle version 2.1.0-incubating de Pulsar. Cette version est l'aboutissement de 2 mois de travail qui ont apport\xe9 plusieurs nouvelles fonctionnalit\xe9s et am\xe9liorations \xe0 Pulsar."),(0,s.kt)("p",null,"Dans Pulsar 2.1, vous retrouverez :"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"La structure de connecteur ",(0,s.kt)("a",{parentName:"li",href:"/docs/io-overview"},"Pulsar IO")," et une liste de ",(0,s.kt)("a",{parentName:"li",href:"/docs/io-connectors"},"connecteurs int\xe9gr\xe9s")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-pulsar/wiki/PIP-17:-Tiered-storage-for-Pulsar-topics"},"PIP-17")," : ",(0,s.kt)("a",{parentName:"li",href:"/docs/concepts-tiered-storage"},"Stockage \xe0 paliers")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/functions-state"},"Fonctions avec \xe9tat")," Pulsar"),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/client-libraries-go"},"Aller au client")),(0,s.kt)("li",{parentName:"ul"},"Les sch\xe9mas ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-pulsar/blob/v2.1.0-incubating/pulsar-client-schema/src/main/java/org/apache/pulsar/client/impl/schema/AvroSchema.java"},"Avro")," et ",(0,s.kt)("a",{parentName:"li",href:"https://github.com/apache/incubator-pulsar/blob/v2.1.0-incubating/pulsar-client-schema/src/main/java/org/apache/pulsar/client/impl/schema/ProtobufSchema.java"},"Protobuf"))),(0,s.kt)("p",null,"Pour plus de d\xe9tails, veuillez regarder les ",(0,s.kt)("a",{parentName:"p",href:"/release-notes/#2.1.0-incubating"},"notes de versions")," d\xe9taill\xe9es et la ",(0,s.kt)("a",{parentName:"p",href:"/versions"},"documentation 2.1.0"),"."),(0,s.kt)("p",null,"Nous fournirons un bref r\xe9sum\xe9 de ces fonctionnalit\xe9s dans la section ci-dessous."),(0,s.kt)("h2",{id:"pulsar-io"},"Pulsar IO"),(0,s.kt)("p",null,"Depuis Pulsar 2.0, nous avons introduit une structure informatique l\xe9g\xe8re inspir\xe9e du sans serveur des ",(0,s.kt)("a",{parentName:"p",href:"/docs/functions-overview"},"Fonctions Pulsar"),", proposant la fa\xe7on la plus simple d'impl\xe9menter une logique de traitement en flux sp\xe9cifique \xe0 l'application de toute complexit\xe9. Beaucoup de d\xe9veloppeurs adorent les fonctions Pulsar car elles requi\xe8rent un minimum de passe-partout et sont faciles \xe0 raisonner."),(0,s.kt)("p",null,"Dans Pulsar 2.1, nous avons continu\xe9 de suivre ce principe de \"simplicit\xe9 prioritaire\" sur le d\xe9veloppement de Pulsar. Nous avons d\xe9velopp\xe9 cette structure de connecteurs IO (entr\xe9e/sortie) en plus des fonctions Pulsar, pour simplifier l'entr\xe9e et la sortie de donn\xe9es d'Apache Pulsar. Vous n'avez pas besoin d'\xe9crire une seule ligne de code. Tout ce dont vous avez besoin, c'est de pr\xe9parer un fichier de configuration du syst\xe8me auquel vous voulez vous connecter, et utiliser l'administrateur Pulsar CLI pour soumettre un connecteur \xe0 Pulsar. Pulsar s'occupera de tous les autres \xe9l\xe9ments, comme la tol\xe9rance aux erreurs, le r\xe9\xe9quilibrage, etc."),(0,s.kt)("p",null,"Il y a 6 connecteurs int\xe9gr\xe9s publi\xe9s dans la version 2.1. Il y a :"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/io-aerospike/"},"Le connecteur Aerospike")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/io-cassandra/"},"Le connecteur Cassandra")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/io-kafka/"},"Le connecteur Kafka")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/io-kinesis/"},"Le connecteur Kinesis")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/io-rabbitmq/"},"Le connecteur RabbitMQ")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"/docs/io-twitter/"},"Le connecteur Twitter Firehose"))),(0,s.kt)("p",null,"Vous pouvez suivre ",(0,s.kt)("a",{parentName:"p",href:"/docs/io-quickstart"},"le tutoriel")," pour essayer Pulsar IO sur la connexion de Pulsar avec ",(0,s.kt)("a",{parentName:"p",href:"http://cassandra.apache.org/"},"Apache Cassandra"),"."),(0,s.kt)("p",null,"D'autres connecteurs seront disponibles dans de futures versions. Si vous int\xe9ressez par la contribution d'un connecteur \xe0 Pulsar, consultez le guide ",(0,s.kt)("a",{parentName:"p",href:"/docs/io-develop"},"D\xe9velopper des connecteurs"),". C'est aussi simple que d'\xe9crire une fonction Pulsar."),(0,s.kt)("h2",{id:"stockage-\xe0-paliers"},"Stockage \xe0 paliers"),(0,s.kt)("p",null,"L'un des avantages d'Apache Pulsar est ",(0,s.kt)("a",{parentName:"p",href:"https://streaml.io/blog/pulsar-segment-based-architecture"},"son stockage par segment")," en utilisant ",(0,s.kt)("a",{parentName:"p",href:"https://bookkeeper.apache.org/"},"Apache BookKeeper"),". Vous pouvez stocker un carnet de discussion aussi grand que vous le souhaitez. When the cluster starts to run out of space, you just add another storage node, and the system will automatically pickup the new storage nodes and start using them without rebalancing partitions. However, this can start to get expensive after a while."),(0,s.kt)("p",null,"Pulsar mitigates this cost/size trade-off by providing Tiered Storage. Tiered Storage turns your Pulsar topics into real ",(0,s.kt)("em",{parentName:"p"},"infinite")," streams, by offloading older segments into a long term storage, such as AWS S3, GCS and HDFS, which is designed for storing cold data. To the end user, there is no perceivable difference between consuming streams whose data is stored in BookKeeper or in long term storage. All the underlying offloading mechanisms and metadata management are transparent to applications."),(0,s.kt)("p",null,"Currently ",(0,s.kt)("a",{parentName:"p",href:"https://aws.amazon.com/s3/"},"S3")," is supported in 2.1. More offloaders (such as Google GCS, Azure Blobstore, and HDFS) are coming in future releases."),(0,s.kt)("p",null,"If you are interested in this feature, you can checkout more details ",(0,s.kt)("a",{parentName:"p",href:"/docs/cookbooks-tiered-storage"},"here"),"."),(0,s.kt)("h2",{id:"stateful-function"},"Stateful Function"),(0,s.kt)("p",null,"The greatest challenge that stream processing engines face is managing ",(0,s.kt)("em",{parentName:"p"},"state"),". So does Pulsar Functions. As the goal for Pulsar Functions is to simplify developing stream native processing logic, we also want to provide an easier way for Pulsar Functions to manage their state. We introduced a set of ",(0,s.kt)("a",{parentName:"p",href:"/docs/functions-state/#api"},"State API")," for Pulsar Functions to store their state. It integrates with the table service in Apache BookKeeper for storing the state."),(0,s.kt)("p",null,"It is released as a developer preview feature in Pulsar Functions Java SDK. We would like to collect feedback to improve it in future releases."),(0,s.kt)("h2",{id:"schemas"},"Schemas"),(0,s.kt)("p",null,"Pulsar 2.0 introduces native support for schemas in Pulsar. It means you can declare how message data looks and have Pulsar enforce that producers can only publish valid data on the topics. In 2.0, Pulsar only supports ",(0,s.kt)("inlineCode",{parentName:"p"},"String"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"bytes")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"JSON")," schemas. We introduced the support for ",(0,s.kt)("a",{parentName:"p",href:"https://avro.apache.org/"},"Avro")," and ",(0,s.kt)("a",{parentName:"p",href:"https://developers.google.com/protocol-buffers/"},"Protobuf")," in this release."),(0,s.kt)("h2",{id:"clients"},"Clients"),(0,s.kt)("p",null,"We have introduced a new ",(0,s.kt)("a",{parentName:"p",href:"/docs/client-libraries-go"},"Go")," client in 2.1 release. The Pulsar Go client library is based on the ",(0,s.kt)("a",{parentName:"p",href:"/docs/client-libraries-cpp/"},"C++")," client library."),(0,s.kt)("p",null,"Follow ",(0,s.kt)("a",{parentName:"p",href:"/docs/client-libraries-go/#installing-go-package"},"the instructions")," to try it out in your Go applications!"))}m.isMDXComponent=!0}}]);