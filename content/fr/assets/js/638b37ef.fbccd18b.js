"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[4717],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),k=r,h=d["".concat(s,".").concat(k)]||d[k]||p[k]||i;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},97316:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const i={id:"security-kerberos",title:"Authentication using Kerberos",sidebar_label:"Authentication using Kerberos"},o=void 0,l={unversionedId:"security-kerberos",id:"security-kerberos",title:"Authentication using Kerberos",description:"Kerberos is a network authentication protocol. By using secret-key cryptography, Kerberos is designed to provide strong authentication for client applications and server applications.",source:"@site/docs/security-kerberos.md",sourceDirName:".",slug:"/security-kerberos",permalink:"/fr/docs/next/security-kerberos",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/security-kerberos.md",tags:[],version:"current",frontMatter:{id:"security-kerberos",title:"Authentication using Kerberos",sidebar_label:"Authentication using Kerberos"},sidebar:"docsSidebar",previous:{title:"Authentication using Athenz",permalink:"/fr/docs/next/security-athenz"},next:{title:"Authentication using OAuth 2.0 access tokens",permalink:"/fr/docs/next/security-oauth2"}},s={},u=[{value:"Configure Kerberos between client and broker",id:"configure-kerberos-between-client-and-broker",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Kerberos principals",id:"kerberos-principals",level:4},{value:"Connect to KDC",id:"connect-to-kdc",level:4},{value:"Configure JAAS configuration file",id:"configure-jaas-configuration-file",level:4},{value:"Configure Kerberos authentication for brokers",id:"configure-kerberos-authentication-for-brokers",level:3},{value:"Configure the <code>broker.conf</code> file",id:"configure-the-brokerconf-file",level:4},{value:"Set broker JVM parameters",id:"set-broker-jvm-parameters",level:4},{value:"Configure Kerberos authentication for clients",id:"configure-kerberos-authentication-for-clients",level:3},{value:"Java Client and Java Admin Client",id:"java-client-and-java-admin-client",level:4},{value:"Configure CLI tools",id:"configure-cli-tools",level:4},{value:"Configure Kerberos authentication for proxies",id:"configure-kerberos-authentication-for-proxies",level:2},{value:"Create principals in Kerberos",id:"create-principals-in-kerberos",level:3},{value:"Add a section in JAAS configuration file",id:"add-a-section-in-jaas-configuration-file",level:3},{value:"Configure proxy clients",id:"configure-proxy-clients",level:3},{value:"Configure proxy service",id:"configure-proxy-service",level:3},{value:"Configure brokers",id:"configure-brokers",level:3},{value:"Authorization and role token",id:"authorization-and-role-token",level:2},{value:"Configure Kerberos authentication between ZooKeeper and broker",id:"configure-kerberos-authentication-between-zookeeper-and-broker",level:2},{value:"Configure Kerberos authentication between BookKeeper and broker",id:"configure-kerberos-authentication-between-bookkeeper-and-broker",level:2}],c={toc:u};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://web.mit.edu/kerberos/"},"Kerberos")," is a network authentication protocol. By using secret-key cryptography, ",(0,r.kt)("a",{parentName:"p",href:"https://web.mit.edu/kerberos/"},"Kerberos")," is designed to provide strong authentication for client applications and server applications. "),(0,r.kt)("p",null,"In Pulsar, you can use Kerberos with ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Simple_Authentication_and_Security_Layer"},"SASL")," as a choice for authentication. And Pulsar uses the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Java_Authentication_and_Authorization_Service"},"Java Authentication and Authorization Service (JAAS)")," for SASL configuration. You need to provide JAAS configurations for Kerberos authentication. "),(0,r.kt)("p",null,"This document introduces how to configure ",(0,r.kt)("inlineCode",{parentName:"p"},"Kerberos")," with ",(0,r.kt)("inlineCode",{parentName:"p"},"SASL")," between Pulsar clients and brokers and how to configure Kerberos for Pulsar proxy in detail."),(0,r.kt)("h2",{id:"configure-kerberos-between-client-and-broker"},"Configure Kerberos between client and broker"),(0,r.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"To begin, you need to set up (or already have) a ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Key_distribution_center"},"Key Distribution Center(KDC)"),". Also you need to configure and run the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Key_distribution_center"},"Key Distribution Center(KDC)"),"in advance. "),(0,r.kt)("p",null,"If your organization already uses a Kerberos server (for example, by using ",(0,r.kt)("inlineCode",{parentName:"p"},"Active Directory"),"), you do not have to install a new server for Pulsar. If your organization does not use a Kerberos server, you need to install one. Your Linux vendor might have packages for ",(0,r.kt)("inlineCode",{parentName:"p"},"Kerberos"),". On how to install and configure Kerberos, refer to ",(0,r.kt)("a",{parentName:"p",href:"https://help.ubuntu.com/community/Kerberos"},"Ubuntu"),",\n",(0,r.kt)("a",{parentName:"p",href:"https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Managing_Smart_Cards/installing-kerberos.html"},"Redhat"),"."),(0,r.kt)("p",null,"Note that if you use Oracle Java, you need to download JCE policy files for your Java version and copy them to the ",(0,r.kt)("inlineCode",{parentName:"p"},"$JAVA_HOME/jre/lib/security")," directory."),(0,r.kt)("h4",{id:"kerberos-principals"},"Kerberos principals"),(0,r.kt)("p",null,"If you use the existing Kerberos system, ask your Kerberos administrator for a principal for each brokers in your cluster and for every operating system user that accesses Pulsar with Kerberos authentication(via clients and tools)."),(0,r.kt)("p",null,"If you have installed your own Kerberos system, you can create these principals with the following commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"### add Principals for broker\nsudo /usr/sbin/kadmin.local -q 'addprinc -randkey broker/{hostname}@{REALM}'\nsudo /usr/sbin/kadmin.local -q \"ktadd -k /etc/security/keytabs/{broker-keytabname}.keytab broker/{hostname}@{REALM}\"\n### add Principals for client\nsudo /usr/sbin/kadmin.local -q 'addprinc -randkey client/{hostname}@{REALM}'\nsudo /usr/sbin/kadmin.local -q \"ktadd -k /etc/security/keytabs/{client-keytabname}.keytab client/{hostname}@{REALM}\"\n")),(0,r.kt)("p",null,"Note that ",(0,r.kt)("em",{parentName:"p"},"Kerberos")," requires that all your hosts can be resolved with their FQDNs."),(0,r.kt)("p",null,"The first part of broker principal (for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"broker")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"broker/{hostname}@{REALM}"),") is the ",(0,r.kt)("inlineCode",{parentName:"p"},"serverType")," of each host. The suggested values of ",(0,r.kt)("inlineCode",{parentName:"p"},"serverType")," are ",(0,r.kt)("inlineCode",{parentName:"p"},"broker")," (host machine runs service Pulsar brokers) and ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy")," (host machine runs service Pulsar Proxy). "),(0,r.kt)("h4",{id:"connect-to-kdc"},"Connect to KDC"),(0,r.kt)("p",null,"You need to enter the command below to specify the path to the ",(0,r.kt)("inlineCode",{parentName:"p"},"krb5.conf")," file for the client side and the broker side. The content of ",(0,r.kt)("inlineCode",{parentName:"p"},"krb5.conf")," file indicates the default Realm and KDC information. See ",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/8/docs/technotes/guides/security/jgss/tutorials/KerberosReq.html"},"JDK\u2019s Kerberos Requirements")," for more details."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"-Djava.security.krb5.conf=/etc/pulsar/krb5.conf\n")),(0,r.kt)("p",null,"Here is an example of the krb5.conf file. ",(0,r.kt)("inlineCode",{parentName:"p"},"EXAMPLE.COM")," is the default realm; ",(0,r.kt)("inlineCode",{parentName:"p"},"kdc = localhost:62037")," is the kdc server URL for realm ",(0,r.kt)("inlineCode",{parentName:"p"},"EXAMPLE.COM "),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},"[libdefaults]\n default_realm = EXAMPLE.COM\n\n[realms]\n EXAMPLE.COM  = {\n  kdc = localhost:62037\n }\n")),(0,r.kt)("p",null,"Usually machines configured with kerberos already have a system-wide configuration and this configuration is optional."),(0,r.kt)("h4",{id:"configure-jaas-configuration-file"},"Configure JAAS configuration file"),(0,r.kt)("p",null,"You need the JAAS configuration file for the client side and the broker side. JAAS configuration file provides the section of information that is used to connect KDC. Here is an example named ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},' PulsarBroker {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarbroker.keytab"\n   principal="broker/localhost@EXAMPLE.COM";\n};\n\n PulsarClient {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarclient.keytab"\n   principal="client/localhost@EXAMPLE.COM";\n};\n')),(0,r.kt)("p",null,"You need to set the ",(0,r.kt)("inlineCode",{parentName:"p"},"JAAS")," configuration file path as JVM parameter for client and broker. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"    -Djava.security.auth.login.config=/etc/pulsar/pulsar_jaas.conf\n")),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf")," file above "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"PulsarBroker")," is a section name in the JAAS file that each broker uses. This section tells the broker to use which principal inside Kerberos and the location of the keytab where the principal is stored. ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarBroker")," allows the broker to use the keytab specified in this section."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"PulsarClient")," is a section name in the JASS file that each broker uses. This section tells the client to use which principal inside Kerberos and the location of the keytab where the principal is stored. ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarClient")," allows the client to use the keytab specified in this section.\nThe following example also reuses this ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarClient")," section in both the Pulsar internal admin configuration and in CLI command of ",(0,r.kt)("inlineCode",{parentName:"li"},"bin/pulsar-client"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"bin/pulsar-perf")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"bin/pulsar-admin"),". You can also add different sections for different use cases.")),(0,r.kt)("p",null,"You can have 2 separate JAAS configuration files: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the file for a broker that has sections of both ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarBroker")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarClient"),"; "),(0,r.kt)("li",{parentName:"ul"},"the file for a client that only has a ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarClient")," section.")),(0,r.kt)("h3",{id:"configure-kerberos-authentication-for-brokers"},"Configure Kerberos authentication for brokers"),(0,r.kt)("h4",{id:"configure-the-brokerconf-file"},"Configure the ",(0,r.kt)("inlineCode",{parentName:"h4"},"broker.conf")," file"),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"broker.conf")," file, set Kerberos-related configurations."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"authenticationEnabled")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),";"),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"authenticationProviders")," to choose ",(0,r.kt)("inlineCode",{parentName:"li"},"AuthenticationProviderSasl"),";"),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"saslJaasClientAllowedIds")," regex for principals that are allowed to connect to brokers;"),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"saslJaasServerSectionName")," that corresponds to the section in the JAAS configuration file for brokers;")),(0,r.kt)("p",null,"To make Pulsar internal admin client work properly, you need to set the configuration in the ",(0,r.kt)("inlineCode",{parentName:"p"},"broker.conf")," file as below: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"brokerClientAuthenticationPlugin")," to client plugin ",(0,r.kt)("inlineCode",{parentName:"li"},"AuthenticationSasl"),";"),(0,r.kt)("li",{parentName:"ul"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"brokerClientAuthenticationParameters")," to value in JSON string ",(0,r.kt)("inlineCode",{parentName:"li"},'{"saslJaasClientSectionName":"PulsarClient", "serverType":"broker"}'),", in which ",(0,r.kt)("inlineCode",{parentName:"li"},"PulsarClient")," is the section name in the ",(0,r.kt)("inlineCode",{parentName:"li"},"pulsar_jaas.conf")," file, and ",(0,r.kt)("inlineCode",{parentName:"li"},'"serverType":"broker"')," indicates that the internal admin client connects to a Pulsar Broker;")),(0,r.kt)("p",null,"Here is an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},'authenticationEnabled=true\nauthenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderSasl\nsaslJaasClientAllowedIds=.*client.*\nsaslJaasServerSectionName=PulsarBroker\n\n## Authentication settings of the broker itself. Used when the broker connects to other brokers\nbrokerClientAuthenticationPlugin=org.apache.pulsar.client.impl.auth.AuthenticationSasl\nbrokerClientAuthenticationParameters={"saslJaasClientSectionName":"PulsarClient", "serverType":"broker"}\n')),(0,r.kt)("h4",{id:"set-broker-jvm-parameters"},"Set broker JVM parameters"),(0,r.kt)("p",null,"Set JVM parameters for the JAAS configuration file and krb5 configuration file with additional options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"-Djava.security.auth.login.config=/etc/pulsar/pulsar_jaas.conf -Djava.security.krb5.conf=/etc/pulsar/krb5.conf\n")),(0,r.kt)("p",null,"You can add this at the end of ",(0,r.kt)("inlineCode",{parentName:"p"},"PULSAR_EXTRA_OPTS")," in the file ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/master/conf/pulsar_env.sh"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar_env.sh"))),(0,r.kt)("p",null,"You must ensure that the operating system user who starts broker can reach the keytabs configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf")," file and kdc server in the ",(0,r.kt)("inlineCode",{parentName:"p"},"krb5.conf")," file."),(0,r.kt)("h3",{id:"configure-kerberos-authentication-for-clients"},"Configure Kerberos authentication for clients"),(0,r.kt)("h4",{id:"java-client-and-java-admin-client"},"Java Client and Java Admin Client"),(0,r.kt)("p",null,"In client applications, include ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client-auth-sasl")," in your project dependency."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"    <dependency>\n      <groupId>org.apache.pulsar</groupId>\n      <artifactId>pulsar-client-auth-sasl</artifactId>\n      <version>${pulsar.version}</version>\n    </dependency>\n")),(0,r.kt)("p",null,"Configure the authentication type to use ",(0,r.kt)("inlineCode",{parentName:"p"},"AuthenticationSasl"),", and also provide the authentication parameters to it. "),(0,r.kt)("p",null,"You need 2 parameters: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"saslJaasClientSectionName"),". This parameter corresponds to the section in the JAAS configuration file for clients; "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"serverType"),". This parameter stands for whether this client connects to brokers or proxies. And client uses this parameter to know which server-side principal should be used. ")),(0,r.kt)("p",null,"When you authenticate between client and broker with the setting in the above JAAS configuration file, we need to set ",(0,r.kt)("inlineCode",{parentName:"p"},"saslJaasClientSectionName")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"PulsarClient")," and set ",(0,r.kt)("inlineCode",{parentName:"p"},"serverType")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"broker"),"."),(0,r.kt)("p",null,"The following is an example of creating a Java client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'System.setProperty("java.security.auth.login.config", "/etc/pulsar/pulsar_jaas.conf");\nSystem.setProperty("java.security.krb5.conf", "/etc/pulsar/krb5.conf");\n\nMap<String, String> authParams = Maps.newHashMap();\nauthParams.put("saslJaasClientSectionName", "PulsarClient");\nauthParams.put("serverType", "broker");\n\nAuthentication saslAuth = AuthenticationFactory\n        .create(org.apache.pulsar.client.impl.auth.AuthenticationSasl.class.getName(), authParams);\n\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar://my-broker.com:6650")\n        .authentication(saslAuth)\n        .build();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The first two lines in the example above are hard-coded. Alternatively, you can set additional JVM parameters for JAAS and krb5 configuration file when you run the application like below:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"java -cp -Djava.security.auth.login.config=/etc/pulsar/pulsar_jaas.conf -Djava.security.krb5.conf=/etc/pulsar/krb5.conf $APP-jar-with-dependencies.jar $CLASSNAME\n")),(0,r.kt)("p",null,"You must ensure that the operating system user who starts Pulsar client can reach the keytabs configured in the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf")," file and kdc server in the ",(0,r.kt)("inlineCode",{parentName:"p"},"krb5.conf")," file."),(0,r.kt)("h4",{id:"configure-cli-tools"},"Configure CLI tools"),(0,r.kt)("p",null,"If you use a command-line tool (such as ",(0,r.kt)("inlineCode",{parentName:"p"},"bin/pulsar-client"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"bin/pulsar-perf")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"bin/pulsar-admin"),"), you need to perform the following steps:"),(0,r.kt)("p",null,"Step 1. Enter the command below to configure your ",(0,r.kt)("inlineCode",{parentName:"p"},"client.conf"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'authPlugin=org.apache.pulsar.client.impl.auth.AuthenticationSasl\nauthParams={"saslJaasClientSectionName":"PulsarClient", "serverType":"broker"}\n')),(0,r.kt)("p",null,"Step 2. Enter the command below to set JVM parameters for the JAAS configuration file and krb5 configuration file with additional options."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"-Djava.security.auth.login.config=/etc/pulsar/pulsar_jaas.conf -Djava.security.krb5.conf=/etc/pulsar/krb5.conf\n")),(0,r.kt)("p",null,"You can add this at the end of ",(0,r.kt)("inlineCode",{parentName:"p"},"PULSAR_EXTRA_OPTS")," in the file ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/master/conf/pulsar_tools_env.sh"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar_tools_env.sh")),",\nor add this line ",(0,r.kt)("inlineCode",{parentName:"p"},'OPTS="$OPTS -Djava.security.auth.login.config=/etc/pulsar/pulsar_jaas.conf -Djava.security.krb5.conf=/etc/pulsar/krb5.conf "')," directly to the CLI tool script."),(0,r.kt)("p",null,"The meaning of configurations is the same as the meaning of configurations in Java client section."),(0,r.kt)("h2",{id:"configure-kerberos-authentication-for-proxies"},"Configure Kerberos authentication for proxies"),(0,r.kt)("p",null,"With the above configuration, clients and brokers can do authentication using Kerberos.  "),(0,r.kt)("p",null,"A client that connects to Pulsar Proxy is a little different. Pulsar Proxy (as a SASL Server in Kerberos) authenticates Client (as a SASL client in Kerberos) first, and then Pulsar broker authenticates Pulsar Proxy. "),(0,r.kt)("p",null,"Now in comparison with the above configuration between client and broker, we show you how to configure Pulsar Proxy as follows. "),(0,r.kt)("h3",{id:"create-principals-in-kerberos"},"Create principals in Kerberos"),(0,r.kt)("p",null,"You need to add new principals for Pulsar proxy compared with the above configuration. If you already have principals for client and broker, you only need to add the proxy principal here."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"### add Principals for Pulsar Proxy\nsudo /usr/sbin/kadmin.local -q 'addprinc -randkey proxy/{hostname}@{REALM}'\nsudo /usr/sbin/kadmin.local -q \"ktadd -k /etc/security/keytabs/{proxy-keytabname}.keytab proxy/{hostname}@{REALM}\"\n### add Principals for broker\nsudo /usr/sbin/kadmin.local -q 'addprinc -randkey broker/{hostname}@{REALM}'\nsudo /usr/sbin/kadmin.local -q \"ktadd -k /etc/security/keytabs/{broker-keytabname}.keytab broker/{hostname}@{REALM}\"\n### add Principals for client\nsudo /usr/sbin/kadmin.local -q 'addprinc -randkey client/{hostname}@{REALM}'\nsudo /usr/sbin/kadmin.local -q \"ktadd -k /etc/security/keytabs/{client-keytabname}.keytab client/{hostname}@{REALM}\"\n")),(0,r.kt)("h3",{id:"add-a-section-in-jaas-configuration-file"},"Add a section in JAAS configuration file"),(0,r.kt)("p",null,"In comparison with the above configuration, add a new section for Pulsar Proxy in the JAAS configuration file."),(0,r.kt)("p",null,"Here is an example named ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},' PulsarBroker {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarbroker.keytab"\n   principal="broker/localhost@EXAMPLE.COM";\n};\n\n PulsarProxy {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarproxy.keytab"\n   principal="proxy/localhost@EXAMPLE.COM";\n};\n\n PulsarClient {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarclient.keytab"\n   principal="client/localhost@EXAMPLE.COM";\n};\n')),(0,r.kt)("h3",{id:"configure-proxy-clients"},"Configure proxy clients"),(0,r.kt)("p",null,"Pulsar client configuration is similar to client and broker configuration, except that you need to set ",(0,r.kt)("inlineCode",{parentName:"p"},"serverType")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy")," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"broker"),", for the reason that you need to do the Kerberos authentication between client and proxy."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'System.setProperty("java.security.auth.login.config", "/etc/pulsar/pulsar_jaas.conf");\nSystem.setProperty("java.security.krb5.conf", "/etc/pulsar/krb5.conf");\n\nMap<String, String> authParams = Maps.newHashMap();\nauthParams.put("saslJaasClientSectionName", "PulsarClient");\nauthParams.put("serverType", "proxy");        // ** here is the different **\n\nAuthentication saslAuth = AuthenticationFactory\n        .create(org.apache.pulsar.client.impl.auth.AuthenticationSasl.class.getName(), authParams);\n\nPulsarClient client = PulsarClient.builder()\n        .serviceUrl("pulsar://my-broker.com:6650")\n        .authentication(saslAuth)\n        .build();\n')),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"The first two lines in the example above are hard coded, alternatively, you can set additional JVM parameters for JAAS and krb5 configuration file when you run the application like below:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"java -cp -Djava.security.auth.login.config=/etc/pulsar/pulsar_jaas.conf -Djava.security.krb5.conf=/etc/pulsar/krb5.conf $APP-jar-with-dependencies.jar $CLASSNAME\n")),(0,r.kt)("h3",{id:"configure-proxy-service"},"Configure proxy service"),(0,r.kt)("p",null,"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy.conf")," file, set Kerberos-related configuration. Here is an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'## related to authenticate client.\nauthenticationEnabled=true\nauthenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderSasl\nsaslJaasClientAllowedIds=.*client.*\nsaslJaasServerSectionName=PulsarProxy\n\n## related to be authenticated by broker\nbrokerClientAuthenticationPlugin=org.apache.pulsar.client.impl.auth.AuthenticationSasl\nbrokerClientAuthenticationParameters={"saslJaasClientSectionName":"PulsarProxy", "serverType":"broker"}\nforwardAuthorizationCredentials=true\n')),(0,r.kt)("p",null,"The first part relates to authenticating between clients and Pulsar proxies. In this phase, client works as SASL client, while Pulsar Proxy works as SASL server. "),(0,r.kt)("p",null,"The second part relates to authenticating between Pulsar proxies and Pulsar brokers. In this phase, Pulsar Proxy works as SASL client, while Pulsar broker works as SASL server."),(0,r.kt)("h3",{id:"configure-brokers"},"Configure brokers"),(0,r.kt)("p",null,"The broker-side configuration file is the same as the above ",(0,r.kt)("inlineCode",{parentName:"p"},"broker.conf"),", you do not need special configurations for Pulsar Proxy."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},"authenticationEnabled=true\nauthenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderSasl\nsaslJaasClientAllowedIds=.*client.*\nsaslJaasServerSectionName=PulsarBroker\n")),(0,r.kt)("h2",{id:"authorization-and-role-token"},"Authorization and role token"),(0,r.kt)("p",null,"For Kerberos authentication, we usually use the authenticated principal as the role token for Pulsar authorization. For more information on authorization in Pulsar, see ",(0,r.kt)("a",{parentName:"p",href:"/fr/docs/next/security-authorization"},"security authorization"),"."),(0,r.kt)("p",null,"If you enable 'authorizationEnabled', you need to set ",(0,r.kt)("inlineCode",{parentName:"p"},"superUserRoles")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"broker.conf")," that corresponds to the name registered in kdc."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"superUserRoles=client/{clientIp}@EXAMPLE.COM\n")),(0,r.kt)("h2",{id:"configure-kerberos-authentication-between-zookeeper-and-broker"},"Configure Kerberos authentication between ZooKeeper and broker"),(0,r.kt)("p",null,"Pulsar broker acts as a Kerberos client when you authenticate with Zookeeper. According to ",(0,r.kt)("a",{parentName:"p",href:"https://cwiki.apache.org/confluence/display/ZOOKEEPER/Client-Server+mutual+authentication"},"ZooKeeper document"),", you need these settings in ",(0,r.kt)("inlineCode",{parentName:"p"},"conf/zookeeper.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},"authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider\nrequireClientAuthScheme=sasl\n")),(0,r.kt)("p",null,"Enter the following commands to add a section of ",(0,r.kt)("inlineCode",{parentName:"p"},"Client")," configurations in the file ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf"),", which Pulsar broker uses:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},' Client {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarbroker.keytab"\n   principal="broker/localhost@EXAMPLE.COM";\n};\n')),(0,r.kt)("p",null,"In this setting, the principal of Pulsar broker and keyTab file indicates the role of brokers when you authenticate with ZooKeeper."),(0,r.kt)("h2",{id:"configure-kerberos-authentication-between-bookkeeper-and-broker"},"Configure Kerberos authentication between BookKeeper and broker"),(0,r.kt)("p",null,"Pulsar broker acts as a Kerberos client when you authenticate with Bookie. According to ",(0,r.kt)("a",{parentName:"p",href:"https://bookkeeper.apache.org/docs/next/security/sasl/"},"BookKeeper document"),", you need to add ",(0,r.kt)("inlineCode",{parentName:"p"},"bookkeeperClientAuthenticationPlugin")," parameter in ",(0,r.kt)("inlineCode",{parentName:"p"},"broker.conf"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},"bookkeeperClientAuthenticationPlugin=org.apache.bookkeeper.sasl.SASLClientProviderFactory\n")),(0,r.kt)("p",null,"In this setting, ",(0,r.kt)("inlineCode",{parentName:"p"},"SASLClientProviderFactory")," creates a BookKeeper SASL client in a broker, and the broker uses the created SASL client to authenticate with a Bookie node."),(0,r.kt)("p",null,"Enter the following commands to add a section of ",(0,r.kt)("inlineCode",{parentName:"p"},"BookKeeper")," configurations in the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar_jaas.conf")," that Pulsar broker uses:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-conf"},' BookKeeper {\n   com.sun.security.auth.module.Krb5LoginModule required\n   useKeyTab=true\n   storeKey=true\n   useTicketCache=false\n   keyTab="/etc/security/keytabs/pulsarbroker.keytab"\n   principal="broker/localhost@EXAMPLE.COM";\n};\n')),(0,r.kt)("p",null,"In this setting, the principal of Pulsar broker and keytab file indicates the role of brokers when you authenticate with Bookie."))}p.isMDXComponent=!0}}]);