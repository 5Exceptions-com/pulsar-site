"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[68638],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return d}});var o=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=o.createContext({}),p=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=p(e.components);return o.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},g=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),g=p(t),d=a,f=g["".concat(s,".").concat(d)]||g[d]||u[d]||r;return t?o.createElement(f,l(l({ref:n},c),{},{components:t})):o.createElement(f,l({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=g;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,t)}g.displayName="MDXCreateElement"},31486:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var o=t(87462),a=t(63366),r=(t(67294),t(3905)),l=["components"],i={id:"functions-develop-log",title:"Produce function logs",sidebar_label:"Produce function logs"},s=void 0,p={unversionedId:"functions-develop-log",id:"functions-develop-log",title:"Produce function logs",description:"Produce logs for Java functions",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/functions-develop-log.md",sourceDirName:".",slug:"/functions-develop-log",permalink:"/fr/docs/next/functions-develop-log",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/functions-develop-log.md",tags:[],version:"current",frontMatter:{id:"functions-develop-log",title:"Produce function logs",sidebar_label:"Produce function logs"},sidebar:"docsSidebar",previous:{title:"Pass user-defined configurations",permalink:"/fr/docs/next/functions-develop-user-defined-configs"},next:{title:"Use metrics to monitor functions",permalink:"/fr/docs/next/functions-develop-metrics"}},c={},u=[{value:"Produce logs for Java functions",id:"produce-logs-for-java-functions",level:2},{value:"Customize log levels for Java functions",id:"customize-log-levels-for-java-functions",level:3},{value:"Produce logs for Python functions",id:"produce-logs-for-python-functions",level:2},{value:"Produce logs for Go functions",id:"produce-logs-for-go-functions",level:2}],g={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,o.Z)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"produce-logs-for-java-functions"},"Produce logs for Java functions"),(0,r.kt)("p",null,"Pulsar Functions that use the Java SDK have access to an ",(0,r.kt)("a",{parentName:"p",href:"https://www.slf4j.org/api/org/apache/log4j/Logger.html"},"SLF4j ",(0,r.kt)("inlineCode",{parentName:"a"},"Logger"))," object. The logger object can be used to produce logs at a specified log level."),(0,r.kt)("p",null,"For example, the following function logs either a ",(0,r.kt)("inlineCode",{parentName:"p"},"WARNING"),"- or ",(0,r.kt)("inlineCode",{parentName:"p"},"INFO"),"-level log based on whether the incoming string contains the word ",(0,r.kt)("inlineCode",{parentName:"p"},"danger"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\nimport org.apache.pulsar.functions.api.Context;\nimport org.apache.pulsar.functions.api.Function;\nimport org.slf4j.Logger;\n\npublic class LoggingFunction implements Function<String, Void> {\n    @Override\n    public void apply(String input, Context context) {\n        Logger LOG = context.getLogger();\n        String messageId = new String(context.getMessageId());\n\n        if (input.contains("danger")) {\n            LOG.warn("A warning was received in message {}", messageId);\n        } else {\n            LOG.info("Message {} received\\nContent: {}", messageId, input);\n        }\n\n        return null;\n    }\n}\n\n')),(0,r.kt)("p",null,"To enable your function to produce logs, you need to specify a log topic when creating or running the function. The following is an example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin functions create \\\n  --jar my-functions.jar \\\n  --classname my.package.LoggingFunction \\\n  --log-topic persistent://public/default/logging-function-logs \\\n  # Other function configs\n\n")),(0,r.kt)("p",null,"You can access all the logs produced by ",(0,r.kt)("inlineCode",{parentName:"p"},"LoggingFunction")," via the ",(0,r.kt)("inlineCode",{parentName:"p"},"persistent://public/default/logging-function-logs")," topic."),(0,r.kt)("h3",{id:"customize-log-levels-for-java-functions"},"Customize log levels for Java functions"),(0,r.kt)("p",null,"By default, the log level for Java functions is ",(0,r.kt)("inlineCode",{parentName:"p"},"info"),". If you want to customize the log level of your Java functions, for example, change it to ",(0,r.kt)("inlineCode",{parentName:"p"},"debug"),", you can update the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/blob/master/conf/functions_log4j2.xml"},(0,r.kt)("inlineCode",{parentName:"a"},"functions_log4j2.xml"))," file."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"functions_log4j2.xml")," file is under your Pulsar configuration directory, for example, ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/pulsar/")," on bare-metal, or ",(0,r.kt)("inlineCode",{parentName:"p"},"/pulsar/conf")," on Kubernetes."))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"property"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\n     <Property>\n         <name>pulsar.log.level</name>\n         <value>debug</value>\n     </Property>\n\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Apply the log level to places where they are referenced. In the following example, ",(0,r.kt)("inlineCode",{parentName:"p"},"debug")," applies to all function logs."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\n     <Root>\n         <level>${sys:pulsar.log.level}</level>\n         <AppenderRef>\n             <ref>${sys:pulsar.log.appender}</ref>\n             <level>${sys:pulsar.log.level}</level>\n         </AppenderRef>\n     </Root>\n\n")),(0,r.kt)("p",{parentName:"li"},"To be more selective, you can apply different log levels to different classes or modules. For example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\n     <Logger>\n         <name>com.example.module</name>\n         <level>info</level>\n         <additivity>false</additivity>\n         <AppenderRef>\n             <ref>${sys:pulsar.log.appender}</ref>\n         </AppenderRef>\n     </Logger>\n\n")),(0,r.kt)("p",{parentName:"li"},"To apply a more verbose log level to a class in the module, you can reference the following example:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\n     <Logger>\n         <name>com.example.module.className</name>\n         <level>debug</level>\n         <additivity>false</additivity>\n         <AppenderRef>\n             <ref>Console</ref>\n         </AppenderRef>\n     </Logger>\n\n")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"additivity")," indicates whether log messages will be duplicated if multiple ",(0,r.kt)("inlineCode",{parentName:"li"},"<Logger>")," entries overlap. Disabling additivity (",(0,r.kt)("inlineCode",{parentName:"li"},"false"),") prevents duplication of log messages when one or more ",(0,r.kt)("inlineCode",{parentName:"li"},"<Logger>")," entries contain classes or modules that overlap."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AppenderRef")," allows you to output the log to a target specified in the definition of the ",(0,r.kt)("inlineCode",{parentName:"li"},"Appender")," section. For example:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\n   <Console>\n     <name>Console</name>\n     <target>SYSTEM_OUT</target>\n     <PatternLayout>\n       <Pattern>%d{ISO8601_OFFSET_DATE_TIME_HHMM} [%t] %-5level %logger{36} - %msg%n</Pattern>\n     </PatternLayout>\n   </Console>\n\n")))),(0,r.kt)("h2",{id:"produce-logs-for-python-functions"},"Produce logs for Python functions"),(0,r.kt)("p",null,"Pulsar Functions that use the Python SDK have access to a logger object. The logger object can be used to produce logs at a specified log level."),(0,r.kt)("p",null,"For example, the following function logs either a ",(0,r.kt)("inlineCode",{parentName:"p"},"WARNING"),"- or ",(0,r.kt)("inlineCode",{parentName:"p"},"INFO"),"-level log based on whether the incoming string contains the word ",(0,r.kt)("inlineCode",{parentName:"p"},"danger"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'\nfrom pulsar import Function\n\nclass LoggingFunction(Function):\n    def process(self, input, context):\n        logger = context.get_logger()\n        msg_id = context.get_message_id()\n        if \'danger\' in input:\n            logger.warn("A warning was received in message {0}".format(context.get_message_id()))\n        else:\n            logger.info("Message {0} received\\nContent: {1}".format(msg_id, input))\n\n')),(0,r.kt)("p",null,"To enable your function to produce logs, you need to specify a log topic when creating or running the function. The following is an example."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\nbin/pulsar-admin functions create \\\n  --py logging_function.py \\\n  --classname logging_function.LoggingFunction \\\n  --log-topic logging-function-logs \\\n  # Other function configs\n\n")),(0,r.kt)("p",null,"All logs produced by ",(0,r.kt)("inlineCode",{parentName:"p"},"LoggingFunction")," can be accessed via the ",(0,r.kt)("inlineCode",{parentName:"p"},"logging-function-logs")," topic. Additionally, you can specify the function log levels through ",(0,r.kt)("inlineCode",{parentName:"p"},"context.get_logger().setLevel(level)"),". For more information, refer to ",(0,r.kt)("a",{parentName:"p",href:"https://docs.python.org/3/library/logging.html#logging.Logger.setLevel"},"Logging facility for Python")," ."),(0,r.kt)("h2",{id:"produce-logs-for-go-functions"},"Produce logs for Go functions"),(0,r.kt)("p",null,"When you use ",(0,r.kt)("inlineCode",{parentName:"p"},"logTopic")," related functionalities in Go functions, you can import ",(0,r.kt)("inlineCode",{parentName:"p"},"github.com/apache/pulsar/pulsar-function-go/logutil")," rather than using the ",(0,r.kt)("inlineCode",{parentName:"p"},"getLogger()")," context object."),(0,r.kt)("p",null,"The following function shows different log levels based on the function input."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},'import (\n    "context"\n\n    "github.com/apache/pulsar/pulsar-function-go/pf"\n\n    log "github.com/apache/pulsar/pulsar-function-go/logutil"\n)\n\nfunc loggerFunc(ctx context.Context, input []byte) {\n    if len(input) <= 100 {\n        log.Infof("This input has a length of: %d", len(input))\n    } else {\n        log.Warnf("This input is getting too long! It has {%d} characters", len(input))\n    }\n}\n\nfunc main() {\n    pf.Start(loggerFunc)\n}\n\n')))}d.isMDXComponent=!0}}]);