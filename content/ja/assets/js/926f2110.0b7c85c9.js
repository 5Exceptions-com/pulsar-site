"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[8895],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),f=l(r),d=o,m=f["".concat(i,".").concat(d)]||f[d]||s[d]||c;return r?n.createElement(m,a(a({ref:t},u),{},{components:r})):n.createElement(m,a({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=f;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var l=2;l<c;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},68921:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return s}});var n=r(87462),o=r(63366),c=(r(67294),r(3905)),a=["components"],p={id:"client-cpp-2.6.2",title:"Client CPP 2.6.2",sidebar_label:"Client CPP 2.6.2"},i=void 0,l={unversionedId:"docs/client-cpp-2.6.2",id:"docs/client-cpp-2.6.2",title:"Client CPP 2.6.2",description:"cpp] Add Snappy library to Docker images for building C++ packages [#8086",source:"@site/release-notes/docs/client-cpp-2.6.2.md",sourceDirName:"docs",slug:"/docs/client-cpp-2.6.2",permalink:"/ja/release-notes/docs/client-cpp-2.6.2",tags:[],version:"current",frontMatter:{id:"client-cpp-2.6.2",title:"Client CPP 2.6.2",sidebar_label:"Client CPP 2.6.2"}},u={},s=[],f={toc:s};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,c.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("p",null,"[cpp]"," Add Snappy library to Docker images for building C++ packages ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/pull/8086"},"#8086"),(0,c.kt)("br",{parentName:"p"}),"\n","[C++]"," Support key based batching ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/pull/7996"},"#7996"),(0,c.kt)("br",{parentName:"p"}),"\n","[Issue 7787][pulsar-client-cpp]"," Throw std::exception types ",(0,c.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar/pull/7798"},"#7798")))}d.isMDXComponent=!0}}]);