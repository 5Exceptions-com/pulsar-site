"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[60322],{3905:(e,r,t)=>{t.d(r,{Zo:()=>i,kt:()=>d});var a=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,a,o=function(e,r){if(null==e)return{};var t,a,o={},n=Object.keys(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)t=n[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=a.createContext({}),s=function(e){var r=a.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},i=function(e){var r=s(e.components);return a.createElement(c.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},k=a.forwardRef((function(e,r){var t=e.components,o=e.mdxType,n=e.originalType,c=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),k=s(t),d=o,m=k["".concat(c,".").concat(d)]||k[d]||u[d]||n;return t?a.createElement(m,l(l({ref:r},i),{},{components:t})):a.createElement(m,l({ref:r},i))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var n=t.length,l=new Array(n);l[0]=k;var p={};for(var c in r)hasOwnProperty.call(r,c)&&(p[c]=r[c]);p.originalType=e,p.mdxType="string"==typeof e?e:o,l[1]=p;for(var s=2;s<n;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},70499:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>n,metadata:()=>p,toc:()=>s});var a=t(87462),o=(t(67294),t(3905));const n={id:"deploy-docker",title:"Deploy a cluster on Docker",sidebar_label:"Docker"},l=void 0,p={unversionedId:"deploy-docker",id:"deploy-docker",title:"Deploy a cluster on Docker",description:"To deploy a Pulsar cluster on Docker, complete the following steps:",source:"@site/docs/deploy-docker.md",sourceDirName:".",slug:"/deploy-docker",permalink:"/ja/docs/next/deploy-docker",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/deploy-docker.md",tags:[],version:"current",frontMatter:{id:"deploy-docker",title:"Deploy a cluster on Docker",sidebar_label:"Docker"},sidebar:"docsSidebar",previous:{title:"Bare metal multi-cluster",permalink:"/ja/docs/next/deploy-bare-metal-multi-cluster"},next:{title:"Monitor",permalink:"/ja/docs/next/deploy-monitoring"}},c={},s=[{value:"Prepare",id:"prepare",level:2},{value:"Pull a Pulsar image",id:"pull-a-pulsar-image",level:3},{value:"Create three containers",id:"create-three-containers",level:3},{value:"Create a network",id:"create-a-network",level:3},{value:"Connect containers to network",id:"connect-containers-to-network",level:3}],i={toc:s};function u(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,a.Z)({},i,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To deploy a Pulsar cluster on Docker, complete the following steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Deploy a ZooKeeper cluster (optional)"),(0,o.kt)("li",{parentName:"ol"},"Initialize cluster metadata"),(0,o.kt)("li",{parentName:"ol"},"Deploy a BookKeeper cluster"),(0,o.kt)("li",{parentName:"ol"},"Deploy one or more Pulsar brokers")),(0,o.kt)("h2",{id:"prepare"},"Prepare"),(0,o.kt)("p",null,"To run Pulsar on Docker, you need to create a container for each Pulsar component: ZooKeeper, BookKeeper and broker. You can pull the images of ZooKeeper and BookKeeper separately on ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/"},"Docker Hub"),", and pull a ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/apachepulsar/pulsar-all/tags"},"Pulsar image")," for the broker. You can also pull only one ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/apachepulsar/pulsar-all/tags"},"Pulsar image")," and create three containers with this image. This tutorial takes the second option as an example."),(0,o.kt)("h3",{id:"pull-a-pulsar-image"},"Pull a Pulsar image"),(0,o.kt)("p",null,"You can pull a Pulsar image from ",(0,o.kt)("a",{parentName:"p",href:"https://hub.docker.com/r/apachepulsar/pulsar-all/tags"},"Docker Hub")," with the following command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker pull apachepulsar/pulsar-all:latest\n")),(0,o.kt)("h3",{id:"create-three-containers"},"Create three containers"),(0,o.kt)("p",null,"Create containers for ZooKeeper, BookKeeper and broker. In this example, they are named as ",(0,o.kt)("inlineCode",{parentName:"p"},"zookeeper"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"bookkeeper")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"broker")," respectively. You can name them as you want with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--name")," flag. By default, the container names are created randomly."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker run -it --name bookkeeper apachepulsar/pulsar-all:latest /bin/bash\ndocker run -it --name zookeeper apachepulsar/pulsar-all:latest /bin/bash\ndocker run -it --name broker apachepulsar/pulsar-all:latest /bin/bash\n")),(0,o.kt)("h3",{id:"create-a-network"},"Create a network"),(0,o.kt)("p",null,"To deploy a Pulsar cluster on Docker, you need to create a ",(0,o.kt)("inlineCode",{parentName:"p"},"network")," and connect the containers of ZooKeeper, BookKeeper and broker to this network. The following command creates the network ",(0,o.kt)("inlineCode",{parentName:"p"},"pulsar"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker network create pulsar\n")),(0,o.kt)("h3",{id:"connect-containers-to-network"},"Connect containers to network"),(0,o.kt)("p",null,"Connect the containers of ZooKeeper, BookKeeper and broker to the ",(0,o.kt)("inlineCode",{parentName:"p"},"pulsar")," network with the following commands. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"docker network connect pulsar zookeeper\ndocker network connect pulsar bookkeeper\ndocker network connect pulsar broker\n\n")),(0,o.kt)("p",null,"To check whether the containers are successfully connected to the network, enter the ",(0,o.kt)("inlineCode",{parentName:"p"},"docker network inspect pulsar")," command."),(0,o.kt)("p",null,"For detailed information about how to deploy ZooKeeper cluster, BookKeeper cluster, brokers, see ",(0,o.kt)("a",{parentName:"p",href:"/ja/docs/next/deploy-bare-metal"},"deploy a cluster on bare metal"),"."))}u.isMDXComponent=!0}}]);