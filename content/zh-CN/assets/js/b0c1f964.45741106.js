"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[49558],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9150:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],s={id:"functions-develop-tutorial",title:"Tutorials",sidebar_label:"Tutorials"},c=void 0,u={unversionedId:"functions-develop-tutorial",id:"functions-develop-tutorial",title:"Tutorials",description:"Write a function for word count",source:"@site/i18n/zh-CN/docusaurus-plugin-content-docs/current/functions-develop-tutorial.md",sourceDirName:".",slug:"/functions-develop-tutorial",permalink:"/zh-CN/docs/next/functions-develop-tutorial",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/functions-develop-tutorial.md",tags:[],version:"current",frontMatter:{id:"functions-develop-tutorial",title:"Tutorials",sidebar_label:"Tutorials"},sidebar:"docsSidebar",previous:{title:"Use SerDe",permalink:"/zh-CN/docs/next/functions-develop-serde"},next:{title:"How to debug",permalink:"/zh-CN/docs/next/functions-debug"}},l={},p=[{value:"Write a function for word count",id:"write-a-function-for-word-count",level:2},{value:"Write a function for content-based routing",id:"write-a-function-for-content-based-routing",level:2},{value:"Write a window function for word count",id:"write-a-window-function-for-word-count",level:2}],d={toc:p};function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"write-a-function-for-word-count"},"Write a function for word count"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"The following example is a stateful function. By default, the state of a function is disabled. See ",(0,a.kt)("a",{parentName:"p",href:"/zh-CN/docs/next/functions-worker-stateful"},"Enable stateful functions")," for more instructions."))),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Write the function in Java using the ",(0,a.kt)("a",{parentName:"p",href:"/zh-CN/docs/next/functions-develop-api"},"SDK for Java"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-java"},'\n package org.example.functions;\n\n import org.apache.pulsar.functions.api.Context;\n import org.apache.pulsar.functions.api.Function;\n\n import java.util.Arrays;\n\n public class WordCountFunction implements Function<String, Void> {\n     // This function is invoked every time a message is published to the input topic\n     @Override\n     public Void process(String input, Context context) throws Exception {\n         Arrays.asList(input.split(" ")).forEach(word -> {\n             String counterKey = word.toLowerCase();\n             context.incrCounter(counterKey, 1);\n         });\n         return null;\n     }\n }\n\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Bundle and build the JAR file, and then deploy it in your Pulsar cluster using the ",(0,a.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\n bin/pulsar-admin functions create \\\n   --jar target/my-jar-with-dependencies.jar \\\n   --classname org.example.functions.WordCountFunction \\\n   --tenant public \\\n   --namespace default \\\n   --name word-count \\\n   --inputs persistent://public/default/sentences \\\n   --output persistent://public/default/count\n")))),(0,a.kt)("h2",{id:"write-a-function-for-content-based-routing"},"Write a function for content-based routing"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Write the function in Python using the ",(0,a.kt)("a",{parentName:"p",href:"/zh-CN/docs/next/functions-develop-api"},"SDK for Python"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\n from pulsar import Function\n\n class RoutingFunction(Function):\n     def __init__(self):\n         self.fruits_topic = "persistent://public/default/fruits"\n         self.vegetables_topic = "persistent://public/default/vegetables"\n\n     def is_fruit(item):\n         return item in [b"apple", b"orange", b"pear", b"other fruits..."]\n\n     def is_vegetable(item):\n         return item in [b"carrot", b"lettuce", b"radish", b"other vegetables..."]\n\n     def process(self, item, context):\n         if self.is_fruit(item):\n             context.publish(self.fruits_topic, item)\n         elif self.is_vegetable(item):\n             context.publish(self.vegetables_topic, item)\n         else:\n             warning = "The item {0} is neither a fruit nor a vegetable".format(item)\n             context.get_logger().warn(warning)\n\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Suppose this code is stored in ",(0,a.kt)("inlineCode",{parentName:"p"},"~/router.py"),", then you can deploy it in your Pulsar cluster using the ",(0,a.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," command."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\n bin/pulsar-admin functions create \\\n   --py ~/router.py \\\n   --classname router.RoutingFunction \\\n   --tenant public \\\n   --namespace default \\\n   --name route-fruit-veg \\\n   --inputs persistent://public/default/basket-items\n\n")))),(0,a.kt)("h2",{id:"write-a-window-function-for-word-count"},"Write a window function for word count"),(0,a.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"Currently, window function is only available in Java."))),(0,a.kt)("p",null,"This example demonstrates how to use the ",(0,a.kt)("a",{parentName:"p",href:"/zh-CN/docs/next/functions-develop-api"},"language-native interface")," to write a window function in Java."),(0,a.kt)("p",null,"Each input message is a sentence that is split into words and each word counted. The built-in counter state is used to keep track of the word count in a persistent and consistent manner."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},'\npublic class WordCountFunction implements Function<String, Void> {\n    @Override\n    public Void process(String input, Context context) {\n        Arrays.asList(input.split("\\\\s+")).forEach(word -> context.incrCounter(word, 1));\n        return null;\n    }\n}\n\n')))}f.isMDXComponent=!0}}]);