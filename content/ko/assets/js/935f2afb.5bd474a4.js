"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[80053],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":"unreleased","badge":true,"className":"docs-version-current","isLast":false,"docsSidebars":{"docsSidebar":[{"type":"link","label":"About","href":"/ko/docs/next/","docId":"about"},{"type":"category","label":"Get Started","items":[{"type":"link","label":"Run Pulsar locally","href":"/ko/docs/next/standalone","docId":"standalone"},{"type":"link","label":"Run Pulsar in Docker","href":"/ko/docs/next/standalone-docker","docId":"standalone-docker"},{"type":"link","label":"Run Pulsar in Kubernetes","href":"/ko/docs/next/kubernetes-helm","docId":"kubernetes-helm"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Concepts and Architecture","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/concepts-overview","docId":"concepts-overview"},{"type":"link","label":"Messaging","href":"/ko/docs/next/concepts-messaging","docId":"concepts-messaging"},{"type":"link","label":"Architecture","href":"/ko/docs/next/concepts-architecture-overview","docId":"concepts-architecture-overview"},{"type":"link","label":"Clients","href":"/ko/docs/next/concepts-clients","docId":"concepts-clients"},{"type":"link","label":"Geo Replication","href":"/ko/docs/next/concepts-replication","docId":"concepts-replication"},{"type":"link","label":"Multi Tenancy","href":"/ko/docs/next/concepts-multi-tenancy","docId":"concepts-multi-tenancy"},{"type":"link","label":"Authentication and Authorization","href":"/ko/docs/next/concepts-authentication","docId":"concepts-authentication"},{"type":"link","label":"Topic Compaction","href":"/ko/docs/next/concepts-topic-compaction","docId":"concepts-topic-compaction"},{"type":"link","label":"Proxy support with SNI routing","href":"/ko/docs/next/concepts-proxy-sni-routing","docId":"concepts-proxy-sni-routing"},{"type":"link","label":"Multiple advertised listeners","href":"/ko/docs/next/concepts-multiple-advertised-listeners","docId":"concepts-multiple-advertised-listeners"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar Schema","items":[{"type":"link","label":"Get started","href":"/ko/docs/next/schema-get-started","docId":"schema-get-started"},{"type":"link","label":"Understand schema","href":"/ko/docs/next/schema-understand","docId":"schema-understand"},{"type":"link","label":"Schema evolution and compatibility","href":"/ko/docs/next/schema-evolution-compatibility","docId":"schema-evolution-compatibility"},{"type":"link","label":"Manage schema","href":"/ko/docs/next/schema-manage","docId":"schema-manage"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar Functions","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/functions-overview","docId":"functions-overview"},{"type":"link","label":"Setup: Configure Functions runtime","href":"/ko/docs/next/functions-runtime","docId":"functions-runtime"},{"type":"link","label":"Setup: Pulsar Functions Worker","href":"/ko/docs/next/functions-worker","docId":"functions-worker"},{"type":"link","label":"How-to: Develop","href":"/ko/docs/next/functions-develop","docId":"functions-develop"},{"type":"link","label":"How-to: Package","href":"/ko/docs/next/functions-package","docId":"functions-package"},{"type":"link","label":"How-to: Debug","href":"/ko/docs/next/functions-debug","docId":"functions-debug"},{"type":"link","label":"How-to: Deploy","href":"/ko/docs/next/functions-deploy","docId":"functions-deploy"},{"type":"link","label":"Reference: CLI","href":"/ko/docs/next/functions-cli","docId":"functions-cli"},{"type":"link","label":"Window Functions: Context","href":"/ko/docs/next/window-functions-context","docId":"window-functions-context"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar IO","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/io-overview","docId":"io-overview"},{"type":"link","label":"Get started","href":"/ko/docs/next/io-quickstart","docId":"io-quickstart"},{"type":"link","label":"Use","href":"/ko/docs/next/io-use","docId":"io-use"},{"type":"link","label":"Debug","href":"/ko/docs/next/io-debug","docId":"io-debug"},{"type":"link","label":"Built-in connector","href":"/ko/docs/next/io-connectors","docId":"io-connectors"},{"type":"link","label":"CDC connector","href":"/ko/docs/next/io-cdc","docId":"io-cdc"},{"type":"link","label":"Develop","href":"/ko/docs/next/io-develop","docId":"io-develop"},{"type":"link","label":"CLI","href":"/ko/docs/next/io-cli","docId":"io-cli"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pulsar SQL","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/sql-overview","docId":"sql-overview"},{"type":"link","label":"Query data","href":"/ko/docs/next/sql-getting-started","docId":"sql-getting-started"},{"type":"link","label":"Configuration and deployment","href":"/ko/docs/next/sql-deployment-configurations","docId":"sql-deployment-configurations"},{"type":"link","label":"REST APIs","href":"/ko/docs/next/sql-rest-api","docId":"sql-rest-api"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tiered Storage","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/tiered-storage-overview","docId":"tiered-storage-overview"},{"type":"link","label":"AWS S3 offloader","href":"/ko/docs/next/tiered-storage-aws","docId":"tiered-storage-aws"},{"type":"link","label":"GCS offloader","href":"/ko/docs/next/tiered-storage-gcs","docId":"tiered-storage-gcs"},{"type":"link","label":"Filesystem offloader","href":"/ko/docs/next/tiered-storage-filesystem","docId":"tiered-storage-filesystem"},{"type":"link","label":"Azure BlobStore offloader","href":"/ko/docs/next/tiered-storage-azure","docId":"tiered-storage-azure"},{"type":"link","label":"Aliyun OSS offloader","href":"/ko/docs/next/tiered-storage-aliyun","docId":"tiered-storage-aliyun"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Transactions","items":[{"type":"link","label":"Why transactions?","href":"/ko/docs/next/txn-why","docId":"txn-why"},{"type":"link","label":"What are transactions?","href":"/ko/docs/next/txn-what","docId":"txn-what"},{"type":"link","label":"How transactions work?","href":"/ko/docs/next/txn-how","docId":"txn-how"},{"type":"link","label":"How to use transactions?","href":"/ko/docs/next/txn-use","docId":"txn-use"},{"type":"link","label":"How to monitor transactions?","href":"/ko/docs/next/txn-monitor","docId":"txn-monitor"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Kubernetes (Helm)","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/helm-overview","docId":"helm-overview"},{"type":"link","label":"Prepare","href":"/ko/docs/next/helm-prepare","docId":"helm-prepare"},{"type":"link","label":"Install","href":"/ko/docs/next/helm-install","docId":"helm-install"},{"type":"link","label":"Deployment","href":"/ko/docs/next/helm-deploy","docId":"helm-deploy"},{"type":"link","label":"Upgrade","href":"/ko/docs/next/helm-upgrade","docId":"helm-upgrade"},{"type":"link","label":"Required Tools","href":"/ko/docs/next/helm-tools","docId":"helm-tools"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Deployment","items":[{"type":"link","label":"Amazon Web Services","href":"/ko/docs/next/deploy-aws","docId":"deploy-aws"},{"type":"link","label":"Kubernetes","href":"/ko/docs/next/deploy-kubernetes","docId":"deploy-kubernetes"},{"type":"link","label":"Bare metal","href":"/ko/docs/next/deploy-bare-metal","docId":"deploy-bare-metal"},{"type":"link","label":"Bare metal multi-cluster","href":"/ko/docs/next/deploy-bare-metal-multi-cluster","docId":"deploy-bare-metal-multi-cluster"},{"type":"link","label":"Docker","href":"/ko/docs/next/deploy-docker","docId":"deploy-docker"},{"type":"link","label":"Monitor","href":"/ko/docs/next/deploy-monitoring","docId":"deploy-monitoring"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Administration","items":[{"type":"link","label":"ZooKeeper and BookKeeper","href":"/ko/docs/next/administration-zk-bk","docId":"administration-zk-bk"},{"type":"link","label":"Geo-replication","href":"/ko/docs/next/administration-geo","docId":"administration-geo"},{"type":"link","label":"Pulsar Manager","href":"/ko/docs/next/administration-pulsar-manager","docId":"administration-pulsar-manager"},{"type":"link","label":"Pulsar statistics","href":"/ko/docs/next/administration-stats","docId":"administration-stats"},{"type":"link","label":"Load balance","href":"/ko/docs/next/administration-load-balance","docId":"administration-load-balance"},{"type":"link","label":"Pulsar proxy","href":"/ko/docs/next/administration-proxy","docId":"administration-proxy"},{"type":"link","label":"Upgrade","href":"/ko/docs/next/administration-upgrade","docId":"administration-upgrade"},{"type":"link","label":"Pulsar isolation","href":"/ko/docs/next/administration-isolation","docId":"administration-isolation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Security","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/security-overview","docId":"security-overview"},{"type":"link","label":"Transport Encryption using TLS","href":"/ko/docs/next/security-tls-transport","docId":"security-tls-transport"},{"type":"link","label":"Authentication using TLS","href":"/ko/docs/next/security-tls-authentication","docId":"security-tls-authentication"},{"type":"link","label":"Using TLS with KeyStore configure","href":"/ko/docs/next/security-tls-keystore","docId":"security-tls-keystore"},{"type":"link","label":"Authentication using JWT","href":"/ko/docs/next/security-jwt","docId":"security-jwt"},{"type":"link","label":"Authentication using Athenz","href":"/ko/docs/next/security-athenz","docId":"security-athenz"},{"type":"link","label":"Authentication using Kerberos","href":"/ko/docs/next/security-kerberos","docId":"security-kerberos"},{"type":"link","label":"Authentication using OAuth 2.0 access tokens","href":"/ko/docs/next/security-oauth2","docId":"security-oauth2"},{"type":"link","label":"Authorization and ACLs","href":"/ko/docs/next/security-authorization","docId":"security-authorization"},{"type":"link","label":"End-to-End Encryption","href":"/ko/docs/next/security-encryption","docId":"security-encryption"},{"type":"link","label":"Extend Authentication and Authorization","href":"/ko/docs/next/security-extending","docId":"security-extending"},{"type":"link","label":"Bouncy Castle Providers","href":"/ko/docs/next/security-bouncy-castle","docId":"security-bouncy-castle"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Performance","items":[{"type":"link","label":"Pulsar Perf","href":"/ko/docs/next/performance-pulsar-perf","docId":"performance-pulsar-perf"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Client Libraries","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/client-libraries","docId":"client-libraries"},{"type":"link","label":"Java","href":"/ko/docs/next/client-libraries-java","docId":"client-libraries-java"},{"type":"link","label":"Go","href":"/ko/docs/next/client-libraries-go","docId":"client-libraries-go"},{"type":"link","label":"Python","href":"/ko/docs/next/client-libraries-python","docId":"client-libraries-python"},{"type":"link","label":"C++","href":"/ko/docs/next/client-libraries-cpp","docId":"client-libraries-cpp"},{"type":"link","label":"Node.js","href":"/ko/docs/next/client-libraries-node","docId":"client-libraries-node"},{"type":"link","label":"WebSocket","href":"/ko/docs/next/client-libraries-websocket","docId":"client-libraries-websocket"},{"type":"link","label":"C#","href":"/ko/docs/next/client-libraries-dotnet","docId":"client-libraries-dotnet"},{"type":"link","label":"REST","href":"/ko/docs/next/client-libraries-rest","docId":"client-libraries-rest"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Admin API","items":[{"type":"link","label":"Overview","href":"/ko/docs/next/admin-api-overview","docId":"admin-api-overview"},{"type":"link","label":"Clusters","href":"/ko/docs/next/admin-api-clusters","docId":"admin-api-clusters"},{"type":"link","label":"Tenants","href":"/ko/docs/next/admin-api-tenants","docId":"admin-api-tenants"},{"type":"link","label":"Brokers","href":"/ko/docs/next/admin-api-brokers","docId":"admin-api-brokers"},{"type":"link","label":"Namespaces","href":"/ko/docs/next/admin-api-namespaces","docId":"admin-api-namespaces"},{"type":"link","label":"Permissions","href":"/ko/docs/next/admin-api-permissions","docId":"admin-api-permissions"},{"type":"link","label":"Topics","href":"/ko/docs/next/admin-api-topics","docId":"admin-api-topics"},{"type":"link","label":"Functions","href":"/ko/docs/next/admin-api-functions","docId":"admin-api-functions"},{"type":"link","label":"Packages","href":"/ko/docs/next/admin-api-packages","docId":"admin-api-packages"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Adaptors","items":[{"type":"link","label":"Kafka client wrapper","href":"/ko/docs/next/adaptors-kafka","docId":"adaptors-kafka"},{"type":"link","label":"Apache Spark","href":"/ko/docs/next/adaptors-spark","docId":"adaptors-spark"},{"type":"link","label":"Apache Storm","href":"/ko/docs/next/adaptors-storm","docId":"adaptors-storm"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Cookbooks","items":[{"type":"link","label":"Topic compaction","href":"/ko/docs/next/cookbooks-compaction","docId":"cookbooks-compaction"},{"type":"link","label":"Message deduplication","href":"/ko/docs/next/cookbooks-deduplication","docId":"cookbooks-deduplication"},{"type":"link","label":"Non-persistent messaging","href":"/ko/docs/next/cookbooks-non-persistent","docId":"cookbooks-non-persistent"},{"type":"link","label":"Message retention and expiry","href":"/ko/docs/next/cookbooks-retention-expiry","docId":"cookbooks-retention-expiry"},{"type":"link","label":"Encryption","href":"/ko/docs/next/cookbooks-encryption","docId":"cookbooks-encryption"},{"type":"link","label":"Message queue","href":"/ko/docs/next/cookbooks-message-queue","docId":"cookbooks-message-queue"},{"type":"link","label":"BookKeeper Ledger Metadata","href":"/ko/docs/next/cookbooks-bookkeepermetadata","docId":"cookbooks-bookkeepermetadata"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Development","items":[{"type":"link","label":"Simulation tools","href":"/ko/docs/next/develop-tools","docId":"develop-tools"},{"type":"link","label":"Binary protocol","href":"/ko/docs/next/develop-binary-protocol","docId":"develop-binary-protocol"},{"type":"link","label":"Modular load manager","href":"/ko/docs/next/develop-load-manager","docId":"develop-load-manager"},{"type":"link","label":"Plugin","href":"/ko/docs/next/develop-plugin","docId":"develop-plugin"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Reference","items":[{"type":"link","label":"Terminology","href":"/ko/docs/next/reference-terminology","docId":"reference-terminology"},{"type":"link","label":"Pulsar CLI tools","href":"/ko/docs/next/reference-cli-tools","docId":"reference-cli-tools"},{"type":"link","label":"Pulsar configuration","href":"/ko/docs/next/reference-configuration","docId":"reference-configuration"},{"type":"link","label":"Pulsar Metrics","href":"/ko/docs/next/reference-metrics","docId":"reference-metrics"},{"type":"link","label":"Pulsar REST APIs","href":"/ko/docs/next/reference-rest-api-overview","docId":"reference-rest-api-overview"}],"collapsed":true,"collapsible":true}]},"docs":{"about":{"id":"about","title":"Welcome to the doc portal!","description":"*","sidebar":"docsSidebar"},"adaptors-kafka":{"id":"adaptors-kafka","title":"Pulsar adaptor for Apache Kafka","description":"Pulsar provides an easy option for applications that are currently written using the Apache Kafka Java client API.","sidebar":"docsSidebar"},"adaptors-spark":{"id":"adaptors-spark","title":"Pulsar adaptor for Apache Spark","description":"Spark Streaming receiver","sidebar":"docsSidebar"},"adaptors-storm":{"id":"adaptors-storm","title":"Pulsar adaptor for Apache Storm","description":"Pulsar Storm is an adaptor for integrating with Apache Storm topologies. It provides core Storm implementations for sending and receiving data.","sidebar":"docsSidebar"},"admin-api-brokers":{"id":"admin-api-brokers","title":"Managing Brokers","description":"Important","sidebar":"docsSidebar"},"admin-api-clusters":{"id":"admin-api-clusters","title":"Managing Clusters","description":"Important","sidebar":"docsSidebar"},"admin-api-functions":{"id":"admin-api-functions","title":"Manage Functions","description":"Important","sidebar":"docsSidebar"},"admin-api-namespaces":{"id":"admin-api-namespaces","title":"Managing Namespaces","description":"Important","sidebar":"docsSidebar"},"admin-api-non-partitioned-topics":{"id":"admin-api-non-partitioned-topics","title":"Managing non-partitioned topics","description":"For details of the content, refer to manage topics."},"admin-api-non-persistent-topics":{"id":"admin-api-non-persistent-topics","title":"Managing non-persistent topics","description":"For details of the content, refer to manage topics."},"admin-api-overview":{"id":"admin-api-overview","title":"Pulsar admin interface","description":"The Pulsar admin interface enables you to manage all important entities in a Pulsar instance, such as tenants, topics, and namespaces.","sidebar":"docsSidebar"},"admin-api-packages":{"id":"admin-api-packages","title":"Manage packages","description":"Important","sidebar":"docsSidebar"},"admin-api-partitioned-topics":{"id":"admin-api-partitioned-topics","title":"Managing partitioned topics","description":"For details of the content, refer to manage topics."},"admin-api-permissions":{"id":"admin-api-permissions","title":"Managing permissions","description":"Important","sidebar":"docsSidebar"},"admin-api-persistent-topics":{"id":"admin-api-persistent-topics","title":"Managing persistent topics","description":"For details of the content, refer to manage topics."},"admin-api-schemas":{"id":"admin-api-schemas","title":"Managing Schemas","description":""},"admin-api-tenants":{"id":"admin-api-tenants","title":"Managing Tenants","description":"Important","sidebar":"docsSidebar"},"admin-api-topics":{"id":"admin-api-topics","title":"Manage topics","description":"Important","sidebar":"docsSidebar"},"administration-dashboard":{"id":"administration-dashboard","title":"Pulsar dashboard","description":"Pulsar dashboard is deprecated. We recommend you use Pulsar Manager to manage and monitor the stats of your topics."},"administration-geo":{"id":"administration-geo","title":"Pulsar geo-replication","description":"Enable geo-replication for a namespace","sidebar":"docsSidebar"},"administration-isolation":{"id":"administration-isolation","title":"Pulsar isolation","description":"In an organization, a Pulsar instance provides services to multiple teams. When organizing the resources across multiple teams, you want to make a suitable isolation plan to avoid the resource competition between different teams and applications and provide high-quality messaging service. In this case, you need to take resource isolation into consideration and weigh your intended actions against expected and unexpected consequences.","sidebar":"docsSidebar"},"administration-load-balance":{"id":"administration-load-balance","title":"Pulsar load balance","description":"Load balance across Pulsar brokers","sidebar":"docsSidebar"},"administration-proxy":{"id":"administration-proxy","title":"Pulsar proxy","description":"Pulsar proxy is an optional gateway. Pulsar proxy is used when direct connections between clients and Pulsar brokers are either infeasible or undesirable. For example, when you run Pulsar in a cloud environment or on Kubernetes or an analogous platform, you can run Pulsar proxy.","sidebar":"docsSidebar"},"administration-pulsar-manager":{"id":"administration-pulsar-manager","title":"Pulsar Manager","description":"Pulsar Manager is a web-based GUI management and monitoring tool that helps administrators and users manage and monitor tenants, namespaces, topics, subscriptions, brokers, clusters, and so on, and supports dynamic configuration of multiple environments.","sidebar":"docsSidebar"},"administration-stats":{"id":"administration-stats","title":"Pulsar stats","description":"Partitioned topics","sidebar":"docsSidebar"},"administration-upgrade":{"id":"administration-upgrade","title":"Upgrade Guide","description":"Upgrade guidelines","sidebar":"docsSidebar"},"administration-zk-bk":{"id":"administration-zk-bk","title":"ZooKeeper and BookKeeper administration","description":"Pulsar relies on two external systems for essential tasks:","sidebar":"docsSidebar"},"client-libraries":{"id":"client-libraries","title":"Pulsar client libraries","description":"Pulsar supports the following client libraries:","sidebar":"docsSidebar"},"client-libraries-cgo":{"id":"client-libraries-cgo","title":"Pulsar CGo client","description":"The CGo client has been deprecated since version 2.7.0. If possible, use the Go client instead."},"client-libraries-cpp":{"id":"client-libraries-cpp","title":"Pulsar C++ client","description":"You can use Pulsar C++ client to create Pulsar producers and consumers in C++.","sidebar":"docsSidebar"},"client-libraries-dotnet":{"id":"client-libraries-dotnet","title":"Pulsar C# client","description":"You can use the Pulsar C# client (DotPulsar) to create Pulsar producers and consumers in C#. All the methods in the producer, consumer, and reader of a C# client are thread-safe. The official documentation for DotPulsar is available here.","sidebar":"docsSidebar"},"client-libraries-go":{"id":"client-libraries-go","title":"Pulsar Go client","description":"Tips: The CGo client has been deprecated since version 2.7.0.","sidebar":"docsSidebar"},"client-libraries-java":{"id":"client-libraries-java","title":"Pulsar Java client","description":"You can use a Pulsar Java client to create the Java producer, consumer, readers and TableView of messages and to perform administrative tasks. The current Java client version is @pulsar:version@.","sidebar":"docsSidebar"},"client-libraries-node":{"id":"client-libraries-node","title":"The Pulsar Node.js client","description":"The Pulsar Node.js client can be used to create Pulsar producers, consumers, and readers in Node.js.","sidebar":"docsSidebar"},"client-libraries-python":{"id":"client-libraries-python","title":"Pulsar Python client","description":"Pulsar Python client library is a wrapper over the existing C++ client library and exposes all of the same features. You can find the code in the Python directory of the C++ client code.","sidebar":"docsSidebar"},"client-libraries-rest":{"id":"client-libraries-rest","title":"Pulsar REST","description":"Pulsar not only provides REST endpoints to manage resources in Pulsar clusters, but also provides methods to query the state for those resources. In addition, Pulsar REST provides a simple way to interact with Pulsar without using client libraries, which is convenient for applications to use HTTP to interact with Pulsar.","sidebar":"docsSidebar"},"client-libraries-websocket":{"id":"client-libraries-websocket","title":"Pulsar WebSocket API","description":"Pulsar WebSocket API provides a simple way to interact with Pulsar using languages that do not have an official client library. Through WebSocket, you can publish and consume messages and use features available on the Client Features Matrix page.","sidebar":"docsSidebar"},"concepts-architecture":{"id":"concepts-architecture","title":"Pulsar concepts and architecture","description":""},"concepts-architecture-overview":{"id":"concepts-architecture-overview","title":"Architecture Overview","description":"At the highest level, a Pulsar instance is composed of one or more Pulsar clusters. Clusters within an instance can replicate data amongst themselves.","sidebar":"docsSidebar"},"concepts-authentication":{"id":"concepts-authentication","title":"Authentication and Authorization","description":"Pulsar supports a pluggable authentication mechanism which can be configured at the proxy and/or the broker. Pulsar also supports a pluggable authorization mechanism. These mechanisms work together to identify the client and its access rights on topics, namespaces and tenants.","sidebar":"docsSidebar"},"concepts-clients":{"id":"concepts-clients","title":"Pulsar Clients","description":"Pulsar exposes a client API with language bindings for Java, Go, Python, C++ and C#. The client API optimizes and encapsulates Pulsar\'s client-broker communication protocol and exposes a simple and intuitive API for use by applications.","sidebar":"docsSidebar"},"concepts-messaging":{"id":"concepts-messaging","title":"Messaging","description":"Pulsar is built on the publish-subscribe pattern (often abbreviated to pub-sub). In this pattern, producers publish messages to topics; consumers subscribe to those topics, process incoming messages, and send acknowledgements to the broker when processing is finished.","sidebar":"docsSidebar"},"concepts-multi-tenancy":{"id":"concepts-multi-tenancy","title":"Multi Tenancy","description":"Pulsar was created from the ground up as a multi-tenant system. To support multi-tenancy, Pulsar has a concept of tenants. Tenants can be spread across clusters and can each have their own authentication and authorization scheme applied to them. They are also the administrative unit at which storage quotas, message TTL, and isolation policies can be managed.","sidebar":"docsSidebar"},"concepts-multiple-advertised-listeners":{"id":"concepts-multiple-advertised-listeners","title":"Multiple advertised listeners","description":"When a Pulsar cluster is deployed in the production environment, it may require to expose multiple advertised addresses for the broker. For example, when you deploy a Pulsar cluster in Kubernetes and want other clients, which are not in the same Kubernetes cluster, to connect to the Pulsar cluster, you need to assign a broker URL to external clients. But clients in the same Kubernetes cluster can still connect to the Pulsar cluster through the internal network of Kubernetes.","sidebar":"docsSidebar"},"concepts-overview":{"id":"concepts-overview","title":"Pulsar Overview","description":"Pulsar is a multi-tenant, high-performance solution for server-to-server messaging. Pulsar was originally developed by Yahoo, it is under the stewardship of the Apache Software Foundation.","sidebar":"docsSidebar"},"concepts-proxy-sni-routing":{"id":"concepts-proxy-sni-routing","title":"Proxy support with SNI routing","description":"A proxy server is an intermediary server that forwards requests from multiple clients to different servers across the Internet. The proxy server acts as a \\"traffic cop\\" in both forward and reverse proxy scenarios, and benefits your system such as load balancing, performance, security, auto-scaling, and so on.","sidebar":"docsSidebar"},"concepts-replication":{"id":"concepts-replication","title":"Geo Replication","description":"Regardless of industries, when an unforeseen event occurs and brings day-to-day operations to a halt, an organization needs a well-prepared disaster recovery plan to quickly restore service to clients. However, a disaster recovery plan usually requires a multi-datacenter deployment with geographically dispersed data centers. Such a multi-datacenter deployment requires a geo-replication mechanism to provide additional redundancy in case a data center fails.","sidebar":"docsSidebar"},"concepts-schema-registry":{"id":"concepts-schema-registry","title":"Schema Registry","description":""},"concepts-tiered-storage":{"id":"concepts-tiered-storage","title":"Tiered Storage","description":"Pulsar\'s segment oriented architecture allows for topic backlogs to grow very large, effectively without limit. However, this can become expensive over time."},"concepts-topic-compaction":{"id":"concepts-topic-compaction","title":"Topic Compaction","description":"Pulsar was built with highly scalable persistent storage of message data as a primary objective. Pulsar topics enable you to persistently store as many unacknowledged messages as you need while preserving message ordering. By default, Pulsar stores all unacknowledged/unprocessed messages produced on a topic. Accumulating many unacknowledged messages on a topic is necessary for many Pulsar use cases but it can also be very time intensive for Pulsar consumers to \\"rewind\\" through the entire log of messages.","sidebar":"docsSidebar"},"cookbooks-bookkeepermetadata":{"id":"cookbooks-bookkeepermetadata","title":"BookKeeper Ledger Metadata","description":"Pulsar stores data on BookKeeper ledgers, you can understand the contents of a ledger by inspecting the metadata attached to the ledger. Such metadata are stored on ZooKeeper and they are readable using BookKeeper APIs.","sidebar":"docsSidebar"},"cookbooks-compaction":{"id":"cookbooks-compaction","title":"Topic compaction","description":"Pulsar\'s topic compaction feature enables you to create compacted topics in which older, \\"obscured\\" entries are pruned from the topic, allowing for faster reads through the topic\'s history (which messages are deemed obscured/outdated/irrelevant will depend on your use case).","sidebar":"docsSidebar"},"cookbooks-deduplication":{"id":"cookbooks-deduplication","title":"Message deduplication","description":"When Message deduplication is enabled, it ensures that each message produced on Pulsar topics is persisted to disk only once, even if the message is produced more than once. Message deduplication is handled automatically on the server side.","sidebar":"docsSidebar"},"cookbooks-encryption":{"id":"cookbooks-encryption","title":"Pulsar Encryption","description":"Pulsar encryption allows applications to encrypt messages at the producer and decrypt at the consumer. Encryption is performed using the public/private key pair configured by the application. Encrypted messages can only be decrypted by consumers with a valid key.","sidebar":"docsSidebar"},"cookbooks-message-queue":{"id":"cookbooks-message-queue","title":"Using Pulsar as a message queue","description":"Message queues are essential components of many large-scale data architectures. If every single work object that passes through your system absolutely must be processed in spite of the slowness or downright failure of this or that system component, there\'s a good chance that you\'ll need a message queue to step in and ensure that unprocessed data is retained---with correct ordering---until the required actions are taken.","sidebar":"docsSidebar"},"cookbooks-non-persistent":{"id":"cookbooks-non-persistent","title":"Non-persistent messaging","description":"Non-persistent topics are Pulsar topics in which message data is never persistently stored and kept only in memory. This cookbook provides:","sidebar":"docsSidebar"},"cookbooks-partitioned":{"id":"cookbooks-partitioned","title":"Partitioned topics","description":"For details of the content, refer to manage topics."},"cookbooks-retention-expiry":{"id":"cookbooks-retention-expiry","title":"Message retention and expiry","description":"Pulsar brokers are responsible for handling messages that pass through Pulsar, including persistent storage of messages. By default, for each topic, brokers only retain messages that are in at least one backlog. A backlog is the set of unacknowledged messages for a particular subscription. As a topic can have multiple subscriptions, a topic can have multiple backlogs.","sidebar":"docsSidebar"},"cookbooks-tiered-storage":{"id":"cookbooks-tiered-storage","title":"Tiered Storage","description":"Pulsar\'s Tiered Storage feature allows older backlog data to be offloaded to long term storage, thereby freeing up space in BookKeeper and reducing storage costs. This cookbook walks you through using tiered storage in your Pulsar cluster."},"deploy-aws":{"id":"deploy-aws","title":"Deploying a Pulsar cluster on AWS using Terraform and Ansible","description":"For instructions on deploying a single Pulsar cluster manually rather than using Terraform and Ansible, see Deploying a Pulsar cluster on bare metal. For instructions on manually deploying a multi-cluster Pulsar instance, see Deploying a Pulsar instance on bare metal.","sidebar":"docsSidebar"},"deploy-bare-metal":{"id":"deploy-bare-metal","title":"Deploy a cluster on bare metal","description":"1. You can use single-cluster Pulsar installation in most use cases, such as experimenting with Pulsar or using Pulsar in a startup or in a single team. If you need to run a multi-cluster Pulsar instance, see the guide.","sidebar":"docsSidebar"},"deploy-bare-metal-multi-cluster":{"id":"deploy-bare-metal-multi-cluster","title":"Deploying a multi-cluster on bare metal","description":"1. You can use single-cluster Pulsar installation in most use cases, such as experimenting with Pulsar or using Pulsar in a startup or in a single team. If you need to run a multi-cluster Pulsar instance, see the guide.","sidebar":"docsSidebar"},"deploy-dcos":{"id":"deploy-dcos","title":"Deploy Pulsar on DC/OS","description":"To enable all built-in Pulsar IO connectors in your Pulsar deploymente, we recommend you use apachepulsar/pulsar-all image instead of apachepulsar/pulsar image; the former has already bundled all built-in connectors."},"deploy-docker":{"id":"deploy-docker","title":"Deploy a cluster on Docker","description":"To deploy a Pulsar cluster on Docker, complete the following steps:","sidebar":"docsSidebar"},"deploy-kubernetes":{"id":"deploy-kubernetes","title":"Deploy Pulsar on Kubernetes","description":"To get up and running with these charts as fast as possible, in a non-production use case, we provide a quick start guide for Proof of Concept (PoC) deployments.","sidebar":"docsSidebar"},"deploy-monitoring":{"id":"deploy-monitoring","title":"Monitor","description":"You can use different ways to monitor a Pulsar cluster, exposing both metrics related to the usage of topics and the overall health of the individual components of the cluster.","sidebar":"docsSidebar"},"develop-binary-protocol":{"id":"develop-binary-protocol","title":"Pulsar binary protocol specification","description":"Pulsar uses a custom binary protocol for communications between producers/consumers and brokers. This protocol is designed to support required features, such as acknowledgements and flow control, while ensuring maximum transport and implementation efficiency.","sidebar":"docsSidebar"},"develop-load-manager":{"id":"develop-load-manager","title":"Modular load manager","description":"The modular load manager, implemented in  ModularLoadManagerImpl, is a flexible alternative to the previously implemented load manager, SimpleLoadManagerImpl, which attempts to simplify how load is managed while also providing abstractions so that complex load management strategies may be implemented.","sidebar":"docsSidebar"},"develop-plugin":{"id":"develop-plugin","title":"Pulsar plugin development","description":"You can develop various plugins for Pulsar, such as entry filters, protocol handlers, interceptors, and so on.","sidebar":"docsSidebar"},"develop-schema":{"id":"develop-schema","title":"Custom schema storage","description":"By default, Pulsar stores data type schemas in Apache BookKeeper (which is deployed alongside Pulsar). You can, however, use another storage system if you wish. This doc walks you through creating your own schema storage implementation."},"develop-tools":{"id":"develop-tools","title":"Simulation tools","description":"It is sometimes necessary create an test environment and incur artificial load to observe how well load managers handle the load. The load simulation controller, the load simulation client, and the broker monitor were created as an effort to make create this load and observe the effects on the managers more easily.","sidebar":"docsSidebar"},"functions-api":{"id":"functions-api","title":"The Pulsar Functions API","description":""},"functions-cli":{"id":"functions-cli","title":"Pulsar Functions command line tool","description":"The following tables list Pulsar Functions command-line tools. You can learn Pulsar Functions modes, commands, and parameters.","sidebar":"docsSidebar"},"functions-debug":{"id":"functions-debug","title":"Debug Pulsar Functions","description":"You can use the following methods to debug Pulsar Functions:","sidebar":"docsSidebar"},"functions-debugging":{"id":"functions-debugging","title":"How to debug Pulsar Functions","description":""},"functions-deploy":{"id":"functions-deploy","title":"Deploy Pulsar Functions","description":"Requirements","sidebar":"docsSidebar"},"functions-deploying":{"id":"functions-deploying","title":"Deploying and managing Pulsar Functions","description":""},"functions-develop":{"id":"functions-develop","title":"Develop Pulsar Functions","description":"You learn how to develop Pulsar Functions with different APIs for Java, Python and Go.","sidebar":"docsSidebar"},"functions-guarantees":{"id":"functions-guarantees","title":"Processing guarantees","description":""},"functions-metrics":{"id":"functions-metrics","title":"Metrics for Pulsar Functions","description":""},"functions-overview":{"id":"functions-overview","title":"Pulsar Functions overview","description":"Pulsar Functions are lightweight compute processes that","sidebar":"docsSidebar"},"functions-package":{"id":"functions-package","title":"Package Pulsar Functions","description":"You can package Pulsar functions in Java, Python, and Go. Packaging the window function in Java is the same as packaging a function in Java.","sidebar":"docsSidebar"},"functions-quickstart":{"id":"functions-quickstart","title":"Getting started with Pulsar Functions","description":""},"functions-runtime":{"id":"functions-runtime","title":"Configure Functions runtime","description":"You can use the following methods to run functions.","sidebar":"docsSidebar"},"functions-state":{"id":"functions-state","title":"Pulsar Functions State Storage (Developer Preview)","description":""},"functions-worker":{"id":"functions-worker","title":"Deploy and manage functions worker","description":"Before using Pulsar Functions, you need to learn how to set up Pulsar Functions worker and how to configure Functions runtime.","sidebar":"docsSidebar"},"helm-deploy":{"id":"helm-deploy","title":"Deploy Pulsar cluster using Helm","description":"Before running helm install, you need to decide how to run Pulsar. Options can be specified using Helm\'s --set option.name=value command line option.","sidebar":"docsSidebar"},"helm-install":{"id":"helm-install","title":"Install Apache Pulsar using Helm","description":"Install Apache Pulsar on Kubernetes with the official Pulsar Helm chart.","sidebar":"docsSidebar"},"helm-overview":{"id":"helm-overview","title":"Apache Pulsar Helm Chart","description":"Helm chart supports you to install Apache Pulsar in a cloud-native environment.","sidebar":"docsSidebar"},"helm-prepare":{"id":"helm-prepare","title":"Prepare Kubernetes resources","description":"For a fully functional Pulsar cluster, you need a few resources before deploying the Apache Pulsar Helm chart. The following provides instructions to prepare the Kubernetes cluster before deploying the Pulsar Helm chart.","sidebar":"docsSidebar"},"helm-tools":{"id":"helm-tools","title":"Required tools for deploying Pulsar Helm Chart","description":"Before deploying Pulsar to your Kubernetes cluster, there are some tools you must have installed locally.","sidebar":"docsSidebar"},"helm-upgrade":{"id":"helm-upgrade","title":"Upgrade Pulsar Helm release","description":"Before upgrading your Pulsar installation, you need to check the change log corresponding to the specific release you want to upgrade to and look for any release notes that might pertain to the new Pulsar helm chart version.","sidebar":"docsSidebar"},"io-aerospike":{"id":"io-aerospike","title":"Aerospike Sink Connector","description":""},"io-aerospike-sink":{"id":"io-aerospike-sink","title":"Aerospike sink connector","description":"The Aerospike sink connector pulls messages from Pulsar topics to Aerospike clusters."},"io-canal-source":{"id":"io-canal-source","title":"Canal source connector","description":"The Canal source connector pulls messages from MySQL to Pulsar topics."},"io-cassandra":{"id":"io-cassandra","title":"Cassandra Sink Connector","description":""},"io-cassandra-sink":{"id":"io-cassandra-sink","title":"Cassandra sink connector","description":"The Cassandra sink connector pulls messages from Pulsar topics to Cassandra clusters."},"io-cdc":{"id":"io-cdc","title":"CDC connector","description":"CDC source connectors capture log changes of databases (such as MySQL, MongoDB, and PostgreSQL) into Pulsar.","sidebar":"docsSidebar"},"io-cdc-canal":{"id":"io-cdc-canal","title":"CDC Canal Connector","description":""},"io-cdc-debezium":{"id":"io-cdc-debezium","title":"Debezium source connector","description":"The Debezium source connector pulls messages from MySQL or PostgreSQL and persists the messages to Pulsar topics."},"io-cli":{"id":"io-cli","title":"Connector Admin CLI","description":"The pulsar-admin tool helps you manage Pulsar connectors.","sidebar":"docsSidebar"},"io-connectors":{"id":"io-connectors","title":"Built-in connector","description":"Pulsar distribution includes a set of common connectors that have been packaged and tested with the rest of Apache Pulsar. These connectors import and export data from some of the most commonly used data systems.","sidebar":"docsSidebar"},"io-debezium-source":{"id":"io-debezium-source","title":"Debezium source connector","description":"The Debezium source connector pulls messages from MySQL or PostgreSQL and persists the messages to Pulsar topics."},"io-debug":{"id":"io-debug","title":"How to debug Pulsar connectors","description":"This guide explains how to debug connectors in localrun or cluster mode and gives a debugging checklist. To better demonstrate how to debug Pulsar connectors, here takes a Mongo sink connector as an example.","sidebar":"docsSidebar"},"io-develop":{"id":"io-develop","title":"How to develop Pulsar connectors","description":"This guide describes how to develop Pulsar connectors to move data between Pulsar and other systems.","sidebar":"docsSidebar"},"io-dynamodb":{"id":"io-dynamodb","title":"AWS DynamoDB Connector","description":""},"io-dynamodb-source":{"id":"io-dynamodb-source","title":"AWS DynamoDB source connector","description":"The DynamoDB source connector pulls data from DynamoDB table streams and persists data into Pulsar."},"io-elasticsearch":{"id":"io-elasticsearch","title":"ElasticSearch Connector","description":""},"io-elasticsearch-sink":{"id":"io-elasticsearch-sink","title":"Elasticsearch sink connector","description":"The Elasticsearch sink connector pulls messages from Pulsar topics and persists the messages to indexes."},"io-file":{"id":"io-file","title":"File Connector","description":""},"io-file-source":{"id":"io-file-source","title":"File source connector","description":"The File source connector pulls messages from files in directories and persists the messages to Pulsar topics."},"io-flume-sink":{"id":"io-flume-sink","title":"Flume sink connector","description":"The Flume sink connector pulls messages from Pulsar topics to logs."},"io-flume-source":{"id":"io-flume-source","title":"Flume source connector","description":"The Flume source connector pulls messages from logs to Pulsar topics."},"io-hbase":{"id":"io-hbase","title":"hbase Connector","description":""},"io-hbase-sink":{"id":"io-hbase-sink","title":"HBase sink connector","description":"The HBase sink connector pulls the messages from Pulsar topics and persists the messages to HBase tables"},"io-hdfs":{"id":"io-hdfs","title":"Hdfs Connector","description":""},"io-hdfs2-sink":{"id":"io-hdfs2-sink","title":"HDFS2 sink connector","description":"The HDFS2 sink connector pulls the messages from Pulsar topics and persists the messages to HDFS files."},"io-hdfs3-sink":{"id":"io-hdfs3-sink","title":"HDFS3 sink connector","description":"The HDFS3 sink connector pulls the messages from Pulsar topics and persists the messages to HDFS files."},"io-influxdb":{"id":"io-influxdb","title":"InfluxDB Connector","description":""},"io-influxdb-sink":{"id":"io-influxdb-sink","title":"InfluxDB sink connector","description":"The InfluxDB sink connector pulls messages from Pulsar topics and persists the messages to InfluxDB."},"io-jdbc":{"id":"io-jdbc","title":"JDBC Connector","description":""},"io-jdbc-sink":{"id":"io-jdbc-sink","title":"JDBC sink connector","description":"The JDBC sink connectors allow pulling messages from Pulsar topics and persists the messages to ClickHouse, MariaDB, PostgreSQL, and SQLite."},"io-kafka":{"id":"io-kafka","title":"Kafka Connector","description":""},"io-kafka-sink":{"id":"io-kafka-sink","title":"Kafka sink connector","description":"The Kafka sink connector pulls messages from Pulsar topics and persists the messages to Kafka topics."},"io-kafka-source":{"id":"io-kafka-source","title":"Kafka source connector","description":"The Kafka source connector pulls messages from Kafka topics and persists the messages to Pulsar topics."},"io-kinesis":{"id":"io-kinesis","title":"AWS Kinesis Connector","description":""},"io-kinesis-sink":{"id":"io-kinesis-sink","title":"Kinesis sink connector","description":"The Kinesis sink connector pulls data from Pulsar and persists data into Amazon Kinesis."},"io-kinesis-source":{"id":"io-kinesis-source","title":"Kinesis source connector","description":"The Kinesis source connector pulls data from Amazon Kinesis and persists data into Pulsar."},"io-mongo":{"id":"io-mongo","title":"MongoDB Connector","description":""},"io-mongo-sink":{"id":"io-mongo-sink","title":"MongoDB sink connector","description":"The MongoDB sink connector pulls messages from Pulsar topics and persists the messages to collections."},"io-netty":{"id":"io-netty","title":"Netty Tcp or Udp Connector","description":""},"io-netty-source":{"id":"io-netty-source","title":"Netty source connector","description":"The Netty source connector opens a port that accepts incoming data via the configured network protocol and publish it to user-defined Pulsar topics."},"io-nsq":{"id":"io-nsq","title":"NSQ Connector","description":""},"io-nsq-source":{"id":"io-nsq-source","title":"NSQ source connector","description":"The NSQ source connector receives messages from NSQ topics and writes messages to Pulsar topics."},"io-overview":{"id":"io-overview","title":"Pulsar connector overview","description":"Messaging systems are most powerful when you can easily use them with external systems like databases and other messaging systems.","sidebar":"docsSidebar"},"io-quickstart":{"id":"io-quickstart","title":"How to connect Pulsar to database","description":"This tutorial provides a hands-on look at how you can move data out of Pulsar without writing a single line of code.","sidebar":"docsSidebar"},"io-rabbitmq":{"id":"io-rabbitmq","title":"RabbitMQ Connector","description":""},"io-rabbitmq-sink":{"id":"io-rabbitmq-sink","title":"RabbitMQ sink connector","description":"The RabbitMQ sink connector pulls messages from Pulsar topics and persist the messages to RabbitMQ queues."},"io-rabbitmq-source":{"id":"io-rabbitmq-source","title":"RabbitMQ source connector","description":"The RabbitMQ source connector receives messages from RabbitMQ clusters and writes messages to Pulsar topics."},"io-redis":{"id":"io-redis","title":"redis Connector","description":""},"io-redis-sink":{"id":"io-redis-sink","title":"Redis sink connector","description":"The  Redis sink connector pulls messages from Pulsar topics and persists the messages to a Redis database."},"io-solr":{"id":"io-solr","title":"solr Connector","description":""},"io-solr-sink":{"id":"io-solr-sink","title":"Solr sink connector","description":"The Solr sink connector pulls messages from Pulsar topics and persists the messages to Solr collections."},"io-tcp":{"id":"io-tcp","title":"Netty Tcp Connector","description":""},"io-twitter":{"id":"io-twitter","title":"Twitter Firehose Connector","description":""},"io-twitter-source":{"id":"io-twitter-source","title":"Twitter Firehose source connector","description":"The Twitter Firehose source connector receives tweets from Twitter Firehose and writes the tweets to Pulsar topics."},"io-use":{"id":"io-use","title":"How to use Pulsar connectors","description":"This guide describes how to use Pulsar connectors.","sidebar":"docsSidebar"},"kubernetes-helm":{"id":"kubernetes-helm","title":"Get started in Kubernetes","description":"This section guides you through every step of installing and running Apache Pulsar with Helm on Kubernetes quickly, including the following sections:","sidebar":"docsSidebar"},"performance-pulsar-perf":{"id":"performance-pulsar-perf","title":"Pulsar Perf","description":"The Pulsar Perf is a built-in performance test tool for Apache Pulsar. You can use the Pulsar Perf to test message writing or reading performance. For detailed information about performance tuning, see here.","sidebar":"docsSidebar"},"pulsar-2.0":{"id":"pulsar-2.0","title":"Pulsar 2.0","description":"Pulsar 2.0 is a major new release for Pulsar that brings some bold changes to the platform, including simplified topic names, the addition of the Pulsar Functions feature, some terminology changes, and more."},"pulsar-admin":{"id":"pulsar-admin","title":"Pulsar admin CLI","description":"Important"},"reference-cli-tools":{"id":"reference-cli-tools","title":"Pulsar command-line tools","description":"Pulsar offers several command-line tools that you can use for managing Pulsar installations, performance testing, using command-line producers and consumers, and more.","sidebar":"docsSidebar"},"reference-configuration":{"id":"reference-configuration","title":"Pulsar configuration","description":"You can manage Pulsar configuration by configuration files in the conf directory of a Pulsar installation.","sidebar":"docsSidebar"},"reference-connector-admin":{"id":"reference-connector-admin","title":"Connector Admin CLI","description":"Important"},"reference-metrics":{"id":"reference-metrics","title":"Pulsar Metrics","description":"Pulsar exposes the following metrics in Prometheus format. You can monitor your clusters with those metrics.","sidebar":"docsSidebar"},"reference-rest-api-overview":{"id":"reference-rest-api-overview","title":"Pulsar REST APIs","description":"A REST API (also known as RESTful API, REpresentational State Transfer Application Programming Interface) is a set of definitions and protocols for building and integrating application software, using HTTP requests to GET, PUT, POST, and DELETE data following the REST standards. In essence, REST API is a set of remote calls using standard methods to request and return data in a specific format between two systems.","sidebar":"docsSidebar"},"reference-terminology":{"id":"reference-terminology","title":"Pulsar Terminology","description":"Here is a glossary of terms related to Apache Pulsar:","sidebar":"docsSidebar"},"schema-evolution-compatibility":{"id":"schema-evolution-compatibility","title":"Schema evolution and compatibility","description":"Normally, schemas do not stay the same over a long period of time. Instead, they undergo evolutions to satisfy new needs.","sidebar":"docsSidebar"},"schema-get-started":{"id":"schema-get-started","title":"Get started","description":"This chapter introduces Pulsar schemas and explains why they are important.","sidebar":"docsSidebar"},"schema-manage":{"id":"schema-manage","title":"Manage schema","description":"This guide demonstrates the ways to manage schemas:","sidebar":"docsSidebar"},"schema-understand":{"id":"schema-understand","title":"Understand schema","description":"This chapter explains the basic concepts of Pulsar schema, focuses on the topics of particular importance, and provides additional background.","sidebar":"docsSidebar"},"security-athenz":{"id":"security-athenz","title":"Authentication using Athenz","description":"Athenz is a role-based authentication/authorization system. In Pulsar, you can use Athenz role tokens (also known as z-tokens) to establish the identify of the client.","sidebar":"docsSidebar"},"security-authorization":{"id":"security-authorization","title":"Authentication and authorization in Pulsar","description":"In Pulsar, the authentication provider is responsible for properly identifying clients and associating the clients with role tokens. If you only enable authentication, an authenticated role token has the ability to access all resources in the cluster. Authorization is the process that determines what clients are able to do.","sidebar":"docsSidebar"},"security-bouncy-castle":{"id":"security-bouncy-castle","title":"Bouncy Castle Providers","description":"BouncyCastle Introduce","sidebar":"docsSidebar"},"security-encryption":{"id":"security-encryption","title":"Pulsar Encryption","description":"Applications can use Pulsar encryption to encrypt messages at the producer side and decrypt messages at the consumer side. You can use the public and private key pair that the application configures to perform encryption. Only the consumers with a valid key can decrypt the encrypted messages.","sidebar":"docsSidebar"},"security-extending":{"id":"security-extending","title":"Extend Authentication and Authorization in Pulsar","description":"Pulsar provides a way to use custom authentication and authorization mechanisms.","sidebar":"docsSidebar"},"security-jwt":{"id":"security-jwt","title":"Client authentication using tokens based on JSON Web Tokens","description":"Token authentication overview","sidebar":"docsSidebar"},"security-kerberos":{"id":"security-kerberos","title":"Authentication using Kerberos","description":"Kerberos is a network authentication protocol. By using secret-key cryptography, Kerberos is designed to provide strong authentication for client applications and server applications.","sidebar":"docsSidebar"},"security-oauth2":{"id":"security-oauth2","title":"Client authentication using OAuth 2.0 access tokens","description":"Pulsar supports authenticating clients using OAuth 2.0 access tokens. You can use OAuth 2.0 access tokens to identify a Pulsar client and associate the Pulsar client with some \\"principal\\" (or \\"role\\"), which is permitted to do some actions, such as publishing messages to a topic or consume messages from a topic.","sidebar":"docsSidebar"},"security-overview":{"id":"security-overview","title":"Pulsar security overview","description":"As the central message bus for a business, Apache Pulsar is frequently used for storing mission-critical data. Therefore, enabling security features in Pulsar is crucial.","sidebar":"docsSidebar"},"security-policy-and-supported-versions":{"id":"security-policy-and-supported-versions","title":"Security Policy and Supported Versions","description":"Using Pulsar\'s Security Features"},"security-tls-authentication":{"id":"security-tls-authentication","title":"Authentication using TLS","description":"TLS authentication overview","sidebar":"docsSidebar"},"security-tls-keystore":{"id":"security-tls-keystore","title":"Using TLS with KeyStore configure","description":"Overview","sidebar":"docsSidebar"},"security-tls-transport":{"id":"security-tls-transport","title":"Transport Encryption using TLS","description":"TLS overview","sidebar":"docsSidebar"},"security-token-admin":{"id":"security-token-admin","title":"Token authentication admin","description":"Token Authentication Overview"},"sql-deployment-configurations":{"id":"sql-deployment-configurations","title":"Pulsar SQL configuration and deployment","description":"You can configure Presto Pulsar connector and deploy a cluster with the following instruction.","sidebar":"docsSidebar"},"sql-getting-started":{"id":"sql-getting-started","title":"Query data with Pulsar SQL","description":"Before querying data in Pulsar, you need to install Pulsar and built-in connectors.","sidebar":"docsSidebar"},"sql-overview":{"id":"sql-overview","title":"Pulsar SQL Overview","description":"Apache Pulsar is used to store streams of event data, and the event data is structured with predefined fields. With the implementation of the Schema Registry, you can store structured data in Pulsar and query the data by using Trino (formerly Presto SQL).","sidebar":"docsSidebar"},"sql-rest-api":{"id":"sql-rest-api","title":"Pulsar SQL REST APIs","description":"This section lists resources that make up the Presto REST API v1.","sidebar":"docsSidebar"},"standalone":{"id":"standalone","title":"Set up a standalone Pulsar locally","description":"For local development and testing, you can run Pulsar in standalone mode on your machine. The standalone mode includes a Pulsar broker, the necessary RocksDB and BookKeeper components running inside of a single Java Virtual Machine (JVM) process.","sidebar":"docsSidebar"},"standalone-docker":{"id":"standalone-docker","title":"Set up a standalone Pulsar in Docker","description":"For local development and testing, you can run Pulsar in standalone mode on your own machine within a Docker container.","sidebar":"docsSidebar"},"tiered-storage-aliyun":{"id":"tiered-storage-aliyun","title":"Use Aliyun OSS offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the Aliyun Object Storage Service (OSS) offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-aws":{"id":"tiered-storage-aws","title":"Use AWS S3 offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the AWS S3 offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-azure":{"id":"tiered-storage-azure","title":"Use Azure BlobStore offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the Azure BlobStore offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-filesystem":{"id":"tiered-storage-filesystem","title":"Use filesystem offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the filesystem offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-gcs":{"id":"tiered-storage-gcs","title":"Use GCS offloader with Pulsar","description":"This chapter guides you through every step of installing and configuring the GCS offloader and using it with Pulsar.","sidebar":"docsSidebar"},"tiered-storage-overview":{"id":"tiered-storage-overview","title":"Overview of tiered storage","description":"Pulsar\'s Tiered Storage feature allows older backlog data to be moved from BookKeeper to long term and cheaper storage, while still allowing clients to access the backlog as if nothing has changed.","sidebar":"docsSidebar"},"transactions":{"id":"transactions","title":"Transactions","description":"Transactional semantics enable event streaming applications to consume, process, and produce messages in one atomic operation. In Pulsar, a producer or consumer can work with messages across multiple topics and partitions and ensure those messages are processed as a single unit."},"transactions-api":{"id":"transactions-api","title":"Transactions API","description":"All messages in a transaction are available only to consumers after the transaction has been committed. If a transaction has been aborted, all the writes and acknowledgments in this transaction roll back."},"transactions-guarantee":{"id":"transactions-guarantee","title":"Transactions Guarantee","description":"Pulsar transactions support the following guarantee."},"txn-how":{"id":"txn-how","title":"How transactions work?","description":"This section describes transaction components and how the components work together. For the complete design details, see PIP-31: Transactional Streaming.","sidebar":"docsSidebar"},"txn-monitor":{"id":"txn-monitor","title":"How to monitor transactions?","description":"You can monitor the status of the transactions in Prometheus and Grafana using the transaction metrics.","sidebar":"docsSidebar"},"txn-use":{"id":"txn-use","title":"How to use transactions?","description":"Transaction API","sidebar":"docsSidebar"},"txn-what":{"id":"txn-what","title":"What are transactions?","description":"Transactions strengthen the message delivery semantics of Apache Pulsar and processing guarantees of Pulsar Functions. The Pulsar Transaction API supports atomic writes and acknowledgments across multiple topics.","sidebar":"docsSidebar"},"txn-why":{"id":"txn-why","title":"Why transactions?","description":"Pulsar transactions (txn) enable event streaming applications to consume, process, and produce messages in one atomic operation. The reason for developing this feature can be summarized as below.","sidebar":"docsSidebar"},"window-functions-context":{"id":"window-functions-context","title":"Window Functions Context","description":"Java SDK provides access to a window context object that can be used by a window function. This context object provides a wide variety of information and functionality for Pulsar window functions as below.","sidebar":"docsSidebar"}}}')}}]);