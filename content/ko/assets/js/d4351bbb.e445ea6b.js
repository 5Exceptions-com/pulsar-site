"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[30215],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return h}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),c=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=c(r),h=a,f=m["".concat(o,".").concat(h)]||m[h]||s[h]||i;return r?n.createElement(f,l(l({ref:t},u),{},{components:r})):n.createElement(f,l({ref:t},u))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,l=new Array(i);l[0]=m;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,l[1]=p;for(var c=2;c<i;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},79021:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return o},default:function(){return h},frontMatter:function(){return p},metadata:function(){return c},toc:function(){return s}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),l=["components"],p={id:"client-cpp-2.10.0",title:"Client CPP 2.10.0",sidebar_label:"Client CPP 2.10.0"},o=void 0,c={unversionedId:"versioned/client-cpp-2.10.0",id:"versioned/client-cpp-2.10.0",title:"Client CPP 2.10.0",description:"- C++] Add Wireshark cmake and fix build with latest Wireshark [#13236",source:"@site/release-notes/versioned/client-cpp-2.10.0.md",sourceDirName:"versioned",slug:"/versioned/client-cpp-2.10.0",permalink:"/ko/release-notes/versioned/client-cpp-2.10.0",tags:[],version:"current",frontMatter:{id:"client-cpp-2.10.0",title:"Client CPP 2.10.0",sidebar_label:"Client CPP 2.10.0"}},u={},s=[],m={toc:s};function h(e){var t=e.components,r=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"[C++]"," Add Wireshark cmake and fix build with latest Wireshark ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13236"},"#13236")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Wireshark Pulsar dissector naming replace yahoo with apache ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13251"},"#13251")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Support arm64 optimized CRC32c hardware-instructions ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13246"},"#13246")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Support more pulsar command names and versions in Wireshark dissector ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13286"},"#13286")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Optimize MessageBuilder and SharedBuffer to avoid unnecessary memory copy ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13293"},"#13293")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Fix in Apple Silicon macOS the clang-format cannot find ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13333"},"#13333")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Add clang-format check for Pulsar Wireshark dissector ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13349"},"#13349")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Adjust clang-format search names ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13369"},"#13369")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Fix Wireshark dissector decode send command metadata behavior ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13471"},"#13471")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," PIP 37: Support large message size ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/13627"},"#13627")),(0,i.kt)("li",{parentName:"ul"},"[C++]"," Fix the consumer configuration inconsistency with Java client ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/apache/pulsar/pull/14070"},"#14070"))))}h.isMDXComponent=!0}}]);