"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[30361],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=l.createContext({}),d=function(e){var t=l.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=d(e.components);return l.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=d(a),k=n,h=c["".concat(s,".").concat(k)]||c[k]||p[k]||r;return a?l.createElement(h,i(i({ref:t},u),{},{components:a})):l.createElement(h,i({ref:t},u))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=c;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var d=2;d<r;d++)i[d]=a[d];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}c.displayName="MDXCreateElement"},58563:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var l=a(87462),n=(a(67294),a(3905));const r={},i="Standalone",o={unversionedId:"reference-configuration-standalone",id:"reference-configuration-standalone",title:"Standalone",description:"Optional",source:"@site/docs/reference-configuration-standalone.md",sourceDirName:".",slug:"/reference-configuration-standalone",permalink:"/docs/next/reference-configuration-standalone",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/reference-configuration-standalone.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Log4j shell",permalink:"/docs/next/reference-configuration-log4j-shell"},next:{title:"WebSocket",permalink:"/docs/next/reference-configuration-websocket"}},s={},d=[{value:"Optional",id:"optional",level:2},{value:"authenticateOriginalAuthData",id:"authenticateoriginalauthdata",level:3},{value:"metadataStoreUrl",id:"metadatastoreurl",level:3},{value:"metadataStoreCacheExpirySeconds",id:"metadatastorecacheexpiryseconds",level:3},{value:"configurationMetadataStoreUrl",id:"configurationmetadatastoreurl",level:3},{value:"brokerServicePort",id:"brokerserviceport",level:3},{value:"webServicePort",id:"webserviceport",level:3},{value:"webServiceTlsProvider",id:"webservicetlsprovider",level:3},{value:"bindAddress",id:"bindaddress",level:3},{value:"bindAddresses",id:"bindaddresses",level:3},{value:"advertisedAddress",id:"advertisedaddress",level:3},{value:"numAcceptorThreads",id:"numacceptorthreads",level:3},{value:"numIOThreads",id:"numiothreads",level:3},{value:"numHttpServerThreads",id:"numhttpserverthreads",level:3},{value:"isRunningStandalone",id:"isrunningstandalone",level:3},{value:"clusterName",id:"clustername",level:3},{value:"failureDomainsEnabled",id:"failuredomainsenabled",level:3},{value:"metadataStoreSessionTimeoutMillis",id:"metadatastoresessiontimeoutmillis",level:3},{value:"metadataStoreOperationTimeoutSeconds",id:"metadatastoreoperationtimeoutseconds",level:3},{value:"brokerShutdownTimeoutMs",id:"brokershutdowntimeoutms",level:3},{value:"skipBrokerShutdownOnOOM",id:"skipbrokershutdownonoom",level:3},{value:"backlogQuotaCheckEnabled",id:"backlogquotacheckenabled",level:3},{value:"backlogQuotaCheckIntervalInSeconds",id:"backlogquotacheckintervalinseconds",level:3},{value:"backlogQuotaDefaultLimitBytes",id:"backlogquotadefaultlimitbytes",level:3},{value:"ttlDurationDefaultInSeconds",id:"ttldurationdefaultinseconds",level:3},{value:"brokerDeleteInactiveTopicsEnabled",id:"brokerdeleteinactivetopicsenabled",level:3},{value:"brokerDeleteInactiveTopicsFrequencySeconds",id:"brokerdeleteinactivetopicsfrequencyseconds",level:3},{value:"maxPendingPublishRequestsPerConnection",id:"maxpendingpublishrequestsperconnection",level:3},{value:"messageExpiryCheckIntervalInMinutes",id:"messageexpirycheckintervalinminutes",level:3},{value:"activeConsumerFailoverDelayTimeMillis",id:"activeconsumerfailoverdelaytimemillis",level:3},{value:"subscriptionExpirationTimeMinutes",id:"subscriptionexpirationtimeminutes",level:3},{value:"subscriptionRedeliveryTrackerEnabled",id:"subscriptionredeliverytrackerenabled",level:3},{value:"subscriptionKeySharedUseConsistentHashing",id:"subscriptionkeyshareduseconsistenthashing",level:3},{value:"subscriptionKeySharedConsistentHashingReplicaPoints",id:"subscriptionkeysharedconsistenthashingreplicapoints",level:3},{value:"subscriptionExpiryCheckIntervalInMinutes",id:"subscriptionexpirycheckintervalinminutes",level:3},{value:"brokerDeduplicationEnabled",id:"brokerdeduplicationenabled",level:3},{value:"brokerDeduplicationMaxNumberOfProducers",id:"brokerdeduplicationmaxnumberofproducers",level:3},{value:"brokerDeduplicationEntriesInterval",id:"brokerdeduplicationentriesinterval",level:3},{value:"brokerDeduplicationProducerInactivityTimeoutMinutes",id:"brokerdeduplicationproducerinactivitytimeoutminutes",level:3},{value:"defaultNumberOfNamespaceBundles",id:"defaultnumberofnamespacebundles",level:3},{value:"clientLibraryVersionCheckEnabled",id:"clientlibraryversioncheckenabled",level:3},{value:"clientLibraryVersionCheckAllowUnversioned",id:"clientlibraryversioncheckallowunversioned",level:3},{value:"statusFilePath",id:"statusfilepath",level:3},{value:"maxUnackedMessagesPerConsumer",id:"maxunackedmessagesperconsumer",level:3},{value:"maxUnackedMessagesPerSubscription",id:"maxunackedmessagespersubscription",level:3},{value:"maxUnackedMessagesPerBroker",id:"maxunackedmessagesperbroker",level:3},{value:"maxUnackedMessagesPerSubscriptionOnBrokerBlocked",id:"maxunackedmessagespersubscriptiononbrokerblocked",level:3},{value:"unblockStuckSubscriptionEnabled",id:"unblockstucksubscriptionenabled",level:3},{value:"topicPublisherThrottlingTickTimeMillis",id:"topicpublisherthrottlingticktimemillis",level:3},{value:"brokerPublisherThrottlingTickTimeMillis",id:"brokerpublisherthrottlingticktimemillis",level:3},{value:"brokerPublisherThrottlingMaxMessageRate",id:"brokerpublisherthrottlingmaxmessagerate",level:3},{value:"brokerPublisherThrottlingMaxByteRate",id:"brokerpublisherthrottlingmaxbyterate",level:3},{value:"subscribeThrottlingRatePerConsumer",id:"subscribethrottlingrateperconsumer",level:3},{value:"subscribeRatePeriodPerConsumerInSecond",id:"subscriberateperiodperconsumerinsecond",level:3},{value:"dispatchThrottlingRateInMsg",id:"dispatchthrottlingrateinmsg",level:3},{value:"dispatchThrottlingRateInByte",id:"dispatchthrottlingrateinbyte",level:3},{value:"dispatchThrottlingRatePerTopicInMsg",id:"dispatchthrottlingratepertopicinmsg",level:3},{value:"dispatchThrottlingRatePerTopicInByte",id:"dispatchthrottlingratepertopicinbyte",level:3},{value:"dispatchThrottlingOnBatchMessageEnabled",id:"dispatchthrottlingonbatchmessageenabled",level:3},{value:"dispatchThrottlingRateRelativeToPublishRate",id:"dispatchthrottlingraterelativetopublishrate",level:3},{value:"dispatchThrottlingRatePerSubscriptionInMsg",id:"dispatchthrottlingratepersubscriptioninmsg",level:3},{value:"dispatchThrottlingRatePerSubscriptionInByte",id:"dispatchthrottlingratepersubscriptioninbyte",level:3},{value:"dispatchThrottlingRatePerReplicatorInMsg",id:"dispatchthrottlingrateperreplicatorinmsg",level:3},{value:"dispatchThrottlingRatePerReplicatorInByte",id:"dispatchthrottlingrateperreplicatorinbyte",level:3},{value:"dispatchThrottlingOnNonBacklogConsumerEnabled",id:"dispatchthrottlingonnonbacklogconsumerenabled",level:3},{value:"dispatcherMaxReadBatchSize",id:"dispatchermaxreadbatchsize",level:3},{value:"dispatcherMaxReadSizeBytes",id:"dispatchermaxreadsizebytes",level:3},{value:"dispatcherMinReadBatchSize",id:"dispatcherminreadbatchsize",level:3},{value:"dispatcherMaxRoundRobinBatchSize",id:"dispatchermaxroundrobinbatchsize",level:3},{value:"preciseDispatcherFlowControl",id:"precisedispatcherflowcontrol",level:3},{value:"streamingDispatch",id:"streamingdispatch",level:3},{value:"maxConcurrentLookupRequest",id:"maxconcurrentlookuprequest",level:3},{value:"maxConcurrentTopicLoadRequest",id:"maxconcurrenttopicloadrequest",level:3},{value:"maxConcurrentNonPersistentMessagePerConnection",id:"maxconcurrentnonpersistentmessageperconnection",level:3},{value:"numWorkerThreadsForNonPersistentTopic",id:"numworkerthreadsfornonpersistenttopic",level:3},{value:"enablePersistentTopics",id:"enablepersistenttopics",level:3},{value:"enableNonPersistentTopics",id:"enablenonpersistenttopics",level:3},{value:"maxSubscriptionsPerTopic",id:"maxsubscriptionspertopic",level:3},{value:"maxProducersPerTopic",id:"maxproducerspertopic",level:3},{value:"maxConsumersPerTopic",id:"maxconsumerspertopic",level:3},{value:"maxConsumersPerSubscription",id:"maxconsumerspersubscription",level:3},{value:"maxNumPartitionsPerPartitionedTopic",id:"maxnumpartitionsperpartitionedtopic",level:3},{value:"metadataStoreBatchingEnabled",id:"metadatastorebatchingenabled",level:3},{value:"metadataStoreBatchingMaxDelayMillis",id:"metadatastorebatchingmaxdelaymillis",level:3},{value:"metadataStoreBatchingMaxOperations",id:"metadatastorebatchingmaxoperations",level:3},{value:"metadataStoreBatchingMaxSizeKb",id:"metadatastorebatchingmaxsizekb",level:3},{value:"tlsCertRefreshCheckDurationSec",id:"tlscertrefreshcheckdurationsec",level:3},{value:"tlsCertificateFilePath",id:"tlscertificatefilepath",level:3},{value:"tlsKeyFilePath",id:"tlskeyfilepath",level:3},{value:"tlsTrustCertsFilePath",id:"tlstrustcertsfilepath",level:3},{value:"tlsAllowInsecureConnection",id:"tlsallowinsecureconnection",level:3},{value:"tlsProtocols",id:"tlsprotocols",level:3},{value:"tlsCiphers",id:"tlsciphers",level:3},{value:"tlsRequireTrustedClientCertOnConnect",id:"tlsrequiretrustedclientcertonconnect",level:3},{value:"tlsEnabledWithKeyStore",id:"tlsenabledwithkeystore",level:3},{value:"tlsProvider",id:"tlsprovider",level:3},{value:"tlsKeyStoreType",id:"tlskeystoretype",level:3},{value:"tlsKeyStore",id:"tlskeystore",level:3},{value:"tlsKeyStorePassword",id:"tlskeystorepassword",level:3},{value:"tlsTrustStoreType",id:"tlstruststoretype",level:3},{value:"tlsTrustStore",id:"tlstruststore",level:3},{value:"tlsTrustStorePassword",id:"tlstruststorepassword",level:3},{value:"brokerClientTlsEnabledWithKeyStore",id:"brokerclienttlsenabledwithkeystore",level:3},{value:"brokerClientSslProvider",id:"brokerclientsslprovider",level:3},{value:"brokerClientTlsTrustStoreType",id:"brokerclienttlstruststoretype",level:3},{value:"brokerClientTlsTrustStore",id:"brokerclienttlstruststore",level:3},{value:"brokerClientTlsTrustStorePassword",id:"brokerclienttlstruststorepassword",level:3},{value:"brokerClientTlsCiphers",id:"brokerclienttlsciphers",level:3},{value:"brokerClientTlsProtocols",id:"brokerclienttlsprotocols",level:3},{value:"systemTopicEnabled",id:"systemtopicenabled",level:3},{value:"topicLevelPoliciesEnabled",id:"topiclevelpoliciesenabled",level:3},{value:"topicFencingTimeoutSeconds",id:"topicfencingtimeoutseconds",level:3},{value:"proxyRoles",id:"proxyroles",level:3},{value:"authenticationEnabled",id:"authenticationenabled",level:3},{value:"authenticationProviders",id:"authenticationproviders",level:3},{value:"authorizationEnabled",id:"authorizationenabled",level:3},{value:"authorizationProvider",id:"authorizationprovider",level:3},{value:"authorizationAllowWildcardsMatching",id:"authorizationallowwildcardsmatching",level:3},{value:"superUserRoles",id:"superuserroles",level:3},{value:"brokerClientAuthenticationPlugin",id:"brokerclientauthenticationplugin",level:3},{value:"brokerClientAuthenticationParameters",id:"brokerclientauthenticationparameters",level:3},{value:"athenzDomainNames",id:"athenzdomainnames",level:3},{value:"anonymousUserRole",id:"anonymoususerrole",level:3},{value:"tokenSettingPrefix",id:"tokensettingprefix",level:3},{value:"tokenSecretKey",id:"tokensecretkey",level:3},{value:"tokenPublicKey",id:"tokenpublickey",level:3},{value:"tokenAuthClaim",id:"tokenauthclaim",level:3},{value:"tokenAudienceClaim",id:"tokenaudienceclaim",level:3},{value:"tokenAudience",id:"tokenaudience",level:3},{value:"saslJaasClientAllowedIds",id:"sasljaasclientallowedids",level:3},{value:"saslJaasServerSectionName",id:"sasljaasserversectionname",level:3},{value:"httpMaxRequestSize",id:"httpmaxrequestsize",level:3},{value:"exposePreciseBacklogInPrometheus",id:"exposeprecisebackloginprometheus",level:3},{value:"bookkeeperMetadataServiceUri",id:"bookkeepermetadataserviceuri",level:3},{value:"bookkeeperClientAuthenticationPlugin",id:"bookkeeperclientauthenticationplugin",level:3},{value:"bookkeeperClientAuthenticationParametersName",id:"bookkeeperclientauthenticationparametersname",level:3},{value:"bookkeeperClientAuthenticationParameters",id:"bookkeeperclientauthenticationparameters",level:3},{value:"bookkeeperClientNumWorkerThreads",id:"bookkeeperclientnumworkerthreads",level:3},{value:"bookkeeperClientTimeoutInSeconds",id:"bookkeeperclienttimeoutinseconds",level:3},{value:"bookkeeperClientSpeculativeReadTimeoutInMillis",id:"bookkeeperclientspeculativereadtimeoutinmillis",level:3},{value:"bookkeeperUseV2WireProtocol",id:"bookkeeperusev2wireprotocol",level:3},{value:"bookkeeperClientHealthCheckEnabled",id:"bookkeeperclienthealthcheckenabled",level:3},{value:"bookkeeperClientHealthCheckIntervalSeconds",id:"bookkeeperclienthealthcheckintervalseconds",level:3},{value:"bookkeeperClientHealthCheckErrorThresholdPerInterval",id:"bookkeeperclienthealthcheckerrorthresholdperinterval",level:3},{value:"bookkeeperClientHealthCheckQuarantineTimeInSeconds",id:"bookkeeperclienthealthcheckquarantinetimeinseconds",level:3},{value:"bookkeeperClientGetBookieInfoIntervalSeconds",id:"bookkeeperclientgetbookieinfointervalseconds",level:3},{value:"bookkeeperClientGetBookieInfoRetryIntervalSeconds",id:"bookkeeperclientgetbookieinforetryintervalseconds",level:3},{value:"bookkeeperClientRackawarePolicyEnabled",id:"bookkeeperclientrackawarepolicyenabled",level:3},{value:"bookkeeperClientRegionawarePolicyEnabled",id:"bookkeeperclientregionawarepolicyenabled",level:3},{value:"bookkeeperClientMinNumRacksPerWriteQuorum",id:"bookkeeperclientminnumracksperwritequorum",level:3},{value:"bookkeeperClientMinNumRacksPerWriteQuorum",id:"bookkeeperclientminnumracksperwritequorum-1",level:3},{value:"bookkeeperClientReorderReadSequenceEnabled",id:"bookkeeperclientreorderreadsequenceenabled",level:3},{value:"bookkeeperClientIsolationGroups",id:"bookkeeperclientisolationgroups",level:3},{value:"bookkeeperClientSecondaryIsolationGroups",id:"bookkeeperclientsecondaryisolationgroups",level:3},{value:"bookkeeperClientMinAvailableBookiesInIsolationGroups",id:"bookkeeperclientminavailablebookiesinisolationgroups",level:3},{value:"bookkeeperTLSProviderFactoryClass",id:"bookkeepertlsproviderfactoryclass",level:3},{value:"bookkeeperTLSClientAuthentication",id:"bookkeepertlsclientauthentication",level:3},{value:"bookkeeperTLSKeyFileType",id:"bookkeepertlskeyfiletype",level:3},{value:"bookkeeperTLSTrustCertTypes",id:"bookkeepertlstrustcerttypes",level:3},{value:"bookkeeperTLSKeyStorePasswordPath",id:"bookkeepertlskeystorepasswordpath",level:3},{value:"bookkeeperTLSTrustStorePasswordPath",id:"bookkeepertlstruststorepasswordpath",level:3},{value:"bookkeeperTLSKeyFilePath",id:"bookkeepertlskeyfilepath",level:3},{value:"bookkeeperTLSCertificateFilePath",id:"bookkeepertlscertificatefilepath",level:3},{value:"bookkeeperTLSTrustCertsFilePath",id:"bookkeepertlstrustcertsfilepath",level:3},{value:"bookkeeperTlsCertFilesRefreshDurationSeconds",id:"bookkeepertlscertfilesrefreshdurationseconds",level:3},{value:"bookkeeperDiskWeightBasedPlacementEnabled",id:"bookkeeperdiskweightbasedplacementenabled",level:3},{value:"bookkeeperExplicitLacIntervalInMills",id:"bookkeeperexplicitlacintervalinmills",level:3},{value:"bookkeeperClientExposeStatsToPrometheus",id:"bookkeeperclientexposestatstoprometheus",level:3},{value:"managedLedgerDefaultEnsembleSize",id:"managedledgerdefaultensemblesize",level:3},{value:"managedLedgerDefaultWriteQuorum",id:"managedledgerdefaultwritequorum",level:3},{value:"managedLedgerDefaultAckQuorum",id:"managedledgerdefaultackquorum",level:3},{value:"managedLedgerDigestType",id:"managedledgerdigesttype",level:3},{value:"managedLedgerNumSchedulerThreads",id:"managedledgernumschedulerthreads",level:3},{value:"managedLedgerCacheSizeMB",id:"managedledgercachesizemb",level:3},{value:"managedLedgerCacheCopyEntries",id:"managedledgercachecopyentries",level:3},{value:"managedLedgerCacheEvictionWatermark",id:"managedledgercacheevictionwatermark",level:3},{value:"managedLedgerCacheEvictionFrequency",id:"managedledgercacheevictionfrequency",level:3},{value:"managedLedgerCacheEvictionTimeThresholdMillis",id:"managedledgercacheevictiontimethresholdmillis",level:3},{value:"managedLedgerCursorBackloggedThreshold",id:"managedledgercursorbackloggedthreshold",level:3},{value:"managedLedgerUnackedRangesOpenCacheSetEnabled",id:"managedledgerunackedrangesopencachesetenabled",level:3},{value:"managedLedgerDefaultMarkDeleteRateLimit",id:"managedledgerdefaultmarkdeleteratelimit",level:3},{value:"managedLedgerMaxEntriesPerLedger",id:"managedledgermaxentriesperledger",level:3},{value:"managedLedgerMinLedgerRolloverTimeMinutes",id:"managedledgerminledgerrollovertimeminutes",level:3},{value:"managedLedgerMaxLedgerRolloverTimeMinutes",id:"managedledgermaxledgerrollovertimeminutes",level:3},{value:"managedLedgerCursorMaxEntriesPerLedger",id:"managedledgercursormaxentriesperledger",level:3},{value:"managedLedgerCursorRolloverTimeInSeconds",id:"managedledgercursorrollovertimeinseconds",level:3},{value:"managedLedgerMaxSizePerLedgerMbytes",id:"managedledgermaxsizeperledgermbytes",level:3},{value:"managedLedgerMaxUnackedRangesToPersist",id:"managedledgermaxunackedrangestopersist",level:3},{value:"managedLedgerMaxUnackedRangesToPersistInMetadataStore",id:"managedledgermaxunackedrangestopersistinmetadatastore",level:3},{value:"autoSkipNonRecoverableData",id:"autoskipnonrecoverabledata",level:3},{value:"managedLedgerMetadataOperationsTimeoutSeconds",id:"managedledgermetadataoperationstimeoutseconds",level:3},{value:"managedLedgerReadEntryTimeoutSeconds",id:"managedledgerreadentrytimeoutseconds",level:3},{value:"managedLedgerAddEntryTimeoutSeconds",id:"managedledgeraddentrytimeoutseconds",level:3},{value:"managedLedgerNewEntriesCheckDelayInMillis",id:"managedledgernewentriescheckdelayinmillis",level:3},{value:"managedLedgerPrometheusStatsLatencyRolloverSeconds",id:"managedledgerprometheusstatslatencyrolloverseconds",level:3},{value:"managedLedgerTraceTaskExecution",id:"managedledgertracetaskexecution",level:3},{value:"loadBalancerEnabled",id:"loadbalancerenabled",level:3},{value:"loadBalancerPlacementStrategy",id:"loadbalancerplacementstrategy",level:3},{value:"loadBalancerReportUpdateThresholdPercentage",id:"loadbalancerreportupdatethresholdpercentage",level:3},{value:"loadBalancerReportUpdateMaxIntervalMinutes",id:"loadbalancerreportupdatemaxintervalminutes",level:3},{value:"loadBalancerHostUsageCheckIntervalMinutes",id:"loadbalancerhostusagecheckintervalminutes",level:3},{value:"loadBalancerSheddingIntervalMinutes",id:"loadbalancersheddingintervalminutes",level:3},{value:"loadBalancerSheddingGracePeriodMinutes",id:"loadbalancersheddinggraceperiodminutes",level:3},{value:"loadBalancerBrokerMaxTopics",id:"loadbalancerbrokermaxtopics",level:3},{value:"loadBalancerBrokerUnderloadedThresholdPercentage",id:"loadbalancerbrokerunderloadedthresholdpercentage",level:3},{value:"loadBalancerBrokerOverloadedThresholdPercentage",id:"loadbalancerbrokeroverloadedthresholdpercentage",level:3},{value:"loadBalancerResourceQuotaUpdateIntervalMinutes",id:"loadbalancerresourcequotaupdateintervalminutes",level:3},{value:"loadBalancerBrokerComfortLoadLevelPercentage",id:"loadbalancerbrokercomfortloadlevelpercentage",level:3},{value:"loadBalancerAutoBundleSplitEnabled",id:"loadbalancerautobundlesplitenabled",level:3},{value:"loadBalancerAutoUnloadSplitBundlesEnabled",id:"loadbalancerautounloadsplitbundlesenabled",level:3},{value:"loadBalancerNamespaceBundleMaxTopics",id:"loadbalancernamespacebundlemaxtopics",level:3},{value:"loadBalancerNamespaceBundleMaxSessions",id:"loadbalancernamespacebundlemaxsessions",level:3},{value:"loadBalancerNamespaceBundleMaxMsgRate",id:"loadbalancernamespacebundlemaxmsgrate",level:3},{value:"loadBalancerNamespaceBundleMaxBandwidthMbytes",id:"loadbalancernamespacebundlemaxbandwidthmbytes",level:3},{value:"loadBalancerNamespaceMaximumBundles",id:"loadbalancernamespacemaximumbundles",level:3},{value:"loadBalancerBrokerThresholdShedderPercentage",id:"loadbalancerbrokerthresholdshedderpercentage",level:3},{value:"loadBalancerMsgRateDifferenceShedderThreshold",id:"loadbalancermsgratedifferenceshedderthreshold",level:3},{value:"loadBalancerMsgThroughputMultiplierDifferenceShedderThreshold",id:"loadbalancermsgthroughputmultiplierdifferenceshedderthreshold",level:3},{value:"loadBalancerHistoryResourcePercentage",id:"loadbalancerhistoryresourcepercentage",level:3},{value:"loadBalancerBandwithInResourceWeight",id:"loadbalancerbandwithinresourceweight",level:3},{value:"loadBalancerBandwithOutResourceWeight",id:"loadbalancerbandwithoutresourceweight",level:3},{value:"loadBalancerCPUResourceWeight",id:"loadbalancercpuresourceweight",level:3},{value:"loadBalancerMemoryResourceWeight",id:"loadbalancermemoryresourceweight",level:3},{value:"loadBalancerDirectMemoryResourceWeight",id:"loadbalancerdirectmemoryresourceweight",level:3},{value:"loadBalancerBundleUnloadMinThroughputThreshold",id:"loadbalancerbundleunloadminthroughputthreshold",level:3},{value:"namespaceBundleUnloadingTimeoutMs",id:"namespacebundleunloadingtimeoutms",level:3},{value:"replicationMetricsEnabled",id:"replicationmetricsenabled",level:3},{value:"replicationConnectionsPerBroker",id:"replicationconnectionsperbroker",level:3},{value:"replicationProducerQueueSize",id:"replicationproducerqueuesize",level:3},{value:"replicationPolicyCheckDurationSeconds",id:"replicationpolicycheckdurationseconds",level:3},{value:"transactionCoordinatorEnabled",id:"transactioncoordinatorenabled",level:3},{value:"transactionMetadataStoreProviderClassName",id:"transactionmetadatastoreproviderclassname",level:3},{value:"transactionBufferClientOperationTimeoutInMills",id:"transactionbufferclientoperationtimeoutinmills",level:3},{value:"transactionBufferSnapshotMaxTransactionCount",id:"transactionbuffersnapshotmaxtransactioncount",level:3},{value:"transactionBufferSnapshotMinTimeInMillis",id:"transactionbuffersnapshotmintimeinmillis",level:3},{value:"defaultRetentionTimeInMinutes",id:"defaultretentiontimeinminutes",level:3},{value:"defaultRetentionSizeInMB",id:"defaultretentionsizeinmb",level:3},{value:"keepAliveIntervalSeconds",id:"keepaliveintervalseconds",level:3},{value:"haProxyProtocolEnabled",id:"haproxyprotocolenabled",level:3},{value:"bookieId",id:"bookieid",level:3},{value:"maxTopicsPerNamespace",id:"maxtopicspernamespace",level:3},{value:"metadataStoreConfigPath",id:"metadatastoreconfigpath",level:3},{value:"schemaRegistryStorageClassName",id:"schemaregistrystorageclassname",level:3},{value:"isSchemaValidationEnforced",id:"isschemavalidationenforced",level:3},{value:"isAllowAutoUpdateSchemaEnabled",id:"isallowautoupdateschemaenabled",level:3},{value:"schemaRegistryCompatibilityCheckers",id:"schemaregistrycompatibilitycheckers",level:3},{value:"schemaCompatibilityStrategy",id:"schemacompatibilitystrategy",level:3},{value:"systemTopicSchemaCompatibilityStrategy",id:"systemtopicschemacompatibilitystrategy",level:3},{value:"managedCursorInfoCompressionType",id:"managedcursorinfocompressiontype",level:3},{value:"Deprecated",id:"deprecated",level:2},{value:"zookeeperServers",id:"zookeeperservers",level:3},{value:"configurationStoreServers",id:"configurationstoreservers",level:3},{value:"zooKeeperOperationTimeoutSeconds",id:"zookeeperoperationtimeoutseconds",level:3},{value:"zooKeeperCacheExpirySeconds",id:"zookeepercacheexpiryseconds",level:3},{value:"zooKeeperSessionTimeoutMillis",id:"zookeepersessiontimeoutmillis",level:3},{value:"managedLedgerMaxUnackedRangesToPersistInZooKeeper",id:"managedledgermaxunackedrangestopersistinzookeeper",level:3}],u={toc:d};function p(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"standalone"},"Standalone"),(0,n.kt)("h2",{id:"optional"},"Optional"),(0,n.kt)("h3",{id:"authenticateoriginalauthdata"},"authenticateOriginalAuthData"),(0,n.kt)("p",null,"If this flag is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", the broker authenticates the original Auth data; else it just accepts the originalPrincipal and authorizes it (if required)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"metadatastoreurl"},"metadataStoreUrl"),(0,n.kt)("p",null,"The quorum connection string for local metadata store"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"metadatastorecacheexpiryseconds"},"metadataStoreCacheExpirySeconds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": Metadata store cache expiry time in seconds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 300"),(0,n.kt)("h3",{id:"configurationmetadatastoreurl"},"configurationMetadataStoreUrl"),(0,n.kt)("p",null,"Configuration store connection string (as a comma-separated list)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerserviceport"},"brokerServicePort"),(0,n.kt)("p",null,"The port on which the standalone broker listens for connections"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 6650"),(0,n.kt)("h3",{id:"webserviceport"},"webServicePort"),(0,n.kt)("p",null,"The port used by the standalone broker for HTTP requests"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 8080"),(0,n.kt)("h3",{id:"webservicetlsprovider"},"webServiceTlsProvider"),(0,n.kt)("p",null,"The TLS provider for the web service. Available values: ",(0,n.kt)("inlineCode",{parentName:"p"},"SunJSSE"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Conscrypt"),", and so on."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": Conscrypt"),(0,n.kt)("h3",{id:"bindaddress"},"bindAddress"),(0,n.kt)("p",null,"The hostname or IP address on which the standalone service binds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0.0.0.0"),(0,n.kt)("h3",{id:"bindaddresses"},"bindAddresses"),(0,n.kt)("p",null,"Additional Hostname or IP addresses the service binds on: ",(0,n.kt)("inlineCode",{parentName:"p"},"listener_name:scheme://host:port,..."),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"advertisedaddress"},"advertisedAddress"),(0,n.kt)("p",null,"The hostname or IP address that the standalone service advertises to the outside world. If not set, the value of ",(0,n.kt)("inlineCode",{parentName:"p"},"InetAddress.getLocalHost().getCanonicalHostName()")," is used."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"numacceptorthreads"},"numAcceptorThreads"),(0,n.kt)("p",null,"Number of threads to use for Netty Acceptor"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"numiothreads"},"numIOThreads"),(0,n.kt)("p",null,"Number of threads to use for Netty IO"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 2 ","*"," Runtime.getRuntime().availableProcessors()"),(0,n.kt)("h3",{id:"numhttpserverthreads"},"numHttpServerThreads"),(0,n.kt)("p",null,"Number of threads to use for HTTP requests processing"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 2 ","*"," Runtime.getRuntime().availableProcessors()"),(0,n.kt)("h3",{id:"isrunningstandalone"},"isRunningStandalone"),(0,n.kt)("p",null,"This flag controls features that are meant to be used when running in standalone mode."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"clustername"},"clusterName"),(0,n.kt)("p",null,"The name of the cluster that this broker belongs to."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": standalone"),(0,n.kt)("h3",{id:"failuredomainsenabled"},"failureDomainsEnabled"),(0,n.kt)("p",null,"Enable cluster's failure-domain which can distribute brokers into logical region."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"metadatastoresessiontimeoutmillis"},"metadataStoreSessionTimeoutMillis"),(0,n.kt)("p",null,"Metadata store session timeout, in milliseconds."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30000"),(0,n.kt)("h3",{id:"metadatastoreoperationtimeoutseconds"},"metadataStoreOperationTimeoutSeconds"),(0,n.kt)("p",null,"Metadata store operation timeout in seconds."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"brokershutdowntimeoutms"},"brokerShutdownTimeoutMs"),(0,n.kt)("p",null,"The time to wait for graceful broker shutdown. After this time elapses, the process will be killed."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60000"),(0,n.kt)("h3",{id:"skipbrokershutdownonoom"},"skipBrokerShutdownOnOOM"),(0,n.kt)("p",null,"Flag to skip broker shutdown when broker handles Out of memory error."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"backlogquotacheckenabled"},"backlogQuotaCheckEnabled"),(0,n.kt)("p",null,"Enable the backlog quota check, which enforces a specified action when the quota is reached."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"backlogquotacheckintervalinseconds"},"backlogQuotaCheckIntervalInSeconds"),(0,n.kt)("p",null,"How often to check for topics that have reached the backlog quota."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60"),(0,n.kt)("h3",{id:"backlogquotadefaultlimitbytes"},"backlogQuotaDefaultLimitBytes"),(0,n.kt)("p",null,"The default per-topic backlog quota limit. Being less than 0 means no limitation. By default, it is -1."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": -1"),(0,n.kt)("h3",{id:"ttldurationdefaultinseconds"},"ttlDurationDefaultInSeconds"),(0,n.kt)("p",null,"The default Time to Live (TTL) for namespaces if the TTL is not configured at namespace policies. When the value is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"0"),", TTL is disabled. By default, TTL is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"brokerdeleteinactivetopicsenabled"},"brokerDeleteInactiveTopicsEnabled"),(0,n.kt)("p",null,"Enable the deletion of inactive topics. If topics are not consumed for some while, these inactive topics might be cleaned up. Deleting inactive topics is enabled by default. The default period is 1 minute."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"brokerdeleteinactivetopicsfrequencyseconds"},"brokerDeleteInactiveTopicsFrequencySeconds"),(0,n.kt)("p",null,"How often to check for inactive topics, in seconds."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60"),(0,n.kt)("h3",{id:"maxpendingpublishrequestsperconnection"},"maxPendingPublishRequestsPerConnection"),(0,n.kt)("p",null,"Maximum pending publish requests per connection to avoid keeping large number of pending requests in memory"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"messageexpirycheckintervalinminutes"},"messageExpiryCheckIntervalInMinutes"),(0,n.kt)("p",null,"How often to proactively check and purged expired messages."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5"),(0,n.kt)("h3",{id:"activeconsumerfailoverdelaytimemillis"},"activeConsumerFailoverDelayTimeMillis"),(0,n.kt)("p",null,"How long to delay rewinding cursor and dispatching messages when active consumer is changed."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"subscriptionexpirationtimeminutes"},"subscriptionExpirationTimeMinutes"),(0,n.kt)("p",null,"How long to delete inactive subscriptions from last consumption. When it is set to 0, inactive subscriptions are not deleted automatically"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"subscriptionredeliverytrackerenabled"},"subscriptionRedeliveryTrackerEnabled"),(0,n.kt)("p",null,"Enable subscription message redelivery tracker to send redelivery count to consumer."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"subscriptionkeyshareduseconsistenthashing"},"subscriptionKeySharedUseConsistentHashing"),(0,n.kt)("p",null,"In Key","*","Shared subscription type, with default AUTO_SPLIT mode, use splitting ranges or consistent hashing to reassign keys to new consumers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"subscriptionkeysharedconsistenthashingreplicapoints"},"subscriptionKeySharedConsistentHashingReplicaPoints"),(0,n.kt)("p",null,"In Key_Shared subscription type, the number of points in the consistent-hashing ring. The greater the number, the more equal the assignment of keys to consumers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 100"),(0,n.kt)("h3",{id:"subscriptionexpirycheckintervalinminutes"},"subscriptionExpiryCheckIntervalInMinutes"),(0,n.kt)("p",null,"How frequently to proactively check and purge expired subscription"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5"),(0,n.kt)("h3",{id:"brokerdeduplicationenabled"},"brokerDeduplicationEnabled"),(0,n.kt)("p",null,"Set the default behavior for message deduplication in the broker. This can be overridden per-namespace. If it is enabled, the broker rejects messages that are already stored in the topic."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"brokerdeduplicationmaxnumberofproducers"},"brokerDeduplicationMaxNumberOfProducers"),(0,n.kt)("p",null,"Maximum number of producer information that it's going to be persisted for deduplication purposes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10000"),(0,n.kt)("h3",{id:"brokerdeduplicationentriesinterval"},"brokerDeduplicationEntriesInterval"),(0,n.kt)("p",null,"Number of entries after which a deduplication information snapshot is taken. A greater interval leads to less snapshots being taken though it would increase the topic recovery time, when the entries published after the snapshot need to be replayed."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"brokerdeduplicationproducerinactivitytimeoutminutes"},"brokerDeduplicationProducerInactivityTimeoutMinutes"),(0,n.kt)("p",null,"The time of inactivity (in minutes) after which the broker discards deduplication information related to a disconnected producer."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 360"),(0,n.kt)("h3",{id:"defaultnumberofnamespacebundles"},"defaultNumberOfNamespaceBundles"),(0,n.kt)("p",null,"When a namespace is created without specifying the number of bundles, this value is used as the default setting."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 4"),(0,n.kt)("h3",{id:"clientlibraryversioncheckenabled"},"clientLibraryVersionCheckEnabled"),(0,n.kt)("p",null,"Enable checks for minimum allowed client library version."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"clientlibraryversioncheckallowunversioned"},"clientLibraryVersionCheckAllowUnversioned"),(0,n.kt)("p",null,"Allow client libraries with no version information"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"statusfilepath"},"statusFilePath"),(0,n.kt)("p",null,"The path for the file used to determine the rotation status for the broker when responding to service discovery health checks"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": /usr/local/apache/htdocs"),(0,n.kt)("h3",{id:"maxunackedmessagesperconsumer"},"maxUnackedMessagesPerConsumer"),(0,n.kt)("p",null,"The maximum number of unacknowledged messages allowed to be received by consumers on a shared subscription. The broker will stop sending messages to a consumer once this limit is reached or until the consumer begins acknowledging messages. A value of 0 disables the unacked message limit check and thus allows consumers to receive messages without any restrictions."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50000"),(0,n.kt)("h3",{id:"maxunackedmessagespersubscription"},"maxUnackedMessagesPerSubscription"),(0,n.kt)("p",null,"The same as above, except per subscription rather than per consumer."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 200000"),(0,n.kt)("h3",{id:"maxunackedmessagesperbroker"},"maxUnackedMessagesPerBroker"),(0,n.kt)("p",null,"Maximum number of unacknowledged messages allowed per broker. Once this limit reaches, the broker stops dispatching messages to all shared subscriptions which has a higher number of unacknowledged messages until subscriptions start acknowledging messages back and unacknowledged messages count reaches to limit/2. When the value is set to 0, unacknowledged message limit check is disabled and broker does not block dispatchers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"maxunackedmessagespersubscriptiononbrokerblocked"},"maxUnackedMessagesPerSubscriptionOnBrokerBlocked"),(0,n.kt)("p",null,"Once the broker reaches maxUnackedMessagesPerBroker limit, it blocks subscriptions which have higher unacknowledged messages than this percentage limit and subscription does not receive any new messages until that subscription acknowledges messages back."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0.16"),(0,n.kt)("h3",{id:"unblockstucksubscriptionenabled"},"unblockStuckSubscriptionEnabled"),(0,n.kt)("p",null,"Broker periodically checks if subscription is stuck and unblock if flag is enabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"topicpublisherthrottlingticktimemillis"},"topicPublisherThrottlingTickTimeMillis"),(0,n.kt)("p",null,"Tick time to schedule task that checks topic publish rate limiting across all topics. A lower value can improve accuracy while throttling publish but it uses more CPU to perform frequent check. (Disable publish throttling with value 0)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10"),(0,n.kt)("h3",{id:"brokerpublisherthrottlingticktimemillis"},"brokerPublisherThrottlingTickTimeMillis"),(0,n.kt)("p",null,"Tick time to schedule task that checks broker publish rate limiting across all topics. A lower value can improve accuracy while throttling publish but it uses more CPU to perform frequent check. When the value is set to 0, publish throttling is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50"),(0,n.kt)("h3",{id:"brokerpublisherthrottlingmaxmessagerate"},"brokerPublisherThrottlingMaxMessageRate"),(0,n.kt)("p",null,"Maximum rate (in 1 second) of messages allowed to publish for a broker if the message rate limiting is enabled. When the value is set to 0, message rate limiting is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"brokerpublisherthrottlingmaxbyterate"},"brokerPublisherThrottlingMaxByteRate"),(0,n.kt)("p",null,"Maximum rate (in 1 second) of bytes allowed to publish for a broker if the byte rate limiting is enabled. When the value is set to 0, the byte rate limiting is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"subscribethrottlingrateperconsumer"},"subscribeThrottlingRatePerConsumer"),(0,n.kt)("p",null,"Too many subscribe requests from a consumer can cause broker rewinding consumer cursors and loading data from bookies, hence causing high network bandwidth usage. When the positive value is set, broker will throttle the subscribe requests for one consumer. Otherwise, the throttling will be disabled. By default, throttling is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"subscriberateperiodperconsumerinsecond"},"subscribeRatePeriodPerConsumerInSecond"),(0,n.kt)("p",null,"Rate period for {subscribeThrottlingRatePerConsumer}. By default, it is 30s."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"dispatchthrottlingrateinmsg"},"dispatchThrottlingRateInMsg"),(0,n.kt)("p",null,"Dispatch throttling-limit of messages for a broker (per second). 0 means the dispatch throttling-limit is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingrateinbyte"},"dispatchThrottlingRateInByte"),(0,n.kt)("p",null,"Dispatch throttling-limit of bytes for a broker (per second). 0 means the dispatch throttling-limit is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingratepertopicinmsg"},"dispatchThrottlingRatePerTopicInMsg"),(0,n.kt)("p",null,"Default messages (per second) dispatch throttling-limit for every topic. When the value is set to 0, default message dispatch throttling-limit is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingratepertopicinbyte"},"dispatchThrottlingRatePerTopicInByte"),(0,n.kt)("p",null,"Default byte (per second) dispatch throttling-limit for every topic. When the value is set to 0, default byte dispatch throttling-limit is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingonbatchmessageenabled"},"dispatchThrottlingOnBatchMessageEnabled"),(0,n.kt)("p",null,"Apply dispatch rate limiting on batch message instead individual messages with in batch message. (Default is disabled)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"dispatchthrottlingraterelativetopublishrate"},"dispatchThrottlingRateRelativeToPublishRate"),(0,n.kt)("p",null,"Enable dispatch rate-limiting relative to publish rate."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"dispatchthrottlingratepersubscriptioninmsg"},"dispatchThrottlingRatePerSubscriptionInMsg"),(0,n.kt)("p",null,"The defaulted number of message dispatching throttling-limit for a subscription. The value of 0 disables message dispatch-throttling."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingratepersubscriptioninbyte"},"dispatchThrottlingRatePerSubscriptionInByte"),(0,n.kt)("p",null,"The default number of message-bytes dispatching throttling-limit for a subscription. The value of 0 disables message-byte dispatch-throttling."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingrateperreplicatorinmsg"},"dispatchThrottlingRatePerReplicatorInMsg"),(0,n.kt)("p",null,"Dispatch throttling-limit of messages for every replicator in replication (per second). 0 means the dispatch throttling-limit in replication is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingrateperreplicatorinbyte"},"dispatchThrottlingRatePerReplicatorInByte"),(0,n.kt)("p",null,"Dispatch throttling-limit of bytes for every replicator in replication (per second). 0 means the dispatch throttling-limit is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"dispatchthrottlingonnonbacklogconsumerenabled"},"dispatchThrottlingOnNonBacklogConsumerEnabled"),(0,n.kt)("p",null,"Enable dispatch-throttling for both caught up consumers as well as consumers who have backlogs."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"dispatchermaxreadbatchsize"},"dispatcherMaxReadBatchSize"),(0,n.kt)("p",null,"The maximum number of entries to read from BookKeeper. By default, it is 100 entries."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 100"),(0,n.kt)("h3",{id:"dispatchermaxreadsizebytes"},"dispatcherMaxReadSizeBytes"),(0,n.kt)("p",null,"The maximum size in bytes of entries to read from BookKeeper. By default, it is 5MB."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5242880"),(0,n.kt)("h3",{id:"dispatcherminreadbatchsize"},"dispatcherMinReadBatchSize"),(0,n.kt)("p",null,"The minimum number of entries to read from BookKeeper. By default, it is 1 entry. When there is an error occurred on reading entries from bookkeeper, the broker will backoff the batch size to this minimum number."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"dispatchermaxroundrobinbatchsize"},"dispatcherMaxRoundRobinBatchSize"),(0,n.kt)("p",null,"The maximum number of entries to dispatch for a shared subscription. By default, it is 20 entries."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 20"),(0,n.kt)("h3",{id:"precisedispatcherflowcontrol"},"preciseDispatcherFlowControl"),(0,n.kt)("p",null,"Precise dispathcer flow control according to history message number of each entry."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"streamingdispatch"},"streamingDispatch"),(0,n.kt)("p",null,"Whether to use streaming read dispatcher. It can be useful when there's a huge backlog to drain and instead of read with micro batch we can streamline the read from bookkeeper to make the most of consumer capacity till we hit bookkeeper read limit or consumer process limit, then we can use consumer flow control to tune the speed. This feature is currently in preview and can be changed in subsequent release."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"maxconcurrentlookuprequest"},"maxConcurrentLookupRequest"),(0,n.kt)("p",null,"Maximum number of concurrent lookup request that the broker allows to throttle heavy incoming lookup traffic."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50000"),(0,n.kt)("h3",{id:"maxconcurrenttopicloadrequest"},"maxConcurrentTopicLoadRequest"),(0,n.kt)("p",null,"Maximum number of concurrent topic loading request that the broker allows to control the number of zk-operations."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5000"),(0,n.kt)("h3",{id:"maxconcurrentnonpersistentmessageperconnection"},"maxConcurrentNonPersistentMessagePerConnection"),(0,n.kt)("p",null,"Maximum number of concurrent non-persistent message that can be processed per connection."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"numworkerthreadsfornonpersistenttopic"},"numWorkerThreadsForNonPersistentTopic"),(0,n.kt)("p",null,"Number of worker threads to serve non-persistent topic."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 8"),(0,n.kt)("h3",{id:"enablepersistenttopics"},"enablePersistentTopics"),(0,n.kt)("p",null,"Enable broker to load persistent topics."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"enablenonpersistenttopics"},"enableNonPersistentTopics"),(0,n.kt)("p",null,"Enable broker to load non-persistent topics."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"maxsubscriptionspertopic"},"maxSubscriptionsPerTopic"),(0,n.kt)("p",null,"Maximum number of subscriptions allowed to subscribe to a topic. Once this limit reaches, the broker rejects new subscriptions until the number of subscriptions decreases. When the value is set to 0, the limit check is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"maxproducerspertopic"},"maxProducersPerTopic"),(0,n.kt)("p",null,"Maximum number of producers allowed to connect to a topic. Once this limit reaches, the broker rejects new producers until the number of connected producers decreases. When the value is set to 0, the limit check is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"maxconsumerspertopic"},"maxConsumersPerTopic"),(0,n.kt)("p",null,"Maximum number of consumers allowed to connect to a topic. Once this limit reaches, the broker rejects new consumers until the number of connected consumers decreases. When the value is set to 0, the limit check is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"maxconsumerspersubscription"},"maxConsumersPerSubscription"),(0,n.kt)("p",null,"Maximum number of consumers allowed to connect to a subscription. Once this limit reaches, the broker rejects new consumers until the number of connected consumers decreases. When the value is set to 0, the limit check is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"maxnumpartitionsperpartitionedtopic"},"maxNumPartitionsPerPartitionedTopic"),(0,n.kt)("p",null,"Maximum number of partitions per partitioned topic. When the value is set to a negative number or is set to 0, the check is disabled."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"metadatastorebatchingenabled"},"metadataStoreBatchingEnabled"),(0,n.kt)("p",null,"Enable metadata operations batching."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"metadatastorebatchingmaxdelaymillis"},"metadataStoreBatchingMaxDelayMillis"),(0,n.kt)("p",null,"Maximum delay to impose on batching grouping."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5"),(0,n.kt)("h3",{id:"metadatastorebatchingmaxoperations"},"metadataStoreBatchingMaxOperations"),(0,n.kt)("p",null,"Maximum number of operations to include in a singular batch."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"metadatastorebatchingmaxsizekb"},"metadataStoreBatchingMaxSizeKb"),(0,n.kt)("p",null,"Maximum size of a batch."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 128"),(0,n.kt)("h3",{id:"tlscertrefreshcheckdurationsec"},"tlsCertRefreshCheckDurationSec"),(0,n.kt)("p",null,"TLS certificate refresh duration in seconds. When the value is set to 0, check the TLS certificate on every new connection."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 300"),(0,n.kt)("h3",{id:"tlscertificatefilepath"},"tlsCertificateFilePath"),(0,n.kt)("p",null,"Path for the TLS certificate file."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlskeyfilepath"},"tlsKeyFilePath"),(0,n.kt)("p",null,"Path for the TLS private key file."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlstrustcertsfilepath"},"tlsTrustCertsFilePath"),(0,n.kt)("p",null,"Path for the trusted TLS certificate file."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlsallowinsecureconnection"},"tlsAllowInsecureConnection"),(0,n.kt)("p",null,"Accept untrusted TLS certificate from the client. If it is set to true, a client with a certificate which cannot be verified with the 'tlsTrustCertsFilePath' certificate is allowed to connect to the server, though the certificate is not be used for client authentication."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"tlsprotocols"},"tlsProtocols"),(0,n.kt)("p",null,"Specify the TLS protocols the broker uses to negotiate during TLS handshake."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlsciphers"},"tlsCiphers"),(0,n.kt)("p",null,"Specify the TLS cipher the broker uses to negotiate during TLS Handshake."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlsrequiretrustedclientcertonconnect"},"tlsRequireTrustedClientCertOnConnect"),(0,n.kt)("p",null,"Trusted client certificates are required for to connect TLS. Reject the Connection if the client certificate is not trusted. In effect, this requires that all connecting clients perform TLS client authentication."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"tlsenabledwithkeystore"},"tlsEnabledWithKeyStore"),(0,n.kt)("p",null,"Enable TLS with KeyStore type configuration in broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"tlsprovider"},"tlsProvider"),(0,n.kt)("p",null,"The TLS provider for the broker service."),(0,n.kt)("p",null,"When TLS authentication with CACert is used, the valid value is either ",(0,n.kt)("inlineCode",{parentName:"p"},"OPENSSL")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"JDK"),"."),(0,n.kt)("p",null,"When TLS authentication with KeyStore is used, available options can be ",(0,n.kt)("inlineCode",{parentName:"p"},"SunJSSE"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Conscrypt")," and so on."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"tlskeystoretype"},"tlsKeyStoreType"),(0,n.kt)("p",null,"TLS KeyStore type configuration in the broker.",(0,n.kt)("li",null,"JKS "),(0,n.kt)("li",null,"PKCS12 ")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": JKS"),(0,n.kt)("h3",{id:"tlskeystore"},"tlsKeyStore"),(0,n.kt)("p",null,"TLS KeyStore path in the broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlskeystorepassword"},"tlsKeyStorePassword"),(0,n.kt)("p",null,"TLS KeyStore password for the broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlstruststoretype"},"tlsTrustStoreType"),(0,n.kt)("p",null,"TLS TrustStore type configuration in the broker",(0,n.kt)("li",null,"JKS "),(0,n.kt)("li",null,"PKCS12 ")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": JKS"),(0,n.kt)("h3",{id:"tlstruststore"},"tlsTrustStore"),(0,n.kt)("p",null,"TLS TrustStore path in the broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tlstruststorepassword"},"tlsTrustStorePassword"),(0,n.kt)("p",null,"TLS TrustStore password for the broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclienttlsenabledwithkeystore"},"brokerClientTlsEnabledWithKeyStore"),(0,n.kt)("p",null,"Configure whether the internal client uses the KeyStore type to authenticate with Pulsar brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"brokerclientsslprovider"},"brokerClientSslProvider"),(0,n.kt)("p",null,"The TLS Provider used by the internal client to authenticate with other Pulsar brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclienttlstruststoretype"},"brokerClientTlsTrustStoreType"),(0,n.kt)("p",null,"TLS TrustStore type configuration for the internal client to authenticate with Pulsar brokers. ",(0,n.kt)("li",null,"JKS "),(0,n.kt)("li",null,"PKCS12 ")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": JKS"),(0,n.kt)("h3",{id:"brokerclienttlstruststore"},"brokerClientTlsTrustStore"),(0,n.kt)("p",null,"TLS TrustStore path for the internal client to authenticate with Pulsar brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclienttlstruststorepassword"},"brokerClientTlsTrustStorePassword"),(0,n.kt)("p",null,"TLS TrustStore password for the internal client to authenticate with Pulsar brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclienttlsciphers"},"brokerClientTlsCiphers"),(0,n.kt)("p",null,"Specify the TLS cipher that the internal client uses to negotiate during TLS Handshake."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclienttlsprotocols"},"brokerClientTlsProtocols"),(0,n.kt)("p",null,"Specify the TLS protocols that the broker uses to negotiate during TLS handshake."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"systemtopicenabled"},"systemTopicEnabled"),(0,n.kt)("p",null,"Enable/Disable system topics."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"topiclevelpoliciesenabled"},"topicLevelPoliciesEnabled"),(0,n.kt)("p",null,"Enable or disable topic level policies. Topic level policies depends on the system topic. Please enable the system topic first."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"topicfencingtimeoutseconds"},"topicFencingTimeoutSeconds"),(0,n.kt)("p",null,"If a topic remains fenced for a certain time period (in seconds), it is closed forcefully. If set to 0 or a negative number, the fenced topic is not closed."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"proxyroles"},"proxyRoles"),(0,n.kt)("p",null,'Role names that are treated as "proxy roles". If the broker receives a request from a proxy role, it demands to authenticate its client role. Note that client role and proxy role cannot use the same name.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"authenticationenabled"},"authenticationEnabled"),(0,n.kt)("p",null,"Enable authentication for the broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"authenticationproviders"},"authenticationProviders"),(0,n.kt)("p",null,"A comma-separated list of class names for authentication providers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"authorizationenabled"},"authorizationEnabled"),(0,n.kt)("p",null,"Enforce authorization in brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"authorizationprovider"},"authorizationProvider"),(0,n.kt)("p",null,"Authorization provider fully qualified class-name."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": org.apache.pulsar.broker.authorization.PulsarAuthorizationProvider"),(0,n.kt)("h3",{id:"authorizationallowwildcardsmatching"},"authorizationAllowWildcardsMatching"),(0,n.kt)("p",null,"Allow wildcard matching in authorization. Wildcard matching is applicable only when the wildcard-character (","*",") presents at the ",(0,n.kt)("strong",{parentName:"p"},"first")," or ",(0,n.kt)("strong",{parentName:"p"},"last")," position."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"superuserroles"},"superUserRoles"),(0,n.kt)("p",null,"Role names that are treated as \u201csuperusers.\u201d Superusers are authorized to perform all admin tasks."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclientauthenticationplugin"},"brokerClientAuthenticationPlugin"),(0,n.kt)("p",null,"The authentication settings of the broker itself. Used when the broker connects to other brokers either in the same cluster or from other clusters."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"brokerclientauthenticationparameters"},"brokerClientAuthenticationParameters"),(0,n.kt)("p",null,"The parameters that go along with the plugin specified using brokerClientAuthenticationPlugin."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"athenzdomainnames"},"athenzDomainNames"),(0,n.kt)("p",null,"Supported Athenz authentication provider domain names as a comma-separated list."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"anonymoususerrole"},"anonymousUserRole"),(0,n.kt)("p",null,"When this parameter is not empty, unauthenticated users perform as anonymousUserRole."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tokensettingprefix"},"tokenSettingPrefix"),(0,n.kt)("p",null,"Configure the prefix of the token related setting like ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenSecretKey"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenPublicKey"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenAuthClaim"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenPublicAlg"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenAudienceClaim"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenAudience"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tokensecretkey"},"tokenSecretKey"),(0,n.kt)("p",null,"Configure the secret key to be used to validate auth tokens. The key can be specified like: ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenSecretKey=data:;base64,xxxxxxxxx")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenSecretKey=file:///my/secret.key"),". Note: key file must be DER-encoded."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tokenpublickey"},"tokenPublicKey"),(0,n.kt)("p",null,"Configure the public key to be used to validate auth tokens. The key can be specified like: ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenPublicKey=data:;base64,xxxxxxxxx")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenPublicKey=file:///my/secret.key"),". Note: key file must be DER-encoded."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tokenauthclaim"},"tokenAuthClaim"),(0,n.kt)("p",null,'Specify the token claim that will be used as the authentication "principal" or "role". The "subject" field will be used if this is left blank'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tokenaudienceclaim"},"tokenAudienceClaim"),(0,n.kt)("p",null,'The token audience "claim" name, e.g. "aud". It is used to get the audience from token. If it is not set, the audience is not verified.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"tokenaudience"},"tokenAudience"),(0,n.kt)("p",null,"The token audience stands for this broker. The field ",(0,n.kt)("inlineCode",{parentName:"p"},"tokenAudienceClaim")," of a valid token need contains this parameter."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"sasljaasclientallowedids"},"saslJaasClientAllowedIds"),(0,n.kt)("p",null,"This is a regexp, which limits the range of possible ids which can connect to the Broker using SASL. By default, it is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"SaslConstants.JAAS_CLIENT_ALLOWED_IDS_DEFAULT"),', which is ".',"_","pulsar.","*","\", so only clients whose id contains 'pulsar' are allowed to connect."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"sasljaasserversectionname"},"saslJaasServerSectionName"),(0,n.kt)("p",null,"Service Principal, for login context name. By default, it is set to ",(0,n.kt)("inlineCode",{parentName:"p"},"SaslConstants.JAAS_DEFAULT_BROKER_SECTION_NAME"),', which is "Broker".'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"httpmaxrequestsize"},"httpMaxRequestSize"),(0,n.kt)("p",null,"If the value is larger than 0, it rejects all HTTP requests with bodies larged than the configured limit."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": -1"),(0,n.kt)("h3",{id:"exposeprecisebackloginprometheus"},"exposePreciseBacklogInPrometheus"),(0,n.kt)("p",null,"Enable expose the precise backlog stats, set false to use published counter and consumed counter to calculate, this would be more efficient but may be inaccurate."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookkeepermetadataserviceuri"},"bookkeeperMetadataServiceUri"),(0,n.kt)("p",null,"Metadata service uri is what BookKeeper used for loading corresponding metadata driver and resolving its metadata service location. This value can be fetched using ",(0,n.kt)("inlineCode",{parentName:"p"},"bookkeeper shell whatisinstanceid")," command in BookKeeper cluster. For example: ",(0,n.kt)("inlineCode",{parentName:"p"},"zk+hierarchical://localhost:2181/ledgers"),". The metadata service uri list can also be semicolon separated values like: ",(0,n.kt)("inlineCode",{parentName:"p"},"zk+hierarchical://zk1:2181;zk2:2181;zk3:2181/ledgers"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"bookkeeperclientauthenticationplugin"},"bookkeeperClientAuthenticationPlugin"),(0,n.kt)("p",null,"Authentication plugin to be used when connecting to bookies (BookKeeper servers)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperclientauthenticationparametersname"},"bookkeeperClientAuthenticationParametersName"),(0,n.kt)("p",null,"BookKeeper authentication plugin implementation parameters and values."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperclientauthenticationparameters"},"bookkeeperClientAuthenticationParameters"),(0,n.kt)("p",null,"Parameters associated with the bookkeeperClientAuthenticationParametersName"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperclientnumworkerthreads"},"bookkeeperClientNumWorkerThreads"),(0,n.kt)("p",null,"Number of BookKeeper client worker threads. Default is Runtime.getRuntime().availableProcessors()"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperclienttimeoutinseconds"},"bookkeeperClientTimeoutInSeconds"),(0,n.kt)("p",null,"Timeout for BookKeeper add and read operations."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"bookkeeperclientspeculativereadtimeoutinmillis"},"bookkeeperClientSpeculativeReadTimeoutInMillis"),(0,n.kt)("p",null,"Speculative reads are initiated if a read request doesn\u2019t complete within a certain time. A value of 0 disables speculative reads."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"bookkeeperusev2wireprotocol"},"bookkeeperUseV2WireProtocol"),(0,n.kt)("p",null,"Use older Bookkeeper wire protocol with bookie."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"bookkeeperclienthealthcheckenabled"},"bookkeeperClientHealthCheckEnabled"),(0,n.kt)("p",null,"Enable bookie health checks."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"bookkeeperclienthealthcheckintervalseconds"},"bookkeeperClientHealthCheckIntervalSeconds"),(0,n.kt)("p",null,"The time interval, in seconds, at which health checks are performed. New ledgers are not created during health checks."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60"),(0,n.kt)("h3",{id:"bookkeeperclienthealthcheckerrorthresholdperinterval"},"bookkeeperClientHealthCheckErrorThresholdPerInterval"),(0,n.kt)("p",null,"Error threshold for health checks."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5"),(0,n.kt)("h3",{id:"bookkeeperclienthealthcheckquarantinetimeinseconds"},"bookkeeperClientHealthCheckQuarantineTimeInSeconds"),(0,n.kt)("p",null,"If bookies have more than the allowed number of failures within the time interval specified by bookkeeperClientHealthCheckIntervalSeconds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1800"),(0,n.kt)("h3",{id:"bookkeeperclientgetbookieinfointervalseconds"},"bookkeeperClientGetBookieInfoIntervalSeconds"),(0,n.kt)("p",null,"Specify options for the GetBookieInfo check. This setting helps ensure the list of bookies that are up to date on the brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 86400"),(0,n.kt)("h3",{id:"bookkeeperclientgetbookieinforetryintervalseconds"},"bookkeeperClientGetBookieInfoRetryIntervalSeconds"),(0,n.kt)("p",null,"Specify options for the GetBookieInfo check. This setting helps ensure the list of bookies that are up to date on the brokers."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60"),(0,n.kt)("h3",{id:"bookkeeperclientrackawarepolicyenabled"},"bookkeeperClientRackawarePolicyEnabled"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"bookkeeperclientregionawarepolicyenabled"},"bookkeeperClientRegionawarePolicyEnabled"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookkeeperclientminnumracksperwritequorum"},"bookkeeperClientMinNumRacksPerWriteQuorum"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 2"),(0,n.kt)("h3",{id:"bookkeeperclientminnumracksperwritequorum-1"},"bookkeeperClientMinNumRacksPerWriteQuorum"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookkeeperclientreorderreadsequenceenabled"},"bookkeeperClientReorderReadSequenceEnabled"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookkeeperclientisolationgroups"},"bookkeeperClientIsolationGroups"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperclientsecondaryisolationgroups"},"bookkeeperClientSecondaryIsolationGroups"),(0,n.kt)("p",null,"Enable bookie secondary-isolation group if bookkeeperClientIsolationGroups doesn't have enough bookie available."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperclientminavailablebookiesinisolationgroups"},"bookkeeperClientMinAvailableBookiesInIsolationGroups"),(0,n.kt)("p",null,"Minimum bookies that should be available as part of bookkeeperClientIsolationGroups else broker will include bookkeeperClientSecondaryIsolationGroups bookies in isolated list."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeepertlsproviderfactoryclass"},"bookkeeperTLSProviderFactoryClass"),(0,n.kt)("p",null,"Set the client security provider factory class name."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": org.apache.bookkeeper.tls.TLSContextFactory"),(0,n.kt)("h3",{id:"bookkeepertlsclientauthentication"},"bookkeeperTLSClientAuthentication"),(0,n.kt)("p",null,"Enable TLS authentication with bookie."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookkeepertlskeyfiletype"},"bookkeeperTLSKeyFileType"),(0,n.kt)("p",null,"Supported type: PEM, JKS, PKCS12."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": PEM"),(0,n.kt)("h3",{id:"bookkeepertlstrustcerttypes"},"bookkeeperTLSTrustCertTypes"),(0,n.kt)("p",null,"Supported type: PEM, JKS, PKCS12."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": PEM"),(0,n.kt)("h3",{id:"bookkeepertlskeystorepasswordpath"},"bookkeeperTLSKeyStorePasswordPath"),(0,n.kt)("p",null,"Path to file containing keystore password, if the client keystore is password protected."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeepertlstruststorepasswordpath"},"bookkeeperTLSTrustStorePasswordPath"),(0,n.kt)("p",null,"Path to file containing truststore password, if the client truststore is password protected."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeepertlskeyfilepath"},"bookkeeperTLSKeyFilePath"),(0,n.kt)("p",null,"Path for the TLS private key file."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeepertlscertificatefilepath"},"bookkeeperTLSCertificateFilePath"),(0,n.kt)("p",null,"Path for the TLS certificate file."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeepertlstrustcertsfilepath"},"bookkeeperTLSTrustCertsFilePath"),(0,n.kt)("p",null,"Path for the trusted TLS certificate file."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeepertlscertfilesrefreshdurationseconds"},"bookkeeperTlsCertFilesRefreshDurationSeconds"),(0,n.kt)("p",null,"Tls cert refresh duration at bookKeeper-client in seconds (0 to disable check)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),":"),(0,n.kt)("h3",{id:"bookkeeperdiskweightbasedplacementenabled"},"bookkeeperDiskWeightBasedPlacementEnabled"),(0,n.kt)("p",null,"Enable/Disable disk weight based placement."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookkeeperexplicitlacintervalinmills"},"bookkeeperExplicitLacIntervalInMills"),(0,n.kt)("p",null,"Set the interval to check the need for sending an explicit LAC. When the value is set to 0, no explicit LAC is sent."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"bookkeeperclientexposestatstoprometheus"},"bookkeeperClientExposeStatsToPrometheus"),(0,n.kt)("p",null,"Expose BookKeeper client managed ledger stats to Prometheus."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"managedledgerdefaultensemblesize"},"managedLedgerDefaultEnsembleSize"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"managedledgerdefaultwritequorum"},"managedLedgerDefaultWriteQuorum"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"managedledgerdefaultackquorum"},"managedLedgerDefaultAckQuorum"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"managedledgerdigesttype"},"managedLedgerDigestType"),(0,n.kt)("p",null,"Default type of checksum to use when writing to BookKeeper."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": CRC32C"),(0,n.kt)("h3",{id:"managedledgernumschedulerthreads"},"managedLedgerNumSchedulerThreads"),(0,n.kt)("p",null,"Number of threads to be used for managed ledger scheduled tasks."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": Runtime.getRuntime().availableProcessors()"),(0,n.kt)("h3",{id:"managedledgercachesizemb"},"managedLedgerCacheSizeMB"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"managedledgercachecopyentries"},"managedLedgerCacheCopyEntries"),(0,n.kt)("p",null,"Whether to copy the entry payloads when inserting in cache."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"managedledgercacheevictionwatermark"},"managedLedgerCacheEvictionWatermark"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0.9"),(0,n.kt)("h3",{id:"managedledgercacheevictionfrequency"},"managedLedgerCacheEvictionFrequency"),(0,n.kt)("p",null,"Configure the cache eviction frequency for the managed ledger cache (evictions/sec)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 100.0"),(0,n.kt)("h3",{id:"managedledgercacheevictiontimethresholdmillis"},"managedLedgerCacheEvictionTimeThresholdMillis"),(0,n.kt)("p",null,"All entries that have stayed in cache for more than the configured time, will be evicted"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"managedledgercursorbackloggedthreshold"},"managedLedgerCursorBackloggedThreshold"),(0,n.kt)("p",null,"Configure the threshold (in number of entries) from where a cursor should be considered 'backlogged' and thus should be set as inactive."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"managedledgerunackedrangesopencachesetenabled"},"managedLedgerUnackedRangesOpenCacheSetEnabled"),(0,n.kt)("p",null,"Use Open Range-Set to cache unacknowledged messages"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"managedledgerdefaultmarkdeleteratelimit"},"managedLedgerDefaultMarkDeleteRateLimit"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0.1"),(0,n.kt)("h3",{id:"managedledgermaxentriesperledger"},"managedLedgerMaxEntriesPerLedger"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50000"),(0,n.kt)("h3",{id:"managedledgerminledgerrollovertimeminutes"},"managedLedgerMinLedgerRolloverTimeMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10"),(0,n.kt)("h3",{id:"managedledgermaxledgerrollovertimeminutes"},"managedLedgerMaxLedgerRolloverTimeMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 240"),(0,n.kt)("h3",{id:"managedledgercursormaxentriesperledger"},"managedLedgerCursorMaxEntriesPerLedger"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50000"),(0,n.kt)("h3",{id:"managedledgercursorrollovertimeinseconds"},"managedLedgerCursorRolloverTimeInSeconds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 14400"),(0,n.kt)("h3",{id:"managedledgermaxsizeperledgermbytes"},"managedLedgerMaxSizePerLedgerMbytes"),(0,n.kt)("p",null,"Maximum ledger size before triggering a rollover for a topic."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 2048"),(0,n.kt)("h3",{id:"managedledgermaxunackedrangestopersist"},"managedLedgerMaxUnackedRangesToPersist"),(0,n.kt)("p",null,'Maximum number of "acknowledgment holes" that are going to be persistently stored. When acknowledging out of order, a consumer leaves holes that are supposed to be quickly filled by acknowledging all the messages. The information of which messages are acknowledged is persisted by compressing in "ranges" of messages that were acknowledged. After the max number of ranges is reached, the information is only tracked in memory and messages are redelivered in case of crashes.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10000"),(0,n.kt)("h3",{id:"managedledgermaxunackedrangestopersistinmetadatastore"},"managedLedgerMaxUnackedRangesToPersistInMetadataStore"),(0,n.kt)("p",null,'Maximum number of "acknowledgment holes" that can be stored in metadata store. If the number of unacknowledged message range is higher than this limit, the broker persists unacknowledged ranges into BookKeeper to avoid additional data overhead into metadata store.'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"autoskipnonrecoverabledata"},"autoSkipNonRecoverableData"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"managedledgermetadataoperationstimeoutseconds"},"managedLedgerMetadataOperationsTimeoutSeconds"),(0,n.kt)("p",null,"Operation timeout while updating managed-ledger metadata."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60"),(0,n.kt)("h3",{id:"managedledgerreadentrytimeoutseconds"},"managedLedgerReadEntryTimeoutSeconds"),(0,n.kt)("p",null,"Read entries timeout when the broker tries to read messages from BookKeeper."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"managedledgeraddentrytimeoutseconds"},"managedLedgerAddEntryTimeoutSeconds"),(0,n.kt)("p",null,"Add entry timeout when the broker tries to publish messages to BookKeeper."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"managedledgernewentriescheckdelayinmillis"},"managedLedgerNewEntriesCheckDelayInMillis"),(0,n.kt)("p",null,"New entries check delay for the cursor under the managed ledger. If no new messages in the topic, the cursor tries to check again after the delay time. For consumption latency sensitive scenarios, you can set the value to a smaller value or 0. Of course, a smaller value may degrade consumption throughput."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10"),(0,n.kt)("h3",{id:"managedledgerprometheusstatslatencyrolloverseconds"},"managedLedgerPrometheusStatsLatencyRolloverSeconds"),(0,n.kt)("p",null,"Managed ledger prometheus stats latency rollover seconds."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60"),(0,n.kt)("h3",{id:"managedledgertracetaskexecution"},"managedLedgerTraceTaskExecution"),(0,n.kt)("p",null,"Whether to trace managed ledger task execution time."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"loadbalancerenabled"},"loadBalancerEnabled"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"loadbalancerplacementstrategy"},"loadBalancerPlacementStrategy"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": weightedRandomSelection"),(0,n.kt)("h3",{id:"loadbalancerreportupdatethresholdpercentage"},"loadBalancerReportUpdateThresholdPercentage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10"),(0,n.kt)("h3",{id:"loadbalancerreportupdatemaxintervalminutes"},"loadBalancerReportUpdateMaxIntervalMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 15"),(0,n.kt)("h3",{id:"loadbalancerhostusagecheckintervalminutes"},"loadBalancerHostUsageCheckIntervalMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"loadbalancersheddingintervalminutes"},"loadBalancerSheddingIntervalMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"loadbalancersheddinggraceperiodminutes"},"loadBalancerSheddingGracePeriodMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"loadbalancerbrokermaxtopics"},"loadBalancerBrokerMaxTopics"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50000"),(0,n.kt)("h3",{id:"loadbalancerbrokerunderloadedthresholdpercentage"},"loadBalancerBrokerUnderloadedThresholdPercentage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1"),(0,n.kt)("h3",{id:"loadbalancerbrokeroverloadedthresholdpercentage"},"loadBalancerBrokerOverloadedThresholdPercentage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 85"),(0,n.kt)("h3",{id:"loadbalancerresourcequotaupdateintervalminutes"},"loadBalancerResourceQuotaUpdateIntervalMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 15"),(0,n.kt)("h3",{id:"loadbalancerbrokercomfortloadlevelpercentage"},"loadBalancerBrokerComfortLoadLevelPercentage"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 65"),(0,n.kt)("h3",{id:"loadbalancerautobundlesplitenabled"},"loadBalancerAutoBundleSplitEnabled"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"loadbalancerautounloadsplitbundlesenabled"},"loadBalancerAutoUnloadSplitBundlesEnabled"),(0,n.kt)("p",null,"Enable/Disable automatic unloading of split bundles."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"loadbalancernamespacebundlemaxtopics"},"loadBalancerNamespaceBundleMaxTopics"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"loadbalancernamespacebundlemaxsessions"},"loadBalancerNamespaceBundleMaxSessions"),(0,n.kt)("p",null,"Maximum sessions (producers + consumers) in a bundle, otherwise bundle split will be triggered."),(0,n.kt)("p",null,"To disable the threshold check, set the value to -1."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"loadbalancernamespacebundlemaxmsgrate"},"loadBalancerNamespaceBundleMaxMsgRate"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"loadbalancernamespacebundlemaxbandwidthmbytes"},"loadBalancerNamespaceBundleMaxBandwidthMbytes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 100"),(0,n.kt)("h3",{id:"loadbalancernamespacemaximumbundles"},"loadBalancerNamespaceMaximumBundles"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 128"),(0,n.kt)("h3",{id:"loadbalancerbrokerthresholdshedderpercentage"},"loadBalancerBrokerThresholdShedderPercentage"),(0,n.kt)("p",null,"The broker resource usage threshold. When the broker resource usage is greater than the pulsar cluster average resource usage, the threshold shedder is triggered to offload bundles from the broker. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10"),(0,n.kt)("h3",{id:"loadbalancermsgratedifferenceshedderthreshold"},"loadBalancerMsgRateDifferenceShedderThreshold"),(0,n.kt)("p",null,"Message-rate percentage threshold between highest and least loaded brokers for uniform load shedding."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 50"),(0,n.kt)("h3",{id:"loadbalancermsgthroughputmultiplierdifferenceshedderthreshold"},"loadBalancerMsgThroughputMultiplierDifferenceShedderThreshold"),(0,n.kt)("p",null,"Message-throughput threshold between highest and least loaded brokers for uniform load shedding."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 4"),(0,n.kt)("h3",{id:"loadbalancerhistoryresourcepercentage"},"loadBalancerHistoryResourcePercentage"),(0,n.kt)("p",null,"The history usage when calculating new resource usage. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0.9"),(0,n.kt)("h3",{id:"loadbalancerbandwithinresourceweight"},"loadBalancerBandwithInResourceWeight"),(0,n.kt)("p",null,"The BandWithIn usage weight when calculating new resource usage. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1.0"),(0,n.kt)("h3",{id:"loadbalancerbandwithoutresourceweight"},"loadBalancerBandwithOutResourceWeight"),(0,n.kt)("p",null,"The BandWithOut usage weight when calculating new resource usage. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1.0"),(0,n.kt)("h3",{id:"loadbalancercpuresourceweight"},"loadBalancerCPUResourceWeight"),(0,n.kt)("p",null,"The CPU usage weight when calculating new resource usage. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1.0"),(0,n.kt)("h3",{id:"loadbalancermemoryresourceweight"},"loadBalancerMemoryResourceWeight"),(0,n.kt)("p",null,"The heap memory usage weight when calculating new resource usage. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1.0"),(0,n.kt)("h3",{id:"loadbalancerdirectmemoryresourceweight"},"loadBalancerDirectMemoryResourceWeight"),(0,n.kt)("p",null,"The direct memory usage weight when calculating new resource usage. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1.0"),(0,n.kt)("h3",{id:"loadbalancerbundleunloadminthroughputthreshold"},"loadBalancerBundleUnloadMinThroughputThreshold"),(0,n.kt)("p",null,"Bundle unload minimum throughput threshold. Avoid bundle unload frequently. It only takes effect in the ThresholdShedder strategy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 10"),(0,n.kt)("h3",{id:"namespacebundleunloadingtimeoutms"},"namespaceBundleUnloadingTimeoutMs"),(0,n.kt)("p",null,"Time to wait for the unloading of a namespace bundle in milliseconds."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 60000"),(0,n.kt)("h3",{id:"replicationmetricsenabled"},"replicationMetricsEnabled"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"replicationconnectionsperbroker"},"replicationConnectionsPerBroker"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 16"),(0,n.kt)("h3",{id:"replicationproducerqueuesize"},"replicationProducerQueueSize"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"replicationpolicycheckdurationseconds"},"replicationPolicyCheckDurationSeconds"),(0,n.kt)("p",null,"Duration to check replication policy to avoid replicator inconsistency due to missing ZooKeeper watch. When the value is set to 0, disable checking replication policy."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 600"),(0,n.kt)("h3",{id:"transactioncoordinatorenabled"},"transactionCoordinatorEnabled"),(0,n.kt)("p",null,"Whether to enable transaction coordinator in broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"transactionmetadatastoreproviderclassname"},"transactionMetadataStoreProviderClassName"),(0,n.kt)("p",null,"The class name of transactionMetadataStoreProvider."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": org.apache.pulsar.transaction.coordinator.impl.MLTransactionMetadataStoreProvider"),(0,n.kt)("h3",{id:"transactionbufferclientoperationtimeoutinmills"},"transactionBufferClientOperationTimeoutInMills"),(0,n.kt)("p",null,"The transaction buffer client's operation timeout in milliseconds."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 3000"),(0,n.kt)("h3",{id:"transactionbuffersnapshotmaxtransactioncount"},"transactionBufferSnapshotMaxTransactionCount"),(0,n.kt)("p",null,"Transaction buffer takes a snapshot after the number of transaction operations reaches this value."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"),(0,n.kt)("h3",{id:"transactionbuffersnapshotmintimeinmillis"},"transactionBufferSnapshotMinTimeInMillis"),(0,n.kt)("p",null,"The interval between two snapshots that the transaction buffer takes (in milliseconds)."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 5000"),(0,n.kt)("h3",{id:"defaultretentiontimeinminutes"},"defaultRetentionTimeInMinutes"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"defaultretentionsizeinmb"},"defaultRetentionSizeInMB"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"keepaliveintervalseconds"},"keepAliveIntervalSeconds"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"haproxyprotocolenabled"},"haProxyProtocolEnabled"),(0,n.kt)("p",null,"Enable or disable the ",(0,n.kt)("a",{parentName:"p",href:"http://www.haproxy.org/"},"HAProxy")," protocol."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"bookieid"},"bookieId"),(0,n.kt)("p",null,"If you want to custom a bookie ID or use a dynamic network address for a bookie, you can set the ",(0,n.kt)("inlineCode",{parentName:"p"},"bookieId"),"."),(0,n.kt)("p",null,"Bookie advertises itself using the ",(0,n.kt)("inlineCode",{parentName:"p"},"bookieId")," rather than the ",(0,n.kt)("inlineCode",{parentName:"p"},"BookieSocketAddress")," (",(0,n.kt)("inlineCode",{parentName:"p"},"hostname:port")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"IP:port"),")."),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"bookieId")," is a non-empty string that can contain ASCII digits and letters (","[a-zA-Z9-0]","), colons, dashes, and dots."),(0,n.kt)("p",null,"For more information about ",(0,n.kt)("inlineCode",{parentName:"p"},"bookieId"),", see ",(0,n.kt)("a",{parentName:"p",href:"http://bookkeeper.apache.org/bps/BP-41-bookieid/"},"here"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": /"),(0,n.kt)("h3",{id:"maxtopicspernamespace"},"maxTopicsPerNamespace"),(0,n.kt)("p",null,"The maximum number of persistent topics that can be created in the namespace. When the number of topics reaches this threshold, the broker rejects the request of creating a new topic, including the auto-created topics by the producer or consumer, until the number of connected consumers decreases. The default value 0 disables the check."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 0"),(0,n.kt)("h3",{id:"metadatastoreconfigpath"},"metadataStoreConfigPath"),(0,n.kt)("p",null,"The configuration file path of the local metadata store. Standalone Pulsar uses ",(0,n.kt)("a",{parentName:"p",href:"http://rocksdb.org/"},"RocksDB")," as the local metadata store. The format is ",(0,n.kt)("inlineCode",{parentName:"p"},"/xxx/xx/rocksdb.ini"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"schemaregistrystorageclassname"},"schemaRegistryStorageClassName"),(0,n.kt)("p",null,"The schema storage implementation used by this broker."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": org.apache.pulsar.broker.service.schema.BookkeeperSchemaStorageFactory"),(0,n.kt)("h3",{id:"isschemavalidationenforced"},"isSchemaValidationEnforced"),(0,n.kt)("p",null,"Whether to enable schema validation, when schema validation is enabled, if a producer without a schema attempts to produce the message to a topic with schema, the producer is rejected and disconnected."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": false"),(0,n.kt)("h3",{id:"isallowautoupdateschemaenabled"},"isAllowAutoUpdateSchemaEnabled"),(0,n.kt)("p",null,"Allow schema to be auto updated at broker level."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": true"),(0,n.kt)("h3",{id:"schemaregistrycompatibilitycheckers"},"schemaRegistryCompatibilityCheckers"),(0,n.kt)("p",null,"Deploy the schema compatibility checker for a specific schema type to enforce schema compatibility check."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": org.apache.pulsar.broker.service.schema.JsonSchemaCompatibilityCheck,org.apache.pulsar.broker.service.schema.AvroSchemaCompatibilityCheck,org.apache.pulsar.broker.service.schema.ProtobufNativeSchemaCompatibilityCheck"),(0,n.kt)("h3",{id:"schemacompatibilitystrategy"},"schemaCompatibilityStrategy"),(0,n.kt)("p",null,"The schema compatibility strategy at broker level, see ",(0,n.kt)("a",{parentName:"p",href:"/docs/next/schema-evolution-compatibility#schema-compatibility-check-strategy"},"here")," for available values."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": FULL"),(0,n.kt)("h3",{id:"systemtopicschemacompatibilitystrategy"},"systemTopicSchemaCompatibilityStrategy"),(0,n.kt)("p",null,"The schema compatibility strategy is used for system topics, see ",(0,n.kt)("a",{parentName:"p",href:"/docs/next/schema-evolution-compatibility#schema-compatibility-check-strategy"},"here")," for available values."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": ALWAYS_COMPATIBLE"),(0,n.kt)("h3",{id:"managedcursorinfocompressiontype"},"managedCursorInfoCompressionType"),(0,n.kt)("p",null,"The compression type of managed cursor information."),(0,n.kt)("p",null,"Available options are ",(0,n.kt)("inlineCode",{parentName:"p"},"NONE"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"LZ4"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"ZLIB"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"ZSTD"),", and ",(0,n.kt)("inlineCode",{parentName:"p"},"SNAPPY"),")."),(0,n.kt)("p",null,"If this value is ",(0,n.kt)("inlineCode",{parentName:"p"},"NONE"),", managed cursor information is not compressed."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": NONE"),(0,n.kt)("h2",{id:"deprecated"},"Deprecated"),(0,n.kt)("p",null,"The following parameters have been deprecated in the ",(0,n.kt)("inlineCode",{parentName:"p"},"conf/standalone.conf")," file."),(0,n.kt)("h3",{id:"zookeeperservers"},"zookeeperServers"),(0,n.kt)("p",null,"The quorum connection string for local metadata store. Use ",(0,n.kt)("inlineCode",{parentName:"p"},"metadataStoreUrl")," instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"configurationstoreservers"},"configurationStoreServers"),(0,n.kt)("p",null,"Configuration store connection string (as a comma-separated list). Use ",(0,n.kt)("inlineCode",{parentName:"p"},"configurationMetadataStoreUrl")," instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": N/A"),(0,n.kt)("h3",{id:"zookeeperoperationtimeoutseconds"},"zooKeeperOperationTimeoutSeconds"),(0,n.kt)("p",null,"ZooKeeper operation timeout in seconds. Use ",(0,n.kt)("inlineCode",{parentName:"p"},"metadataStoreOperationTimeoutSeconds")," instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30"),(0,n.kt)("h3",{id:"zookeepercacheexpiryseconds"},"zooKeeperCacheExpirySeconds"),(0,n.kt)("p",null,"ZooKeeper cache expiry time in seconds. Use ",(0,n.kt)("inlineCode",{parentName:"p"},"metadataStoreCacheExpirySeconds")," instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 300"),(0,n.kt)("h3",{id:"zookeepersessiontimeoutmillis"},"zooKeeperSessionTimeoutMillis"),(0,n.kt)("p",null,"The ZooKeeper session timeout, in milliseconds. Use ",(0,n.kt)("inlineCode",{parentName:"p"},"metadataStoreSessionTimeoutMillis")," instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 30000"),(0,n.kt)("h3",{id:"managedledgermaxunackedrangestopersistinzookeeper"},"managedLedgerMaxUnackedRangesToPersistInZooKeeper"),(0,n.kt)("p",null,'Maximum number of "acknowledgment holes" that can be stored in ZooKeeper. Use ',(0,n.kt)("inlineCode",{parentName:"p"},"managedLedgerMaxUnackedRangesToPersistInMetadataStore")," instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Default"),": 1000"))}p.isMDXComponent=!0}}]);