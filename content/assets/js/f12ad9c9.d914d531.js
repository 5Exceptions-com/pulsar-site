"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[7083],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=c(a),h=r,m=d["".concat(s,".").concat(h)]||d[h]||o[h]||l;return a?n.createElement(m,i(i({ref:t},u),{},{components:a})):n.createElement(m,i({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var c=2;c<l;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2376:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>o,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const l={id:"client-libraries-cpp",title:"The Pulsar C++ client",sidebar_label:"C++",original_id:"client-libraries-cpp"},i=void 0,p={unversionedId:"client-libraries-cpp",id:"version-2.1.0-incubating/client-libraries-cpp",title:"The Pulsar C++ client",description:"Supported platforms",source:"@site/versioned_docs/version-2.1.0-incubating/client-libraries-cpp.md",sourceDirName:".",slug:"/client-libraries-cpp",permalink:"/docs/2.1.0-incubating/client-libraries-cpp",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/client-libraries-cpp.md",tags:[],version:"2.1.0-incubating",frontMatter:{id:"client-libraries-cpp",title:"The Pulsar C++ client",sidebar_label:"C++",original_id:"client-libraries-cpp"},sidebar:"version-2.1.0-incubating/docsSidebar",previous:{title:"Python",permalink:"/docs/2.1.0-incubating/client-libraries-python"},next:{title:"WebSocket",permalink:"/docs/2.1.0-incubating/client-libraries-websocket"}},s={},c=[{value:"Supported platforms",id:"supported-platforms",level:2},{value:"Linux",id:"linux",level:2},{value:"Install",id:"install",level:3},{value:"RPM",id:"rpm",level:4},{value:"DEB",id:"deb",level:4},{value:"Build",id:"build",level:3},{value:"RPM",id:"rpm-1",level:4},{value:"Deb",id:"deb-1",level:4},{value:"MacOS",id:"macos",level:2},{value:"Connection URLs",id:"connection-urls",level:2},{value:"Consumer",id:"consumer",level:2},{value:"Producer",id:"producer",level:2},{value:"Authentication",id:"authentication",level:2}],u={toc:c};function o(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"supported-platforms"},"Supported platforms"),(0,r.kt)("p",null,"The Pulsar C++ client has been successfully tested on ",(0,r.kt)("strong",{parentName:"p"},"MacOS")," and ",(0,r.kt)("strong",{parentName:"p"},"Linux"),"."),(0,r.kt)("h2",{id:"linux"},"Linux"),(0,r.kt)("h3",{id:"install"},"Install"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Since the 2.1.0 release, Pulsar ships pre-built RPM and Debian packages. You can choose to download\nand install those packages instead of building them yourself.")),(0,r.kt)("h4",{id:"rpm"},"RPM"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Link"),(0,r.kt)("th",{parentName:"tr",align:null},"Crypto files"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-2.1.0-1_incubating.x86_64.rpm"},"client")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-2.1.0-1_incubating.x86_64.rpm.asc"},"asc"),", ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-2.1.0-1_incubating.x86_64.rpm.sha512"},"sha512"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-debuginfo-2.1.0-1_incubating.x86_64.rpm"},"client-debuginfo")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-debuginfo-2.1.0-1_incubating.x86_64.rpm.asc"},"asc"),",  ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-debuginfo-2.1.0-1_incubating.x86_64.rpm.sha512"},"sha512"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-devel-2.1.0-1_incubating.x86_64.rpm"},"client-devel")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-devel-2.1.0-1_incubating.x86_64.rpm.asc"},"asc"),",  ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/RPMS/apache-pulsar-client-devel-2.1.0-1_incubating.x86_64.rpm.sha512"},"sha512"))))),(0,r.kt)("p",null,"To install a RPM package, download the RPM packages and install them using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ rpm -ivh apache-pulsar-client*.rpm\n\n")),(0,r.kt)("h4",{id:"deb"},"DEB"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Link"),(0,r.kt)("th",{parentName:"tr",align:null},"Crypto files"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client.deb"},"client")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client.deb.asc"},"asc"),", ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client.deb.sha1"},"sha1"),", ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client.deb.sha512"},"sha512"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client-dev.deb"},"client-devel")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client-dev.deb.asc"},"asc"),", ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client-dev.deb.sha1"},"sha1"),", ",(0,r.kt)("a",{parentName:"td",href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/DEB/apache-pulsar-client-dev.deb.sha512"},"sha512"))))),(0,r.kt)("p",null,"To install a DEB package, download the DEB packages and install them using the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ apt-install apache-pulsar-client*.deb\n\n")),(0,r.kt)("h3",{id:"build"},"Build"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you want to build RPM and Debian packages off latest master, you can follow the instructions\nbelow to do so. All the instructions are run at the root directory of your cloned Pulsar\nrepo.")),(0,r.kt)("p",null,"There are recipes that build RPM and Debian packages containing a\nstatically linked ",(0,r.kt)("inlineCode",{parentName:"p"},"libpulsar.so")," / ",(0,r.kt)("inlineCode",{parentName:"p"},"libpulsar.a")," with all the required\ndependencies."),(0,r.kt)("p",null,"To build the C++ library packages, first build the Java packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\nmvn install -DskipTests\n\n")),(0,r.kt)("h4",{id:"rpm-1"},"RPM"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-client-cpp/pkg/rpm/docker-build-rpm.sh\n\n")),(0,r.kt)("p",null,"This will build the RPM inside a Docker container and it will leave the RPMs\nin ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client-cpp/pkg/rpm/RPMS/x86_64/"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Package name"),(0,r.kt)("th",{parentName:"tr",align:null},"Content"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pulsar-client"),(0,r.kt)("td",{parentName:"tr",align:null},"Shared library ",(0,r.kt)("inlineCode",{parentName:"td"},"libpulsar.so"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pulsar-client-devel"),(0,r.kt)("td",{parentName:"tr",align:null},"Static library ",(0,r.kt)("inlineCode",{parentName:"td"},"libpulsar.a")," and C++ and C headers")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pulsar-client-debuginfo"),(0,r.kt)("td",{parentName:"tr",align:null},"Debug symbols for ",(0,r.kt)("inlineCode",{parentName:"td"},"libpulsar.so"))))),(0,r.kt)("h4",{id:"deb-1"},"Deb"),(0,r.kt)("p",null,"To build Debian packages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-client-cpp/pkg/deb/docker-build-deb.sh\n\n")),(0,r.kt)("p",null,"Debian packages will be created at ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client-cpp/pkg/deb/BUILD/DEB/")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Package name"),(0,r.kt)("th",{parentName:"tr",align:null},"Content"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pulsar-client"),(0,r.kt)("td",{parentName:"tr",align:null},"Shared library ",(0,r.kt)("inlineCode",{parentName:"td"},"libpulsar.so"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"pulsar-client-dev"),(0,r.kt)("td",{parentName:"tr",align:null},"Static library ",(0,r.kt)("inlineCode",{parentName:"td"},"libpulsar.a")," and C++ and C headers")))),(0,r.kt)("h2",{id:"macos"},"MacOS"),(0,r.kt)("p",null,"Use the ",(0,r.kt)("a",{parentName:"p",href:"https://brew.sh/"},"Homebrew")," supplied recipe to build the Pulsar\nclient lib on MacOS."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\nbrew install https://raw.githubusercontent.com/apache/incubator-pulsar/master/pulsar-client-cpp/homebrew/libpulsar.rb\n\n")),(0,r.kt)("p",null,"If using Python 3 on MacOS, add the flag ",(0,r.kt)("inlineCode",{parentName:"p"},"--with-python3")," to the above command."),(0,r.kt)("p",null,"This will install the package with the library and headers."),(0,r.kt)("h2",{id:"connection-urls"},"Connection URLs"),(0,r.kt)("p",null,"To connect to Pulsar using client libraries, you need to specify a Pulsar protocol URL."),(0,r.kt)("p",null,"Pulsar protocol URLs are assigned to specific clusters, use the pulsar URI scheme and have a default port of 6650. Here\u2019s an example for localhost:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"\npulsar://localhost:6650\n\n")),(0,r.kt)("p",null,"A URL for a production Pulsar cluster may look something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"\npulsar://pulsar.us-west.example.com:6650\n\n")),(0,r.kt)("p",null,"If you\u2019re using TLS authentication, the URL will look like something like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"\npulsar+ssl://pulsar.us-west.example.com:6651\n\n")),(0,r.kt)("h2",{id:"consumer"},"Consumer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'\nClient client("pulsar://localhost:6650");\n\nConsumer consumer;\nResult result = client.subscribe("my-topic", "my-subscribtion-name", consumer);\nif (result != ResultOk) {\n    LOG_ERROR("Failed to subscribe: " << result);\n    return -1;\n}\n\nMessage msg;\n\nwhile (true) {\n    consumer.receive(msg);\n    LOG_INFO("Received: " << msg\n            << "  with payload \'" << msg.getDataAsString() << "\'");\n\n    consumer.acknowledge(msg);\n}\n\nclient.close();\n\n')),(0,r.kt)("h2",{id:"producer"},"Producer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-c++"},'\nClient client("pulsar://localhost:6650");\n\nProducer producer;\nResult result = client.createProducer("my-topic", producer);\nif (result != ResultOk) {\n    LOG_ERROR("Error creating producer: " << result);\n    return -1;\n}\n\n// Publish 10 messages to the topic\nfor (int i = 0; i < 10; i++){\n    Message msg = MessageBuilder().setContent("my-message").build();\n    Result res = producer.send(msg);\n    LOG_INFO("Message sent: " << res);\n}\nclient.close();\n\n')),(0,r.kt)("h2",{id:"authentication"},"Authentication"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'\nClientConfiguration config = ClientConfiguration();\nconfig.setUseTls(true);\nconfig.setTlsTrustCertsFilePath("/path/to/cacert.pem");\nconfig.setTlsAllowInsecureConnection(false);\nconfig.setAuth(pulsar::AuthTls::create(\n            "/path/to/client-cert.pem", "/path/to/client-key.pem"););\n\nClient client("pulsar+ssl://my-broker.com:6651", config);\n\n')))}o.isMDXComponent=!0}}]);