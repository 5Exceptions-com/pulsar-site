"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[8874],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||l;return a?n.createElement(k,i(i({ref:t},c),{},{components:a})):n.createElement(k,i({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},8686:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(87462),r=(a(67294),a(3905));const l={id:"standalone",title:"Setting up a local standalone cluster",sidebar_label:"Run Pulsar locally",original_id:"standalone"},i=void 0,o={unversionedId:"standalone",id:"version-2.1.0-incubating/standalone",title:"Setting up a local standalone cluster",description:"For the purposes of local development and testing, you can run Pulsar in standalone mode on your own machine. Standalone mode includes a Pulsar broker as well as the necessary ZooKeeper and BookKeeper components running inside of a single Java Virtual Machine (JVM) process.",source:"@site/versioned_docs/version-2.1.0-incubating/standalone.md",sourceDirName:".",slug:"/standalone",permalink:"/docs/2.1.0-incubating/standalone",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/standalone.md",tags:[],version:"2.1.0-incubating",frontMatter:{id:"standalone",title:"Setting up a local standalone cluster",sidebar_label:"Run Pulsar locally",original_id:"standalone"}},s={},p=[{value:"Run Pulsar Standalone Manually",id:"run-pulsar-standalone-manually",level:2},{value:"System requirements",id:"system-requirements",level:3},{value:"Installing Pulsar",id:"installing-pulsar",level:3},{value:"What your package contains",id:"what-your-package-contains",level:3},{value:"Installing Builtin Connectors",id:"installing-builtin-connectors",level:3},{value:"Starting the cluster",id:"starting-the-cluster",level:3},{value:"Testing your cluster setup",id:"testing-your-cluster-setup",level:2},{value:"Using Pulsar clients locally",id:"using-pulsar-clients-locally",level:2}],c={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"For the purposes of local development and testing, you can run Pulsar in standalone mode on your own machine. Standalone mode includes a Pulsar broker as well as the necessary ZooKeeper and BookKeeper components running inside of a single Java Virtual Machine (JVM) process."),(0,r.kt)("blockquote",null,(0,r.kt)("h4",{parentName:"blockquote",id:"pulsar-in-production"},"Pulsar in production?"),(0,r.kt)("p",{parentName:"blockquote"},"If you're looking to run a full production Pulsar installation, see the ",(0,r.kt)("a",{parentName:"p",href:"deploy-bare-metal"},"Deploying a Pulsar instance")," guide.")),(0,r.kt)("h2",{id:"run-pulsar-standalone-manually"},"Run Pulsar Standalone Manually"),(0,r.kt)("h3",{id:"system-requirements"},"System requirements"),(0,r.kt)("p",null,"Currently, Pulsar is available for 64-bit ",(0,r.kt)("strong",{parentName:"p"},"macOS"),", ",(0,r.kt)("strong",{parentName:"p"},"Linux"),", and ",(0,r.kt)("strong",{parentName:"p"},"Windows"),". To use Pulsar, you need to install 64-bit JRE/JDK 8 or later versions."),(0,r.kt)("h3",{id:"installing-pulsar"},"Installing Pulsar"),(0,r.kt)("p",null,"To get started running Pulsar, download a binary tarball release in one of the following ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"by clicking the link below and downloading the release from an Apache mirror:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/apache-pulsar-2.1.0-incubating-bin.tar.gz",download:!0},"Pulsar 2.1.0-incubating binary release")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"from the Pulsar ",(0,r.kt)("a",{parentName:"p",href:"/download"},"downloads page"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"from the Pulsar ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-pulsar/releases/latest"},"releases page"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"using ",(0,r.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/wget"},"wget"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ wget https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/apache-pulsar-2.1.0-incubating-bin.tar.gz\n\n")))),(0,r.kt)("p",null,"Once the tarball is downloaded, untar it and ",(0,r.kt)("inlineCode",{parentName:"p"},"cd")," into the resulting directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ tar xvfz apache-pulsar-2.1.0-incubating-bin.tar.gz\n$ cd apache-pulsar-2.1.0-incubating\n\n")),(0,r.kt)("h3",{id:"what-your-package-contains"},"What your package contains"),(0,r.kt)("p",null,"The Pulsar binary package initially contains the following directories:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Directory"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Contains"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"bin")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Pulsar's command-line tools, such as ",(0,r.kt)("a",{parentName:"td",href:"/docs/2.1.0-incubating/reference-cli-tools#pulsar"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar"))," and ",(0,r.kt)("a",{parentName:"td",href:"/docs/2.1.0-incubating/reference-pulsar-admin"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar-admin")))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"conf")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Configuration files for Pulsar, including for ",(0,r.kt)("a",{parentName:"td",href:"/docs/2.1.0-incubating/reference-configuration#broker"},"broker configuration"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/2.1.0-incubating/reference-configuration#zookeeper"},"ZooKeeper configuration"),", and more")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"examples")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Java JAR file containing example ",(0,r.kt)("a",{parentName:"td",href:"/docs/2.1.0-incubating/functions-overview"},"Pulsar Functions"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"lib")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The ",(0,r.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/JAR_(file_format)"},"JAR")," files used by Pulsar")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"licenses")),(0,r.kt)("td",{parentName:"tr",align:"left"},"License files, in ",(0,r.kt)("inlineCode",{parentName:"td"},".txt")," form, for various components of the Pulsar ",(0,r.kt)("a",{parentName:"td",href:"https://github.com/apache/pulsar"},"codebase"))))),(0,r.kt)("p",null,"These directories will be created once you begin running Pulsar:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Directory"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Contains"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"data")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The data storage directory used by ZooKeeper and BookKeeper")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"instances")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Artifacts created for ",(0,r.kt)("a",{parentName:"td",href:"/docs/2.1.0-incubating/functions-overview"},"Pulsar Functions"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"logs")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Logs created by the installation")))),(0,r.kt)("h3",{id:"installing-builtin-connectors"},"Installing Builtin Connectors"),(0,r.kt)("p",null,"Since release ",(0,r.kt)("inlineCode",{parentName:"p"},"2.1.0-incubating"),", Pulsar releases a separate binary distribution, containing all the ",(0,r.kt)("inlineCode",{parentName:"p"},"builtin")," connectors.\nIf you would like to enable those ",(0,r.kt)("inlineCode",{parentName:"p"},"builtin")," connectors, you can download the connectors tarball release in one of the following ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"by clicking the link below and downloading the release from an Apache mirror:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{href:"https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/apache-pulsar-io-connectors-2.1.0-incubating-bin.tar.gz",download:!0},"Pulsar IO Connectors 2.1.0-incubating release")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"from the Pulsar ",(0,r.kt)("a",{parentName:"p",href:"/download"},"downloads page"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"from the Pulsar ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-pulsar/releases/latest"},"releases page"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"using ",(0,r.kt)("a",{parentName:"p",href:"https://www.gnu.org/software/wget"},"wget"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ wget https://archive.apache.org/dist/incubator/pulsar/pulsar-2.1.0-incubating/apache-pulsar-io-connectors-2.1.0-incubating-bin.tar.gz\n\n")))),(0,r.kt)("p",null,"Once the tarball is downloaded, in the pulsar directory, untar the io-connectors package and copy the connectors as ",(0,r.kt)("inlineCode",{parentName:"p"},"connectors"),"\nin the pulsar directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ tar xvfz /path/to/apache-pulsar-io-connectors-2.1.0-incubating-bin.tar.gz\n\n// you will find a directory named `apache-pulsar-io-connectors-2.1.0-incubating` in the pulsar directory\n// then copy the connectors\n\n$ cd apache-pulsar-io-connectors-2.1.0-incubating/connectors connectors\n\n$ ls connectors\npulsar-io-aerospike-2.1.0-incubating.nar\npulsar-io-cassandra-2.1.0-incubating.nar\npulsar-io-kafka-2.1.0-incubating.nar\npulsar-io-kinesis-2.1.0-incubating.nar\npulsar-io-rabbitmq-2.1.0-incubating.nar\npulsar-io-twitter-2.1.0-incubating.nar\n...\n\n")),(0,r.kt)("blockquote",null,(0,r.kt)("h4",{parentName:"blockquote",id:"notes"},"NOTES"),(0,r.kt)("p",{parentName:"blockquote"},"If you are running Pulsar in a bare metal cluster, you need to make sure ",(0,r.kt)("inlineCode",{parentName:"p"},"connectors")," tarball is unzipped in every broker's pulsar directory\n(or in every function-worker's pulsar directory if you are running a separate worker cluster for Pulsar functions)."),(0,r.kt)("p",{parentName:"blockquote"},"If you are ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/getting-started-docker"},"running Pulsar in Docker")," or deploying Pulsar using a docker image (e.g. ",(0,r.kt)("a",{parentName:"p",href:"deploy-kubernetes"},"K8S")," or ",(0,r.kt)("a",{parentName:"p",href:"https://dcos.io/"},"DC/OS"),"),\nyou can use ",(0,r.kt)("inlineCode",{parentName:"p"},"apachepulsar/pulsar-all")," image instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"apachepulsar/pulsar")," image. ",(0,r.kt)("inlineCode",{parentName:"p"},"apachepulsar/pulsar-all")," image has already bundled ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/io-overview#working-with-connectors"},"all builtin connectors"),".")),(0,r.kt)("h3",{id:"starting-the-cluster"},"Starting the cluster"),(0,r.kt)("p",null,"Once you have an up-to-date local copy of the release, you can start up a local cluster using the ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/reference-cli-tools#pulsar"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar"))," command, which is stored in the ",(0,r.kt)("inlineCode",{parentName:"p"},"bin")," directory, and specifying that you want to start up Pulsar in standalone mode:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ bin/pulsar standalone\n\n")),(0,r.kt)("p",null,"If Pulsar has been successfully started, you should see ",(0,r.kt)("inlineCode",{parentName:"p"},"INFO"),"-level log messages like this:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"\n2017-06-01 14:46:29,192 - INFO  - [main:WebSocketService@95] - Configuration Store cache started\n2017-06-01 14:46:29,192 - INFO  - [main:AuthenticationService@61] - Authentication is disabled\n2017-06-01 14:46:29,192 - INFO  - [main:WebSocketService@108] - Pulsar WebSocket Service started\n\n")),(0,r.kt)("blockquote",null,(0,r.kt)("h4",{parentName:"blockquote",id:"automatically-created-namespace"},"Automatically created namespace"),(0,r.kt)("p",{parentName:"blockquote"},"When you start a local standalone cluster, Pulsar will automatically create a ",(0,r.kt)("inlineCode",{parentName:"p"},"public/default")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/concepts-messaging#namespaces"},"namespace")," that you can use for development purposes. All Pulsar topics are managed within namespaces. For more info, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/concepts-messaging#topics"},"Topics"),".")),(0,r.kt)("h2",{id:"testing-your-cluster-setup"},"Testing your cluster setup"),(0,r.kt)("p",null,"Pulsar provides a CLI tool called ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/reference-cli-tools#pulsar-client"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar-client"))," that enables you to do things like send messages to a Pulsar topic in a running cluster. This command will send a simple message saying ",(0,r.kt)("inlineCode",{parentName:"p"},"hello-pulsar")," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"my-topic")," topic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'\n$ bin/pulsar-client produce my-topic --messages "hello-pulsar"\n\n')),(0,r.kt)("p",null,"If the message has been successfully published to the topic, you should see a confirmation like this in the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client")," logs:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n13:09:39.356 [main] INFO  org.apache.pulsar.client.cli.PulsarClientTool - 1 messages successfully produced\n\n")),(0,r.kt)("blockquote",null,(0,r.kt)("h4",{parentName:"blockquote",id:"no-need-to-explicitly-create-new-topics"},"No need to explicitly create new topics"),(0,r.kt)("p",{parentName:"blockquote"},"You may have noticed that we did not explicitly create the ",(0,r.kt)("inlineCode",{parentName:"p"},"my-topic")," topic to which we sent the ",(0,r.kt)("inlineCode",{parentName:"p"},"hello-pulsar")," message. If you attempt to write a message to a topic that does not yet exist, Pulsar will automatically create that topic for you.")),(0,r.kt)("h2",{id:"using-pulsar-clients-locally"},"Using Pulsar clients locally"),(0,r.kt)("p",null,"Pulsar currently offers client libraries for ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/client-libraries-java"},"Java"),", ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/client-libraries-python"},"Python"),", and ",(0,r.kt)("a",{parentName:"p",href:"client-libraries-cpp"},"C++"),". If you're running a local standalone cluster, you can use one of these root URLs for interacting with your cluster:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"http://localhost:8080")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pulsar://localhost:6650"))),(0,r.kt)("p",null,"Here's an example producer for a Pulsar topic using the ",(0,r.kt)("a",{parentName:"p",href:"client-libraries-java"},"Java")," client:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'\nString localClusterUrl = "pulsar://localhost:6650";\n\nPulsarClient client = PulsarClient.builder().serviceUrl(localClusterUrl).build();\nProducer<byte[]> producer = client.newProducer().topic("my-topic").create();\n\n')),(0,r.kt)("p",null,"Here's an example ",(0,r.kt)("a",{parentName:"p",href:"client-libraries-python"},"Python")," producer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\nimport pulsar\n\nclient = pulsar.Client('pulsar://localhost:6650')\nproducer = client.create_producer('my-topic')\n\n")),(0,r.kt)("p",null,"Finally, here's an example ",(0,r.kt)("a",{parentName:"p",href:"client-libraries-cpp"},"C++")," producer:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'\nClient client("pulsar://localhost:6650");\nProducer producer;\nResult result = client.createProducer("my-topic", producer);\nif (result != ResultOk) {\n    LOG_ERROR("Error creating producer: " << result);\n    return -1;\n}\n\n')))}u.isMDXComponent=!0}}]);