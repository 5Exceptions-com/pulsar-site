"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[548],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,h=m["".concat(p,".").concat(d)]||m[d]||u[d]||i;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},50428:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const i={id:"client-libraries-python",title:"The Pulsar Python client",sidebar_label:"Python",original_id:"client-libraries-python"},l=void 0,o={unversionedId:"client-libraries-python",id:"version-2.1.0-incubating/client-libraries-python",title:"The Pulsar Python client",description:"The Pulsar Python client library is a wrapper over the existing C++ client library and exposes all of the same features. You can find the code in the python subdirectory of the C++ client code.",source:"@site/versioned_docs/version-2.1.0-incubating/client-libraries-python.md",sourceDirName:".",slug:"/client-libraries-python",permalink:"/docs/2.1.0-incubating/client-libraries-python",draft:!1,editUrl:"https://github.com/apache/pulsar/edit/master/site2/docs/client-libraries-python.md",tags:[],version:"2.1.0-incubating",frontMatter:{id:"client-libraries-python",title:"The Pulsar Python client",sidebar_label:"Python",original_id:"client-libraries-python"},sidebar:"version-2.1.0-incubating/docsSidebar",previous:{title:"Go",permalink:"/docs/2.1.0-incubating/client-libraries-go"},next:{title:"C++",permalink:"/docs/2.1.0-incubating/client-libraries-cpp"}},p={},s=[{value:"Installation",id:"installation",level:2},{value:"Installation using pip",id:"installation-using-pip",level:3},{value:"Installing from source",id:"installing-from-source",level:3},{value:"API Reference",id:"api-reference",level:2},{value:"Examples",id:"examples",level:2},{value:"Producer example",id:"producer-example",level:3},{value:"Consumer example",id:"consumer-example",level:3},{value:"Reader interface example",id:"reader-interface-example",level:3}],c={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Pulsar Python client library is a wrapper over the existing ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/client-libraries-cpp"},"C++ client library")," and exposes all of the ",(0,r.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/api/cpp/2.1.0-incubating"},"same features"),". You can find the code in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/apache/incubator-pulsar/tree/master/pulsar-client-cpp/python"},(0,r.kt)("inlineCode",{parentName:"a"},"python")," subdirectory")," of the C++ client code."),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("p",null,"You can install the ",(0,r.kt)("a",{parentName:"p",href:"https://pypi.python.org/pypi/pulsar-client"},(0,r.kt)("inlineCode",{parentName:"a"},"pulsar-client"))," library either via ",(0,r.kt)("a",{parentName:"p",href:"https://pypi.python.org/pypi"},"PyPi"),", using ",(0,r.kt)("a",{parentName:"p",href:"#installation-using-pip"},"pip"),", or by building the library from source."),(0,r.kt)("h3",{id:"installation-using-pip"},"Installation using pip"),(0,r.kt)("p",null,"To install the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client")," library as a pre-built package using the ",(0,r.kt)("a",{parentName:"p",href:"https://pip.pypa.io/en/stable/"},"pip")," package manager:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pip install pulsar-client==2.1.0\n\n")),(0,r.kt)("p",null,"Installation via PyPi is available for the following Python versions:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Platform"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Supported Python versions"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"MacOS 10.12 (Sierra) and 10.13 (High Sierra)"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2.7, 3.6")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"Linux"),(0,r.kt)("td",{parentName:"tr",align:"left"},"2.7, 3.3, 3.4, 3.5, 3.6")))),(0,r.kt)("h3",{id:"installing-from-source"},"Installing from source"),(0,r.kt)("p",null,"To install the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client")," library by building from source, follow ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/client-libraries-cpp#compilation"},"these instructions")," and compile the Pulsar C++ client library. That will also build the Python binding for the library."),(0,r.kt)("p",null,"To install the built Python bindings:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ git clone https://github.com/apache/pulsar\n$ cd pulsar/pulsar-client-cpp/python\n$ sudo python setup.py install\n\n")),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("p",null,"The complete Python API reference is available at ",(0,r.kt)("a",{parentName:"p",href:"https://pulsar.apache.org/api/python/2.1.0-incubating"},"api/python"),"."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"Below you'll find a variety of Python code examples for the ",(0,r.kt)("inlineCode",{parentName:"p"},"pulsar-client")," library."),(0,r.kt)("h3",{id:"producer-example"},"Producer example"),(0,r.kt)("p",null,"This creates a Python producer for the ",(0,r.kt)("inlineCode",{parentName:"p"},"my-topic")," topic and send 10 messages on that topic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\nimport pulsar\n\nclient = pulsar.Client('pulsar://localhost:6650')\n\nproducer = client.create_producer('my-topic')\n\nfor i in range(10):\n    producer.send(('Hello-%d' % i).encode('utf-8'))\n\nclient.close()\n\n")),(0,r.kt)("h3",{id:"consumer-example"},"Consumer example"),(0,r.kt)("p",null,"This creates a consumer with the ",(0,r.kt)("inlineCode",{parentName:"p"},"my-subscription")," subscription on the ",(0,r.kt)("inlineCode",{parentName:"p"},"my-topic")," topic, listen for incoming messages, print the content and ID of messages that arrive, and acknowledge each message to the Pulsar broker:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\nimport pulsar\n\nclient = pulsar.Client('pulsar://localhost:6650')\n\nconsumer = client.subscribe('my-topic', 'my-subscription')\n\nwhile True:\n    msg = consumer.receive()\n    print(\"Received message '{}' id='{}'\".format(msg.data(), msg.message_id()))\n    consumer.acknowledge(msg)\n\nclient.close()\n\n")),(0,r.kt)("h3",{id:"reader-interface-example"},"Reader interface example"),(0,r.kt)("p",null,"You can use the Pulsar Python API to use the Pulsar ",(0,r.kt)("a",{parentName:"p",href:"/docs/2.1.0-incubating/concepts-clients#reader-interface"},"reader interface"),". Here's an example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"\n# MessageId taken from a previously fetched message\nmsg_id = msg.message_id()\n\nreader = client.create_reader('my-topic', msg_id)\n\nwhile True:\n    msg = reader.read_next()\n    print(\"Received message '{}' id='{}'\".format(msg.data(), msg.message_id()))\n    # No acknowledgment\n\n")))}u.isMDXComponent=!0}}]);